function initLightbox(){jQuery('a.lightbox, a[rel*="lightbox"]').fancybox({loop:!1,helpers:{overlay:{css:{background:"rgba(0, 0, 0, 0.65)"}}},afterLoad:function(e,t){0===e.href.indexOf("#")&&jQuery(e.href).find("a.close").off("click.fb").on("click.fb",function(e){e.preventDefault(),jQuery.fancybox.close()})}})}function initAnchors(){new SmoothScroll({anchorLinks:".btn-back",extraOffset:0,wheelBehavior:"none"})}(function(){var t,i,o=function(e,t){return function(){return e.apply(t,arguments)}};t=function(){function e(){}return e.prototype.extend=function(e,t){var i,o;for(i in e)null!=(o=e[i])&&(t[i]=o);return t},e.prototype.isMobile=function(e){return/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(e)},e}(),i=this.WeakMap||(i=function(){function e(){this.keys=[],this.values=[]}return e.prototype.get=function(e){var t,i,o,s;for(t=i=0,o=(s=this.keys).length;i<o;t=++i)if(s[t]===e)return this.values[t]},e.prototype.set=function(e,t){var i,o,s,n;for(i=o=0,s=(n=this.keys).length;o<s;i=++o)if(n[i]===e)return void(this.values[i]=t);return this.keys.push(e),this.values.push(t)},e}()),this.WOW=function(){function e(e){null==e&&(e={}),this.scrollCallback=o(this.scrollCallback,this),this.scrollHandler=o(this.scrollHandler,this),this.start=o(this.start,this),this.scrolled=!0,this.config=this.util().extend(e,this.defaults),this.animationNameCache=new i}return e.prototype.defaults={boxClass:"wow",animateClass:"animated",offset:0,mobile:!0},e.prototype.init=function(){var e;return this.element=window.document.documentElement,"interactive"===(e=document.readyState)||"complete"===e?this.start():document.addEventListener("DOMContentLoaded",this.start)},e.prototype.start=function(){var e,t,i,o;if(this.boxes=this.element.getElementsByClassName(this.config.boxClass),this.boxes.length){if(this.disabled())return this.resetStyle();for(t=0,i=(o=this.boxes).length;t<i;t++)e=o[t],this.applyStyle(e,!0);return window.addEventListener("scroll",this.scrollHandler,!1),window.addEventListener("resize",this.scrollHandler,!1),this.interval=setInterval(this.scrollCallback,50)}},e.prototype.stop=function(){return window.removeEventListener("scroll",this.scrollHandler,!1),window.removeEventListener("resize",this.scrollHandler,!1),null!=this.interval?clearInterval(this.interval):void 0},e.prototype.show=function(e){return this.applyStyle(e),e.className=e.className+" "+this.config.animateClass},e.prototype.applyStyle=function(e,t){var i,o,s,n;return o=e.getAttribute("data-wow-duration"),i=e.getAttribute("data-wow-delay"),s=e.getAttribute("data-wow-iteration"),this.animate((n=this,function(){return n.customStyle(e,t,o,i,s)}))},e.prototype.animate="requestAnimationFrame"in window?function(e){return window.requestAnimationFrame(e)}:function(e){return e()},e.prototype.resetStyle=function(){var e,t,i,o,s;for(s=[],t=0,i=(o=this.boxes).length;t<i;t++)e=o[t],s.push(e.setAttribute("style","visibility: visible;"));return s},e.prototype.customStyle=function(e,t,i,o,s){return t&&this.cacheAnimationName(e),e.style.visibility=t?"hidden":"visible",i&&this.vendorSet(e.style,{animationDuration:i}),o&&this.vendorSet(e.style,{animationDelay:o}),s&&this.vendorSet(e.style,{animationIterationCount:s}),this.vendorSet(e.style,{animationName:t?"none":this.cachedAnimationName(e)}),e},e.prototype.vendors=["moz","webkit"],e.prototype.vendorSet=function(s,e){var n,r,a,t;for(n in t=[],e)r=e[n],s[""+n]=r,t.push(function(){var e,t,i,o;for(o=[],e=0,t=(i=this.vendors).length;e<t;e++)a=i[e],o.push(s[""+a+n.charAt(0).toUpperCase()+n.substr(1)]=r);return o}.call(this));return t},e.prototype.vendorCSS=function(e,t){var i,o,s,n,r,a;for(i=(o=window.getComputedStyle(e)).getPropertyCSSValue(t),n=0,r=(a=this.vendors).length;n<r;n++)s=a[n],i=i||o.getPropertyCSSValue("-"+s+"-"+t);return i},e.prototype.animationName=function(t){var i;try{i=this.vendorCSS(t,"animation-name").cssText}catch(e){i=window.getComputedStyle(t).getPropertyValue("animation-name")}return"none"===i?"":i},e.prototype.cacheAnimationName=function(e){return this.animationNameCache.set(e,this.animationName(e))},e.prototype.cachedAnimationName=function(e){return this.animationNameCache.get(e)},e.prototype.scrollHandler=function(){return this.scrolled=!0},e.prototype.scrollCallback=function(){var s;return this.scrolled&&(this.scrolled=!1,this.boxes=function(){var e,t,i,o;for(o=[],e=0,t=(i=this.boxes).length;e<t;e++)(s=i[e])&&(this.isVisible(s)?this.show(s):o.push(s));return o}.call(this),!this.boxes.length)?this.stop():void 0},e.prototype.offsetTop=function(e){for(var t;void 0===e.offsetTop;)e=e.parentNode;for(t=e.offsetTop;e=e.offsetParent;)t+=e.offsetTop;return t},e.prototype.isVisible=function(e){var t,i,o,s,n;return i=e.getAttribute("data-wow-offset")||this.config.offset,s=(n=window.pageYOffset)+this.element.clientHeight-i,t=(o=this.offsetTop(e))+e.clientHeight,o<=s&&n<=t},e.prototype.util=function(){return this._util||(this._util=new t)},e.prototype.disabled=function(){return!this.config.mobile&&this.util().isMobile(navigator.userAgent)},e}()}).call(this),function(e){"use strict";"function"==typeof define&&define.amd?define(["jquery"],e):"undefined"!=typeof exports?module.exports=e(require("jquery")):e(jQuery)}(function(d){"use strict";var s,r=window.Slick||{};s=0,(r=function(e,t){var i,o=this;o.defaults={accessibility:!0,adaptiveHeight:!1,appendArrows:d(e),appendDots:d(e),arrows:!0,asNavFor:null,prevArrow:'<button class="slick-prev" aria-label="Previous" type="button"></button>',nextArrow:'<button class="slick-next" aria-label="Next" type="button"></button>',autoplay:!1,autoplaySpeed:3e3,centerMode:!1,centerPadding:"50px",cssEase:"ease",customPaging:function(e,t){return d('<button type="button" />').text(t+1)},dots:!1,dotsClass:"slick-dots",draggable:!0,easing:"linear",edgeFriction:.35,fade:!1,focusOnSelect:!1,focusOnChange:!1,infinite:!0,initialSlide:0,lazyLoad:"ondemand",mobileFirst:!1,pauseOnHover:!0,pauseOnFocus:!0,pauseOnDotsHover:!1,respondTo:"window",responsive:null,rows:1,rtl:!1,slide:"",slidesPerRow:1,slidesToShow:1,slidesToScroll:1,speed:500,swipe:!0,swipeToSlide:!1,touchMove:!0,touchThreshold:5,useCSS:!0,useTransform:!0,variableWidth:!1,vertical:!1,verticalSwiping:!1,waitForAnimate:!0,zIndex:1e3},o.initials={animating:!1,dragging:!1,autoPlayTimer:null,currentDirection:0,currentLeft:null,currentSlide:0,direction:1,$dots:null,listWidth:null,listHeight:null,loadIndex:0,$nextArrow:null,$prevArrow:null,scrolling:!1,slideCount:null,slideWidth:null,$slideTrack:null,$slides:null,sliding:!1,slideOffset:0,swipeLeft:null,swiping:!1,$list:null,touchObject:{},transformsEnabled:!1,unslicked:!1},d.extend(o,o.initials),o.activeBreakpoint=null,o.animType=null,o.animProp=null,o.breakpoints=[],o.breakpointSettings=[],o.cssTransitions=!1,o.focussed=!1,o.interrupted=!1,o.hidden="hidden",o.paused=!0,o.positionProp=null,o.respondTo=null,o.rowCount=1,o.shouldClick=!0,o.$slider=d(e),o.$slidesCache=null,o.transformType=null,o.transitionType=null,o.visibilityChange="visibilitychange",o.windowWidth=0,o.windowTimer=null,i=d(e).data("slick")||{},o.options=d.extend({},o.defaults,t,i),o.currentSlide=o.options.initialSlide,o.originalSettings=o.options,void 0!==document.mozHidden?(o.hidden="mozHidden",o.visibilityChange="mozvisibilitychange"):void 0!==document.webkitHidden&&(o.hidden="webkitHidden",o.visibilityChange="webkitvisibilitychange"),o.autoPlay=d.proxy(o.autoPlay,o),o.autoPlayClear=d.proxy(o.autoPlayClear,o),o.autoPlayIterator=d.proxy(o.autoPlayIterator,o),o.changeSlide=d.proxy(o.changeSlide,o),o.clickHandler=d.proxy(o.clickHandler,o),o.selectHandler=d.proxy(o.selectHandler,o),o.setPosition=d.proxy(o.setPosition,o),o.swipeHandler=d.proxy(o.swipeHandler,o),o.dragHandler=d.proxy(o.dragHandler,o),o.keyHandler=d.proxy(o.keyHandler,o),o.instanceUid=s++,o.htmlExpr=/^(?:\s*(<[\w\W]+>)[^>]*)$/,o.registerBreakpoints(),o.init(!0)}).prototype.activateADA=function(){this.$slideTrack.find(".slick-active").attr({"aria-hidden":"false"}).find("a, input, button, select").attr({tabindex:"0"})},r.prototype.addSlide=r.prototype.slickAdd=function(e,t,i){var o=this;if("boolean"==typeof t)i=t,t=null;else if(t<0||t>=o.slideCount)return!1;o.unload(),"number"==typeof t?0===t&&0===o.$slides.length?d(e).appendTo(o.$slideTrack):i?d(e).insertBefore(o.$slides.eq(t)):d(e).insertAfter(o.$slides.eq(t)):!0===i?d(e).prependTo(o.$slideTrack):d(e).appendTo(o.$slideTrack),o.$slides=o.$slideTrack.children(this.options.slide),o.$slideTrack.children(this.options.slide).detach(),o.$slideTrack.append(o.$slides),o.$slides.each(function(e,t){d(t).attr("data-slick-index",e)}),o.$slidesCache=o.$slides,o.reinit()},r.prototype.animateHeight=function(){var e=this;if(1===e.options.slidesToShow&&!0===e.options.adaptiveHeight&&!1===e.options.vertical){var t=e.$slides.eq(e.currentSlide).outerHeight(!0);e.$list.animate({height:t},e.options.speed)}},r.prototype.animateSlide=function(e,t){var i={},o=this;o.animateHeight(),!0===o.options.rtl&&!1===o.options.vertical&&(e=-e),!1===o.transformsEnabled?!1===o.options.vertical?o.$slideTrack.animate({left:e},o.options.speed,o.options.easing,t):o.$slideTrack.animate({top:e},o.options.speed,o.options.easing,t):!1===o.cssTransitions?(!0===o.options.rtl&&(o.currentLeft=-o.currentLeft),d({animStart:o.currentLeft}).animate({animStart:e},{duration:o.options.speed,easing:o.options.easing,step:function(e){e=Math.ceil(e),!1===o.options.vertical?i[o.animType]="translate("+e+"px, 0px)":i[o.animType]="translate(0px,"+e+"px)",o.$slideTrack.css(i)},complete:function(){t&&t.call()}})):(o.applyTransition(),e=Math.ceil(e),!1===o.options.vertical?i[o.animType]="translate3d("+e+"px, 0px, 0px)":i[o.animType]="translate3d(0px,"+e+"px, 0px)",o.$slideTrack.css(i),t&&setTimeout(function(){o.disableTransition(),t.call()},o.options.speed))},r.prototype.getNavTarget=function(){var e=this.options.asNavFor;return e&&null!==e&&(e=d(e).not(this.$slider)),e},r.prototype.asNavFor=function(t){var e=this.getNavTarget();null!==e&&"object"==typeof e&&e.each(function(){var e=d(this).slick("getSlick");e.unslicked||e.slideHandler(t,!0)})},r.prototype.applyTransition=function(e){var t=this,i={};!1===t.options.fade?i[t.transitionType]=t.transformType+" "+t.options.speed+"ms "+t.options.cssEase:i[t.transitionType]="opacity "+t.options.speed+"ms "+t.options.cssEase,!1===t.options.fade?t.$slideTrack.css(i):t.$slides.eq(e).css(i)},r.prototype.autoPlay=function(){var e=this;e.autoPlayClear(),e.slideCount>e.options.slidesToShow&&(e.autoPlayTimer=setInterval(e.autoPlayIterator,e.options.autoplaySpeed))},r.prototype.autoPlayClear=function(){this.autoPlayTimer&&clearInterval(this.autoPlayTimer)},r.prototype.autoPlayIterator=function(){var e=this,t=e.currentSlide+e.options.slidesToScroll;e.paused||e.interrupted||e.focussed||(!1===e.options.infinite&&(1===e.direction&&e.currentSlide+1===e.slideCount-1?e.direction=0:0===e.direction&&(t=e.currentSlide-e.options.slidesToScroll,e.currentSlide-1==0&&(e.direction=1))),e.slideHandler(t))},r.prototype.buildArrows=function(){var e=this;!0===e.options.arrows&&(e.$prevArrow=d(e.options.prevArrow).addClass("slick-arrow"),e.$nextArrow=d(e.options.nextArrow).addClass("slick-arrow"),e.slideCount>e.options.slidesToShow?(e.$prevArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"),e.$nextArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"),e.htmlExpr.test(e.options.prevArrow)&&e.$prevArrow.prependTo(e.options.appendArrows),e.htmlExpr.test(e.options.nextArrow)&&e.$nextArrow.appendTo(e.options.appendArrows),!0!==e.options.infinite&&e.$prevArrow.addClass("slick-disabled").attr("aria-disabled","true")):e.$prevArrow.add(e.$nextArrow).addClass("slick-hidden").attr({"aria-disabled":"true",tabindex:"-1"}))},r.prototype.buildDots=function(){var e,t,i=this;if(!0===i.options.dots&&i.slideCount>i.options.slidesToShow){for(i.$slider.addClass("slick-dotted"),t=d("<ul />").addClass(i.options.dotsClass),e=0;e<=i.getDotCount();e+=1)t.append(d("<li />").append(i.options.customPaging.call(this,i,e)));i.$dots=t.appendTo(i.options.appendDots),i.$dots.find("li").first().addClass("slick-active")}},r.prototype.buildOut=function(){var e=this;e.$slides=e.$slider.children(e.options.slide+":not(.slick-cloned)").addClass("slick-slide"),e.slideCount=e.$slides.length,e.$slides.each(function(e,t){d(t).attr("data-slick-index",e).data("originalStyling",d(t).attr("style")||"")}),e.$slider.addClass("slick-slider"),e.$slideTrack=0===e.slideCount?d('<div class="slick-track"/>').appendTo(e.$slider):e.$slides.wrapAll('<div class="slick-track"/>').parent(),e.$list=e.$slideTrack.wrap('<div class="slick-list"/>').parent(),e.$slideTrack.css("opacity",0),!0!==e.options.centerMode&&!0!==e.options.swipeToSlide||(e.options.slidesToScroll=1),d("img[data-lazy]",e.$slider).not("[src]").addClass("slick-loading"),e.setupInfinite(),e.buildArrows(),e.buildDots(),e.updateDots(),e.setSlideClasses("number"==typeof e.currentSlide?e.currentSlide:0),!0===e.options.draggable&&e.$list.addClass("draggable")},r.prototype.buildRows=function(){var e,t,i,o,s,n,r,a=this;if(o=document.createDocumentFragment(),n=a.$slider.children(),0<a.options.rows){for(r=a.options.slidesPerRow*a.options.rows,s=Math.ceil(n.length/r),e=0;e<s;e++){var l=document.createElement("div");for(t=0;t<a.options.rows;t++){var d=document.createElement("div");for(i=0;i<a.options.slidesPerRow;i++){var c=e*r+(t*a.options.slidesPerRow+i);n.get(c)&&d.appendChild(n.get(c))}l.appendChild(d)}o.appendChild(l)}a.$slider.empty().append(o),a.$slider.children().children().children().css({width:100/a.options.slidesPerRow+"%",display:"inline-block"})}},r.prototype.checkResponsive=function(e,t){var i,o,s,n=this,r=!1,a=n.$slider.width(),l=window.innerWidth||d(window).width();if("window"===n.respondTo?s=l:"slider"===n.respondTo?s=a:"min"===n.respondTo&&(s=Math.min(l,a)),n.options.responsive&&n.options.responsive.length&&null!==n.options.responsive){for(i in o=null,n.breakpoints)n.breakpoints.hasOwnProperty(i)&&(!1===n.originalSettings.mobileFirst?s<n.breakpoints[i]&&(o=n.breakpoints[i]):s>n.breakpoints[i]&&(o=n.breakpoints[i]));null!==o?null!==n.activeBreakpoint?(o!==n.activeBreakpoint||t)&&(n.activeBreakpoint=o,"unslick"===n.breakpointSettings[o]?n.unslick(o):(n.options=d.extend({},n.originalSettings,n.breakpointSettings[o]),!0===e&&(n.currentSlide=n.options.initialSlide),n.refresh(e)),r=o):(n.activeBreakpoint=o,"unslick"===n.breakpointSettings[o]?n.unslick(o):(n.options=d.extend({},n.originalSettings,n.breakpointSettings[o]),!0===e&&(n.currentSlide=n.options.initialSlide),n.refresh(e)),r=o):null!==n.activeBreakpoint&&(n.activeBreakpoint=null,n.options=n.originalSettings,!0===e&&(n.currentSlide=n.options.initialSlide),n.refresh(e),r=o),e||!1===r||n.$slider.trigger("breakpoint",[n,r])}},r.prototype.changeSlide=function(e,t){var i,o,s=this,n=d(e.currentTarget);switch(n.is("a")&&e.preventDefault(),n.is("li")||(n=n.closest("li")),i=s.slideCount%s.options.slidesToScroll!=0?0:(s.slideCount-s.currentSlide)%s.options.slidesToScroll,e.data.message){case"previous":o=0===i?s.options.slidesToScroll:s.options.slidesToShow-i,s.slideCount>s.options.slidesToShow&&s.slideHandler(s.currentSlide-o,!1,t);break;case"next":o=0===i?s.options.slidesToScroll:i,s.slideCount>s.options.slidesToShow&&s.slideHandler(s.currentSlide+o,!1,t);break;case"index":var r=0===e.data.index?0:e.data.index||n.index()*s.options.slidesToScroll;s.slideHandler(s.checkNavigable(r),!1,t),n.children().trigger("focus");break;default:return}},r.prototype.checkNavigable=function(e){var t,i;if(i=0,e>(t=this.getNavigableIndexes())[t.length-1])e=t[t.length-1];else for(var o in t){if(e<t[o]){e=i;break}i=t[o]}return e},r.prototype.cleanUpEvents=function(){var e=this;e.options.dots&&null!==e.$dots&&(d("li",e.$dots).off("click.slick",e.changeSlide).off("mouseenter.slick",d.proxy(e.interrupt,e,!0)).off("mouseleave.slick",d.proxy(e.interrupt,e,!1)),!0===e.options.accessibility&&e.$dots.off("keydown.slick",e.keyHandler)),e.$slider.off("focus.slick blur.slick"),!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow&&e.$prevArrow.off("click.slick",e.changeSlide),e.$nextArrow&&e.$nextArrow.off("click.slick",e.changeSlide),!0===e.options.accessibility&&(e.$prevArrow&&e.$prevArrow.off("keydown.slick",e.keyHandler),e.$nextArrow&&e.$nextArrow.off("keydown.slick",e.keyHandler))),e.$list.off("touchstart.slick mousedown.slick",e.swipeHandler),e.$list.off("touchmove.slick mousemove.slick",e.swipeHandler),e.$list.off("touchend.slick mouseup.slick",e.swipeHandler),e.$list.off("touchcancel.slick mouseleave.slick",e.swipeHandler),e.$list.off("click.slick",e.clickHandler),d(document).off(e.visibilityChange,e.visibility),e.cleanUpSlideEvents(),!0===e.options.accessibility&&e.$list.off("keydown.slick",e.keyHandler),!0===e.options.focusOnSelect&&d(e.$slideTrack).children().off("click.slick",e.selectHandler),d(window).off("orientationchange.slick.slick-"+e.instanceUid,e.orientationChange),d(window).off("resize.slick.slick-"+e.instanceUid,e.resize),d("[draggable!=true]",e.$slideTrack).off("dragstart",e.preventDefault),d(window).off("load.slick.slick-"+e.instanceUid,e.setPosition)},r.prototype.cleanUpSlideEvents=function(){var e=this;e.$list.off("mouseenter.slick",d.proxy(e.interrupt,e,!0)),e.$list.off("mouseleave.slick",d.proxy(e.interrupt,e,!1))},r.prototype.cleanUpRows=function(){var e;0<this.options.rows&&((e=this.$slides.children().children()).removeAttr("style"),this.$slider.empty().append(e))},r.prototype.clickHandler=function(e){!1===this.shouldClick&&(e.stopImmediatePropagation(),e.stopPropagation(),e.preventDefault())},r.prototype.destroy=function(e){var t=this;t.autoPlayClear(),t.touchObject={},t.cleanUpEvents(),d(".slick-cloned",t.$slider).detach(),t.$dots&&t.$dots.remove(),t.$prevArrow&&t.$prevArrow.length&&(t.$prevArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display",""),t.htmlExpr.test(t.options.prevArrow)&&t.$prevArrow.remove()),t.$nextArrow&&t.$nextArrow.length&&(t.$nextArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display",""),t.htmlExpr.test(t.options.nextArrow)&&t.$nextArrow.remove()),t.$slides&&(t.$slides.removeClass("slick-slide slick-active slick-center slick-visible slick-current").removeAttr("aria-hidden").removeAttr("data-slick-index").each(function(){d(this).attr("style",d(this).data("originalStyling"))}),t.$slideTrack.children(this.options.slide).detach(),t.$slideTrack.detach(),t.$list.detach(),t.$slider.append(t.$slides)),t.cleanUpRows(),t.$slider.removeClass("slick-slider"),t.$slider.removeClass("slick-initialized"),t.$slider.removeClass("slick-dotted"),t.unslicked=!0,e||t.$slider.trigger("destroy",[t])},r.prototype.disableTransition=function(e){var t={};t[this.transitionType]="",!1===this.options.fade?this.$slideTrack.css(t):this.$slides.eq(e).css(t)},r.prototype.fadeSlide=function(e,t){var i=this;!1===i.cssTransitions?(i.$slides.eq(e).css({zIndex:i.options.zIndex}),i.$slides.eq(e).animate({opacity:1},i.options.speed,i.options.easing,t)):(i.applyTransition(e),i.$slides.eq(e).css({opacity:1,zIndex:i.options.zIndex}),t&&setTimeout(function(){i.disableTransition(e),t.call()},i.options.speed))},r.prototype.fadeSlideOut=function(e){var t=this;!1===t.cssTransitions?t.$slides.eq(e).animate({opacity:0,zIndex:t.options.zIndex-2},t.options.speed,t.options.easing):(t.applyTransition(e),t.$slides.eq(e).css({opacity:0,zIndex:t.options.zIndex-2}))},r.prototype.filterSlides=r.prototype.slickFilter=function(e){var t=this;null!==e&&(t.$slidesCache=t.$slides,t.unload(),t.$slideTrack.children(this.options.slide).detach(),t.$slidesCache.filter(e).appendTo(t.$slideTrack),t.reinit())},r.prototype.focusHandler=function(){var i=this;i.$slider.off("focus.slick blur.slick").on("focus.slick blur.slick","*",function(e){e.stopImmediatePropagation();var t=d(this);setTimeout(function(){i.options.pauseOnFocus&&(i.focussed=t.is(":focus"),i.autoPlay())},0)})},r.prototype.getCurrent=r.prototype.slickCurrentSlide=function(){return this.currentSlide},r.prototype.getDotCount=function(){var e=this,t=0,i=0,o=0;if(!0===e.options.infinite)if(e.slideCount<=e.options.slidesToShow)++o;else for(;t<e.slideCount;)++o,t=i+e.options.slidesToScroll,i+=e.options.slidesToScroll<=e.options.slidesToShow?e.options.slidesToScroll:e.options.slidesToShow;else if(!0===e.options.centerMode)o=e.slideCount;else if(e.options.asNavFor)for(;t<e.slideCount;)++o,t=i+e.options.slidesToScroll,i+=e.options.slidesToScroll<=e.options.slidesToShow?e.options.slidesToScroll:e.options.slidesToShow;else o=1+Math.ceil((e.slideCount-e.options.slidesToShow)/e.options.slidesToScroll);return o-1},r.prototype.getLeft=function(e){var t,i,o,s,n=this,r=0;return n.slideOffset=0,i=n.$slides.first().outerHeight(!0),!0===n.options.infinite?(n.slideCount>n.options.slidesToShow&&(n.slideOffset=n.slideWidth*n.options.slidesToShow*-1,s=-1,!0===n.options.vertical&&!0===n.options.centerMode&&(2===n.options.slidesToShow?s=-1.5:1===n.options.slidesToShow&&(s=-2)),r=i*n.options.slidesToShow*s),n.slideCount%n.options.slidesToScroll!=0&&e+n.options.slidesToScroll>n.slideCount&&n.slideCount>n.options.slidesToShow&&(r=e>n.slideCount?(n.slideOffset=(n.options.slidesToShow-(e-n.slideCount))*n.slideWidth*-1,(n.options.slidesToShow-(e-n.slideCount))*i*-1):(n.slideOffset=n.slideCount%n.options.slidesToScroll*n.slideWidth*-1,n.slideCount%n.options.slidesToScroll*i*-1))):e+n.options.slidesToShow>n.slideCount&&(n.slideOffset=(e+n.options.slidesToShow-n.slideCount)*n.slideWidth,r=(e+n.options.slidesToShow-n.slideCount)*i),n.slideCount<=n.options.slidesToShow&&(r=n.slideOffset=0),!0===n.options.centerMode&&n.slideCount<=n.options.slidesToShow?n.slideOffset=n.slideWidth*Math.floor(n.options.slidesToShow)/2-n.slideWidth*n.slideCount/2:!0===n.options.centerMode&&!0===n.options.infinite?n.slideOffset+=n.slideWidth*Math.floor(n.options.slidesToShow/2)-n.slideWidth:!0===n.options.centerMode&&(n.slideOffset=0,n.slideOffset+=n.slideWidth*Math.floor(n.options.slidesToShow/2)),t=!1===n.options.vertical?e*n.slideWidth*-1+n.slideOffset:e*i*-1+r,!0===n.options.variableWidth&&(o=n.slideCount<=n.options.slidesToShow||!1===n.options.infinite?n.$slideTrack.children(".slick-slide").eq(e):n.$slideTrack.children(".slick-slide").eq(e+n.options.slidesToShow),t=!0===n.options.rtl?o[0]?-1*(n.$slideTrack.width()-o[0].offsetLeft-o.width()):0:o[0]?-1*o[0].offsetLeft:0,!0===n.options.centerMode&&(o=n.slideCount<=n.options.slidesToShow||!1===n.options.infinite?n.$slideTrack.children(".slick-slide").eq(e):n.$slideTrack.children(".slick-slide").eq(e+n.options.slidesToShow+1),t=!0===n.options.rtl?o[0]?-1*(n.$slideTrack.width()-o[0].offsetLeft-o.width()):0:o[0]?-1*o[0].offsetLeft:0,t+=(n.$list.width()-o.outerWidth())/2)),t},r.prototype.getOption=r.prototype.slickGetOption=function(e){return this.options[e]},r.prototype.getNavigableIndexes=function(){var e,t=this,i=0,o=0,s=[];for(e=!1===t.options.infinite?t.slideCount:(i=-1*t.options.slidesToScroll,o=-1*t.options.slidesToScroll,2*t.slideCount);i<e;)s.push(i),i=o+t.options.slidesToScroll,o+=t.options.slidesToScroll<=t.options.slidesToShow?t.options.slidesToScroll:t.options.slidesToShow;return s},r.prototype.getSlick=function(){return this},r.prototype.getSlideCount=function(){var i,o,s=this;return o=!0===s.options.centerMode?s.slideWidth*Math.floor(s.options.slidesToShow/2):0,!0===s.options.swipeToSlide?(s.$slideTrack.find(".slick-slide").each(function(e,t){if(t.offsetLeft-o+d(t).outerWidth()/2>-1*s.swipeLeft)return i=t,!1}),Math.abs(d(i).attr("data-slick-index")-s.currentSlide)||1):s.options.slidesToScroll},r.prototype.goTo=r.prototype.slickGoTo=function(e,t){this.changeSlide({data:{message:"index",index:parseInt(e)}},t)},r.prototype.init=function(e){var t=this;d(t.$slider).hasClass("slick-initialized")||(d(t.$slider).addClass("slick-initialized"),t.buildRows(),t.buildOut(),t.setProps(),t.startLoad(),t.loadSlider(),t.initializeEvents(),t.updateArrows(),t.updateDots(),t.checkResponsive(!0),t.focusHandler()),e&&t.$slider.trigger("init",[t]),!0===t.options.accessibility&&t.initADA(),t.options.autoplay&&(t.paused=!1,t.autoPlay())},r.prototype.initADA=function(){var o=this,i=Math.ceil(o.slideCount/o.options.slidesToShow),s=o.getNavigableIndexes().filter(function(e){return 0<=e&&e<o.slideCount});o.$slides.add(o.$slideTrack.find(".slick-cloned")).attr({"aria-hidden":"true",tabindex:"-1"}).find("a, input, button, select").attr({tabindex:"-1"}),null!==o.$dots&&(o.$slides.not(o.$slideTrack.find(".slick-cloned")).each(function(e){var t=s.indexOf(e);if(d(this).attr({role:"tabpanel",id:"slick-slide"+o.instanceUid+e,tabindex:-1}),-1!==t){var i="slick-slide-control"+o.instanceUid+t;d("#"+i).length&&d(this).attr({"aria-describedby":i})}}),o.$dots.attr("role","tablist").find("li").each(function(e){var t=s[e];d(this).attr({role:"presentation"}),d(this).find("button").first().attr({role:"tab",id:"slick-slide-control"+o.instanceUid+e,"aria-controls":"slick-slide"+o.instanceUid+t,"aria-label":e+1+" of "+i,"aria-selected":null,tabindex:"-1"})}).eq(o.currentSlide).find("button").attr({"aria-selected":"true",tabindex:"0"}).end());for(var e=o.currentSlide,t=e+o.options.slidesToShow;e<t;e++)o.options.focusOnChange?o.$slides.eq(e).attr({tabindex:"0"}):o.$slides.eq(e).removeAttr("tabindex");o.activateADA()},r.prototype.initArrowEvents=function(){var e=this;!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow.off("click.slick").on("click.slick",{message:"previous"},e.changeSlide),e.$nextArrow.off("click.slick").on("click.slick",{message:"next"},e.changeSlide),!0===e.options.accessibility&&(e.$prevArrow.on("keydown.slick",e.keyHandler),e.$nextArrow.on("keydown.slick",e.keyHandler)))},r.prototype.initDotEvents=function(){var e=this;!0===e.options.dots&&e.slideCount>e.options.slidesToShow&&(d("li",e.$dots).on("click.slick",{message:"index"},e.changeSlide),!0===e.options.accessibility&&e.$dots.on("keydown.slick",e.keyHandler)),!0===e.options.dots&&!0===e.options.pauseOnDotsHover&&e.slideCount>e.options.slidesToShow&&d("li",e.$dots).on("mouseenter.slick",d.proxy(e.interrupt,e,!0)).on("mouseleave.slick",d.proxy(e.interrupt,e,!1))},r.prototype.initSlideEvents=function(){var e=this;e.options.pauseOnHover&&(e.$list.on("mouseenter.slick",d.proxy(e.interrupt,e,!0)),e.$list.on("mouseleave.slick",d.proxy(e.interrupt,e,!1)))},r.prototype.initializeEvents=function(){var e=this;e.initArrowEvents(),e.initDotEvents(),e.initSlideEvents(),e.$list.on("touchstart.slick mousedown.slick",{action:"start"},e.swipeHandler),e.$list.on("touchmove.slick mousemove.slick",{action:"move"},e.swipeHandler),e.$list.on("touchend.slick mouseup.slick",{action:"end"},e.swipeHandler),e.$list.on("touchcancel.slick mouseleave.slick",{action:"end"},e.swipeHandler),e.$list.on("click.slick",e.clickHandler),d(document).on(e.visibilityChange,d.proxy(e.visibility,e)),!0===e.options.accessibility&&e.$list.on("keydown.slick",e.keyHandler),!0===e.options.focusOnSelect&&d(e.$slideTrack).children().on("click.slick",e.selectHandler),d(window).on("orientationchange.slick.slick-"+e.instanceUid,d.proxy(e.orientationChange,e)),d(window).on("resize.slick.slick-"+e.instanceUid,d.proxy(e.resize,e)),d("[draggable!=true]",e.$slideTrack).on("dragstart",e.preventDefault),d(window).on("load.slick.slick-"+e.instanceUid,e.setPosition),d(e.setPosition)},r.prototype.initUI=function(){var e=this;!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow.show(),e.$nextArrow.show()),!0===e.options.dots&&e.slideCount>e.options.slidesToShow&&e.$dots.show()},r.prototype.keyHandler=function(e){var t=this;e.target.tagName.match("TEXTAREA|INPUT|SELECT")||(37===e.keyCode&&!0===t.options.accessibility?t.changeSlide({data:{message:!0===t.options.rtl?"next":"previous"}}):39===e.keyCode&&!0===t.options.accessibility&&t.changeSlide({data:{message:!0===t.options.rtl?"previous":"next"}}))},r.prototype.lazyLoad=function(){var e,t,i,n=this;function o(e){d("img[data-lazy]",e).each(function(){var e=d(this),t=d(this).attr("data-lazy"),i=d(this).attr("data-srcset"),o=d(this).attr("data-sizes")||n.$slider.attr("data-sizes"),s=document.createElement("img");s.onload=function(){e.animate({opacity:0},100,function(){i&&(e.attr("srcset",i),o&&e.attr("sizes",o)),e.attr("src",t).animate({opacity:1},200,function(){e.removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading")}),n.$slider.trigger("lazyLoaded",[n,e,t])})},s.onerror=function(){e.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"),n.$slider.trigger("lazyLoadError",[n,e,t])},s.src=t})}if(!0===n.options.centerMode?i=!0===n.options.infinite?(t=n.currentSlide+(n.options.slidesToShow/2+1))+n.options.slidesToShow+2:(t=Math.max(0,n.currentSlide-(n.options.slidesToShow/2+1)),n.options.slidesToShow/2+1+2+n.currentSlide):(t=n.options.infinite?n.options.slidesToShow+n.currentSlide:n.currentSlide,i=Math.ceil(t+n.options.slidesToShow),!0===n.options.fade&&(0<t&&t--,i<=n.slideCount&&i++)),e=n.$slider.find(".slick-slide").slice(t,i),"anticipated"===n.options.lazyLoad)for(var s=t-1,r=i,a=n.$slider.find(".slick-slide"),l=0;l<n.options.slidesToScroll;l++)s<0&&(s=n.slideCount-1),e=(e=e.add(a.eq(s))).add(a.eq(r)),s--,r++;o(e),n.slideCount<=n.options.slidesToShow?o(n.$slider.find(".slick-slide")):n.currentSlide>=n.slideCount-n.options.slidesToShow?o(n.$slider.find(".slick-cloned").slice(0,n.options.slidesToShow)):0===n.currentSlide&&o(n.$slider.find(".slick-cloned").slice(-1*n.options.slidesToShow))},r.prototype.loadSlider=function(){var e=this;e.setPosition(),e.$slideTrack.css({opacity:1}),e.$slider.removeClass("slick-loading"),e.initUI(),"progressive"===e.options.lazyLoad&&e.progressiveLazyLoad()},r.prototype.next=r.prototype.slickNext=function(){this.changeSlide({data:{message:"next"}})},r.prototype.orientationChange=function(){this.checkResponsive(),this.setPosition()},r.prototype.pause=r.prototype.slickPause=function(){this.autoPlayClear(),this.paused=!0},r.prototype.play=r.prototype.slickPlay=function(){var e=this;e.autoPlay(),e.options.autoplay=!0,e.paused=!1,e.focussed=!1,e.interrupted=!1},r.prototype.postSlide=function(e){var t=this;t.unslicked||(t.$slider.trigger("afterChange",[t,e]),t.animating=!1,t.slideCount>t.options.slidesToShow&&t.setPosition(),t.swipeLeft=null,t.options.autoplay&&t.autoPlay(),!0===t.options.accessibility&&(t.initADA(),t.options.focusOnChange&&d(t.$slides.get(t.currentSlide)).attr("tabindex",0).focus()))},r.prototype.prev=r.prototype.slickPrev=function(){this.changeSlide({data:{message:"previous"}})},r.prototype.preventDefault=function(e){e.preventDefault()},r.prototype.progressiveLazyLoad=function(e){e=e||1;var t,i,o,s,n,r=this,a=d("img[data-lazy]",r.$slider);a.length?(t=a.first(),i=t.attr("data-lazy"),o=t.attr("data-srcset"),s=t.attr("data-sizes")||r.$slider.attr("data-sizes"),(n=document.createElement("img")).onload=function(){o&&(t.attr("srcset",o),s&&t.attr("sizes",s)),t.attr("src",i).removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading"),!0===r.options.adaptiveHeight&&r.setPosition(),r.$slider.trigger("lazyLoaded",[r,t,i]),r.progressiveLazyLoad()},n.onerror=function(){e<3?setTimeout(function(){r.progressiveLazyLoad(e+1)},500):(t.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"),r.$slider.trigger("lazyLoadError",[r,t,i]),r.progressiveLazyLoad())},n.src=i):r.$slider.trigger("allImagesLoaded",[r])},r.prototype.refresh=function(e){var t,i,o=this;i=o.slideCount-o.options.slidesToShow,!o.options.infinite&&o.currentSlide>i&&(o.currentSlide=i),o.slideCount<=o.options.slidesToShow&&(o.currentSlide=0),t=o.currentSlide,o.destroy(!0),d.extend(o,o.initials,{currentSlide:t}),o.init(),e||o.changeSlide({data:{message:"index",index:t}},!1)},r.prototype.registerBreakpoints=function(){var e,t,i,o=this,s=o.options.responsive||null;if("array"===d.type(s)&&s.length){for(e in o.respondTo=o.options.respondTo||"window",s)if(i=o.breakpoints.length-1,s.hasOwnProperty(e)){for(t=s[e].breakpoint;0<=i;)o.breakpoints[i]&&o.breakpoints[i]===t&&o.breakpoints.splice(i,1),i--;o.breakpoints.push(t),o.breakpointSettings[t]=s[e].settings}o.breakpoints.sort(function(e,t){return o.options.mobileFirst?e-t:t-e})}},r.prototype.reinit=function(){var e=this;e.$slides=e.$slideTrack.children(e.options.slide).addClass("slick-slide"),e.slideCount=e.$slides.length,e.currentSlide>=e.slideCount&&0!==e.currentSlide&&(e.currentSlide=e.currentSlide-e.options.slidesToScroll),e.slideCount<=e.options.slidesToShow&&(e.currentSlide=0),e.registerBreakpoints(),e.setProps(),e.setupInfinite(),e.buildArrows(),e.updateArrows(),e.initArrowEvents(),e.buildDots(),e.updateDots(),e.initDotEvents(),e.cleanUpSlideEvents(),e.initSlideEvents(),e.checkResponsive(!1,!0),!0===e.options.focusOnSelect&&d(e.$slideTrack).children().on("click.slick",e.selectHandler),e.setSlideClasses("number"==typeof e.currentSlide?e.currentSlide:0),e.setPosition(),e.focusHandler(),e.paused=!e.options.autoplay,e.autoPlay(),e.$slider.trigger("reInit",[e])},r.prototype.resize=function(){var e=this;d(window).width()!==e.windowWidth&&(clearTimeout(e.windowDelay),e.windowDelay=window.setTimeout(function(){e.windowWidth=d(window).width(),e.checkResponsive(),e.unslicked||e.setPosition()},50))},r.prototype.removeSlide=r.prototype.slickRemove=function(e,t,i){var o=this;if(e="boolean"==typeof e?!0===(t=e)?0:o.slideCount-1:!0===t?--e:e,o.slideCount<1||e<0||e>o.slideCount-1)return!1;o.unload(),!0===i?o.$slideTrack.children().remove():o.$slideTrack.children(this.options.slide).eq(e).remove(),o.$slides=o.$slideTrack.children(this.options.slide),o.$slideTrack.children(this.options.slide).detach(),o.$slideTrack.append(o.$slides),o.$slidesCache=o.$slides,o.reinit()},r.prototype.setCSS=function(e){var t,i,o=this,s={};!0===o.options.rtl&&(e=-e),t="left"==o.positionProp?Math.ceil(e)+"px":"0px",i="top"==o.positionProp?Math.ceil(e)+"px":"0px",s[o.positionProp]=e,!1===o.transformsEnabled||(!(s={})===o.cssTransitions?s[o.animType]="translate("+t+", "+i+")":s[o.animType]="translate3d("+t+", "+i+", 0px)"),o.$slideTrack.css(s)},r.prototype.setDimensions=function(){var e=this;!1===e.options.vertical?!0===e.options.centerMode&&e.$list.css({padding:"0px "+e.options.centerPadding}):(e.$list.height(e.$slides.first().outerHeight(!0)*e.options.slidesToShow),!0===e.options.centerMode&&e.$list.css({padding:e.options.centerPadding+" 0px"})),e.listWidth=e.$list.width(),e.listHeight=e.$list.height(),!1===e.options.vertical&&!1===e.options.variableWidth?(e.slideWidth=Math.ceil(e.listWidth/e.options.slidesToShow),e.$slideTrack.width(Math.ceil(e.slideWidth*e.$slideTrack.children(".slick-slide").length))):!0===e.options.variableWidth?e.$slideTrack.width(5e3*e.slideCount):(e.slideWidth=Math.ceil(e.listWidth),e.$slideTrack.height(Math.ceil(e.$slides.first().outerHeight(!0)*e.$slideTrack.children(".slick-slide").length)));var t=e.$slides.first().outerWidth(!0)-e.$slides.first().width();!1===e.options.variableWidth&&e.$slideTrack.children(".slick-slide").width(e.slideWidth-t)},r.prototype.setFade=function(){var i,o=this;o.$slides.each(function(e,t){i=o.slideWidth*e*-1,!0===o.options.rtl?d(t).css({position:"relative",right:i,top:0,zIndex:o.options.zIndex-2,opacity:0}):d(t).css({position:"relative",left:i,top:0,zIndex:o.options.zIndex-2,opacity:0})}),o.$slides.eq(o.currentSlide).css({zIndex:o.options.zIndex-1,opacity:1})},r.prototype.setHeight=function(){var e=this;if(1===e.options.slidesToShow&&!0===e.options.adaptiveHeight&&!1===e.options.vertical){var t=e.$slides.eq(e.currentSlide).outerHeight(!0);e.$list.css("height",t)}},r.prototype.setOption=r.prototype.slickSetOption=function(){var e,t,i,o,s,n=this,r=!1;if("object"===d.type(arguments[0])?(i=arguments[0],r=arguments[1],s="multiple"):"string"===d.type(arguments[0])&&(i=arguments[0],o=arguments[1],r=arguments[2],"responsive"===arguments[0]&&"array"===d.type(arguments[1])?s="responsive":void 0!==arguments[1]&&(s="single")),"single"===s)n.options[i]=o;else if("multiple"===s)d.each(i,function(e,t){n.options[e]=t});else if("responsive"===s)for(t in o)if("array"!==d.type(n.options.responsive))n.options.responsive=[o[t]];else{for(e=n.options.responsive.length-1;0<=e;)n.options.responsive[e].breakpoint===o[t].breakpoint&&n.options.responsive.splice(e,1),e--;n.options.responsive.push(o[t])}r&&(n.unload(),n.reinit())},r.prototype.setPosition=function(){var e=this;e.setDimensions(),e.setHeight(),!1===e.options.fade?e.setCSS(e.getLeft(e.currentSlide)):e.setFade(),e.$slider.trigger("setPosition",[e])},r.prototype.setProps=function(){var e=this,t=document.body.style;e.positionProp=!0===e.options.vertical?"top":"left","top"===e.positionProp?e.$slider.addClass("slick-vertical"):e.$slider.removeClass("slick-vertical"),void 0===t.WebkitTransition&&void 0===t.MozTransition&&void 0===t.msTransition||!0===e.options.useCSS&&(e.cssTransitions=!0),e.options.fade&&("number"==typeof e.options.zIndex?e.options.zIndex<3&&(e.options.zIndex=3):e.options.zIndex=e.defaults.zIndex),void 0!==t.OTransform&&(e.animType="OTransform",e.transformType="-o-transform",e.transitionType="OTransition",void 0===t.perspectiveProperty&&void 0===t.webkitPerspective&&(e.animType=!1)),void 0!==t.MozTransform&&(e.animType="MozTransform",e.transformType="-moz-transform",e.transitionType="MozTransition",void 0===t.perspectiveProperty&&void 0===t.MozPerspective&&(e.animType=!1)),void 0!==t.webkitTransform&&(e.animType="webkitTransform",e.transformType="-webkit-transform",e.transitionType="webkitTransition",void 0===t.perspectiveProperty&&void 0===t.webkitPerspective&&(e.animType=!1)),void 0!==t.msTransform&&(e.animType="msTransform",e.transformType="-ms-transform",e.transitionType="msTransition",void 0===t.msTransform&&(e.animType=!1)),void 0!==t.transform&&!1!==e.animType&&(e.animType="transform",e.transformType="transform",e.transitionType="transition"),e.transformsEnabled=e.options.useTransform&&null!==e.animType&&!1!==e.animType},r.prototype.setSlideClasses=function(e){var t,i,o,s,n=this;if(i=n.$slider.find(".slick-slide").removeClass("slick-active slick-center slick-current").attr("aria-hidden","true"),n.$slides.eq(e).addClass("slick-current"),!0===n.options.centerMode){var r=n.options.slidesToShow%2==0?1:0;t=Math.floor(n.options.slidesToShow/2),!0===n.options.infinite&&(t<=e&&e<=n.slideCount-1-t?n.$slides.slice(e-t+r,e+t+1).addClass("slick-active").attr("aria-hidden","false"):(o=n.options.slidesToShow+e,i.slice(o-t+1+r,o+t+2).addClass("slick-active").attr("aria-hidden","false")),0===e?i.eq(i.length-1-n.options.slidesToShow).addClass("slick-center"):e===n.slideCount-1&&i.eq(n.options.slidesToShow).addClass("slick-center")),n.$slides.eq(e).addClass("slick-center")}else 0<=e&&e<=n.slideCount-n.options.slidesToShow?n.$slides.slice(e,e+n.options.slidesToShow).addClass("slick-active").attr("aria-hidden","false"):i.length<=n.options.slidesToShow?i.addClass("slick-active").attr("aria-hidden","false"):(s=n.slideCount%n.options.slidesToShow,o=!0===n.options.infinite?n.options.slidesToShow+e:e,n.options.slidesToShow==n.options.slidesToScroll&&n.slideCount-e<n.options.slidesToShow?i.slice(o-(n.options.slidesToShow-s),o+s).addClass("slick-active").attr("aria-hidden","false"):i.slice(o,o+n.options.slidesToShow).addClass("slick-active").attr("aria-hidden","false"));"ondemand"!==n.options.lazyLoad&&"anticipated"!==n.options.lazyLoad||n.lazyLoad()},r.prototype.setupInfinite=function(){var e,t,i,o=this;if(!0===o.options.fade&&(o.options.centerMode=!1),!0===o.options.infinite&&!1===o.options.fade&&(t=null,o.slideCount>o.options.slidesToShow)){for(i=!0===o.options.centerMode?o.options.slidesToShow+1:o.options.slidesToShow,e=o.slideCount;e>o.slideCount-i;e-=1)t=e-1,d(o.$slides[t]).clone(!0).attr("id","").attr("data-slick-index",t-o.slideCount).prependTo(o.$slideTrack).addClass("slick-cloned");for(e=0;e<i+o.slideCount;e+=1)t=e,d(o.$slides[t]).clone(!0).attr("id","").attr("data-slick-index",t+o.slideCount).appendTo(o.$slideTrack).addClass("slick-cloned");o.$slideTrack.find(".slick-cloned").find("[id]").each(function(){d(this).attr("id","")})}},r.prototype.interrupt=function(e){e||this.autoPlay(),this.interrupted=e},r.prototype.selectHandler=function(e){var t=d(e.target).is(".slick-slide")?d(e.target):d(e.target).parents(".slick-slide"),i=parseInt(t.attr("data-slick-index"));i||(i=0),this.slideCount<=this.options.slidesToShow?this.slideHandler(i,!1,!0):this.slideHandler(i)},r.prototype.slideHandler=function(e,t,i){var o,s,n,r,a,l,d=this;if(t=t||!1,!(!0===d.animating&&!0===d.options.waitForAnimate||!0===d.options.fade&&d.currentSlide===e))if(!1===t&&d.asNavFor(e),o=e,a=d.getLeft(o),r=d.getLeft(d.currentSlide),d.currentLeft=null===d.swipeLeft?r:d.swipeLeft,!1===d.options.infinite&&!1===d.options.centerMode&&(e<0||e>d.getDotCount()*d.options.slidesToScroll))!1===d.options.fade&&(o=d.currentSlide,!0!==i&&d.slideCount>d.options.slidesToShow?d.animateSlide(r,function(){d.postSlide(o)}):d.postSlide(o));else if(!1===d.options.infinite&&!0===d.options.centerMode&&(e<0||e>d.slideCount-d.options.slidesToScroll))!1===d.options.fade&&(o=d.currentSlide,!0!==i&&d.slideCount>d.options.slidesToShow?d.animateSlide(r,function(){d.postSlide(o)}):d.postSlide(o));else{if(d.options.autoplay&&clearInterval(d.autoPlayTimer),s=o<0?d.slideCount%d.options.slidesToScroll!=0?d.slideCount-d.slideCount%d.options.slidesToScroll:d.slideCount+o:o>=d.slideCount?d.slideCount%d.options.slidesToScroll!=0?0:o-d.slideCount:o,d.animating=!0,d.$slider.trigger("beforeChange",[d,d.currentSlide,s]),n=d.currentSlide,d.currentSlide=s,d.setSlideClasses(d.currentSlide),d.options.asNavFor&&(l=(l=d.getNavTarget()).slick("getSlick")).slideCount<=l.options.slidesToShow&&l.setSlideClasses(d.currentSlide),d.updateDots(),d.updateArrows(),!0===d.options.fade)return!0!==i?(d.fadeSlideOut(n),d.fadeSlide(s,function(){d.postSlide(s)})):d.postSlide(s),void d.animateHeight();!0!==i&&d.slideCount>d.options.slidesToShow?d.animateSlide(a,function(){d.postSlide(s)}):d.postSlide(s)}},r.prototype.startLoad=function(){var e=this;!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow.hide(),e.$nextArrow.hide()),!0===e.options.dots&&e.slideCount>e.options.slidesToShow&&e.$dots.hide(),e.$slider.addClass("slick-loading")},r.prototype.swipeDirection=function(){var e,t,i,o,s=this;return e=s.touchObject.startX-s.touchObject.curX,t=s.touchObject.startY-s.touchObject.curY,i=Math.atan2(t,e),(o=Math.round(180*i/Math.PI))<0&&(o=360-Math.abs(o)),o<=45&&0<=o?!1===s.options.rtl?"left":"right":o<=360&&315<=o?!1===s.options.rtl?"left":"right":135<=o&&o<=225?!1===s.options.rtl?"right":"left":!0===s.options.verticalSwiping?35<=o&&o<=135?"down":"up":"vertical"},r.prototype.swipeEnd=function(e){var t,i,o=this;if(o.dragging=!1,o.swiping=!1,o.scrolling)return o.scrolling=!1;if(o.interrupted=!1,o.shouldClick=!(10<o.touchObject.swipeLength),void 0===o.touchObject.curX)return!1;if(!0===o.touchObject.edgeHit&&o.$slider.trigger("edge",[o,o.swipeDirection()]),o.touchObject.swipeLength>=o.touchObject.minSwipe){switch(i=o.swipeDirection()){case"left":case"down":t=o.options.swipeToSlide?o.checkNavigable(o.currentSlide+o.getSlideCount()):o.currentSlide+o.getSlideCount(),o.currentDirection=0;break;case"right":case"up":t=o.options.swipeToSlide?o.checkNavigable(o.currentSlide-o.getSlideCount()):o.currentSlide-o.getSlideCount(),o.currentDirection=1}"vertical"!=i&&(o.slideHandler(t),o.touchObject={},o.$slider.trigger("swipe",[o,i]))}else o.touchObject.startX!==o.touchObject.curX&&(o.slideHandler(o.currentSlide),o.touchObject={})},r.prototype.swipeHandler=function(e){var t=this;if(!(!1===t.options.swipe||"ontouchend"in document&&!1===t.options.swipe||!1===t.options.draggable&&-1!==e.type.indexOf("mouse")))switch(t.touchObject.fingerCount=e.originalEvent&&void 0!==e.originalEvent.touches?e.originalEvent.touches.length:1,t.touchObject.minSwipe=t.listWidth/t.options.touchThreshold,!0===t.options.verticalSwiping&&(t.touchObject.minSwipe=t.listHeight/t.options.touchThreshold),e.data.action){case"start":t.swipeStart(e);break;case"move":t.swipeMove(e);break;case"end":t.swipeEnd(e)}},r.prototype.swipeMove=function(e){var t,i,o,s,n,r,a=this;return n=void 0!==e.originalEvent?e.originalEvent.touches:null,!(!a.dragging||a.scrolling||n&&1!==n.length)&&(t=a.getLeft(a.currentSlide),a.touchObject.curX=void 0!==n?n[0].pageX:e.clientX,a.touchObject.curY=void 0!==n?n[0].pageY:e.clientY,a.touchObject.swipeLength=Math.round(Math.sqrt(Math.pow(a.touchObject.curX-a.touchObject.startX,2))),r=Math.round(Math.sqrt(Math.pow(a.touchObject.curY-a.touchObject.startY,2))),!a.options.verticalSwiping&&!a.swiping&&4<r?!(a.scrolling=!0):(!0===a.options.verticalSwiping&&(a.touchObject.swipeLength=r),i=a.swipeDirection(),void 0!==e.originalEvent&&4<a.touchObject.swipeLength&&(a.swiping=!0,e.preventDefault()),s=(!1===a.options.rtl?1:-1)*(a.touchObject.curX>a.touchObject.startX?1:-1),!0===a.options.verticalSwiping&&(s=a.touchObject.curY>a.touchObject.startY?1:-1),o=a.touchObject.swipeLength,(a.touchObject.edgeHit=!1)===a.options.infinite&&(0===a.currentSlide&&"right"===i||a.currentSlide>=a.getDotCount()&&"left"===i)&&(o=a.touchObject.swipeLength*a.options.edgeFriction,a.touchObject.edgeHit=!0),!1===a.options.vertical?a.swipeLeft=t+o*s:a.swipeLeft=t+o*(a.$list.height()/a.listWidth)*s,!0===a.options.verticalSwiping&&(a.swipeLeft=t+o*s),!0!==a.options.fade&&!1!==a.options.touchMove&&(!0===a.animating?(a.swipeLeft=null,!1):void a.setCSS(a.swipeLeft))))},r.prototype.swipeStart=function(e){var t,i=this;if(i.interrupted=!0,1!==i.touchObject.fingerCount||i.slideCount<=i.options.slidesToShow)return!(i.touchObject={});void 0!==e.originalEvent&&void 0!==e.originalEvent.touches&&(t=e.originalEvent.touches[0]),i.touchObject.startX=i.touchObject.curX=void 0!==t?t.pageX:e.clientX,i.touchObject.startY=i.touchObject.curY=void 0!==t?t.pageY:e.clientY,i.dragging=!0},r.prototype.unfilterSlides=r.prototype.slickUnfilter=function(){var e=this;null!==e.$slidesCache&&(e.unload(),e.$slideTrack.children(this.options.slide).detach(),e.$slidesCache.appendTo(e.$slideTrack),e.reinit())},r.prototype.unload=function(){var e=this;d(".slick-cloned",e.$slider).remove(),e.$dots&&e.$dots.remove(),e.$prevArrow&&e.htmlExpr.test(e.options.prevArrow)&&e.$prevArrow.remove(),e.$nextArrow&&e.htmlExpr.test(e.options.nextArrow)&&e.$nextArrow.remove(),e.$slides.removeClass("slick-slide slick-active slick-visible slick-current").attr("aria-hidden","true").css("width","")},r.prototype.unslick=function(e){this.$slider.trigger("unslick",[this,e]),this.destroy()},r.prototype.updateArrows=function(){var e=this;Math.floor(e.options.slidesToShow/2),!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&!e.options.infinite&&(e.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false"),e.$nextArrow.removeClass("slick-disabled").attr("aria-disabled","false"),0===e.currentSlide?(e.$prevArrow.addClass("slick-disabled").attr("aria-disabled","true"),e.$nextArrow.removeClass("slick-disabled").attr("aria-disabled","false")):e.currentSlide>=e.slideCount-e.options.slidesToShow&&!1===e.options.centerMode?(e.$nextArrow.addClass("slick-disabled").attr("aria-disabled","true"),e.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false")):e.currentSlide>=e.slideCount-1&&!0===e.options.centerMode&&(e.$nextArrow.addClass("slick-disabled").attr("aria-disabled","true"),e.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false")))},r.prototype.updateDots=function(){var e=this;null!==e.$dots&&(e.$dots.find("li").removeClass("slick-active").end(),e.$dots.find("li").eq(Math.floor(e.currentSlide/e.options.slidesToScroll)).addClass("slick-active"))},r.prototype.visibility=function(){this.options.autoplay&&(document[this.hidden]?this.interrupted=!0:this.interrupted=!1)},d.fn.slick=function(){var e,t,i=this,o=arguments[0],s=Array.prototype.slice.call(arguments,1),n=i.length;for(e=0;e<n;e++)if("object"==typeof o||void 0===o?i[e].slick=new r(i[e],o):t=i[e].slick[o].apply(i[e].slick,s),void 0!==t)return t;return i}}),$(function(){$(".reviews-slider").slick({slidesToShow:4,slidesToScroll:1,prevArrow:$(".reviews-slider-nav .icon-arrow-thin-left"),nextArrow:$(".reviews-slider-nav .icon-arrow-thin-right"),dots:!0,responsive:[{breakpoint:1400,settings:{slidesToShow:3,slidesToScroll:1}},{breakpoint:1024,settings:{slidesToShow:2,slidesToScroll:2}},{breakpoint:600,settings:{slidesToShow:1,slidesToScroll:1}}]}),$(".partners-slider").slick({slidesToShow:4,slidesToScroll:2,responsive:[{breakpoint:1024,settings:{slidesToShow:3,slidesToScroll:1,dots:!0,autoplay:!0,arrow:!1}},{breakpoint:480,settings:{slidesToShow:2,slidesToScroll:2,dots:!0,autoplay:!0}}]}),$(".pro-slider").slick({slidesToShow:1,slidesToScroll:1,dots:!0}),$(".director-slider").slick({centerMode:!0,slidesToShow:3,slidesToScroll:1,centerPadding:"0",arrow:!0,responsive:[{breakpoint:768,settings:{centerMode:!0,dots:!0,slidesToShow:1}}]})}),jQuery(function(){initLightbox()}),function(o,i,$,c){var s=$("html"),n=$(o),d=$(i),A=$.fancybox=function(){A.open.apply(this,arguments)},r=navigator.userAgent.match(/msie/i),a=null,l=i.createTouch!==c,p=function(e){return e&&e.hasOwnProperty&&e instanceof $},h=function(e){return e&&"string"===$.type(e)},O=function(e){return h(e)&&0<e.indexOf("%")},H=function(e,t){var i=parseInt(e,10)||0;return t&&O(e)&&(i*=A.getViewport()[t]/100),Math.ceil(i)},P=function(e,t){return H(e,t)+"px"};$.extend(A,{version:"2.1.5",defaults:{padding:15,margin:20,width:800,height:600,minWidth:100,minHeight:100,maxWidth:9999,maxHeight:9999,pixelRatio:1,autoSize:!0,autoHeight:!1,autoWidth:!1,autoResize:!0,autoCenter:!l,fitToView:!0,aspectRatio:!1,topRatio:.5,leftRatio:.5,scrolling:"auto",wrapCSS:"",arrows:!0,closeBtn:!0,closeClick:!1,nextClick:!1,mouseWheel:!0,autoPlay:!1,playSpeed:3e3,preload:3,modal:!1,loop:!0,ajax:{dataType:"html",headers:{"X-fancyBox":!0}},iframe:{scrolling:"auto",preload:!0},swf:{wmode:"transparent",allowfullscreen:"true",allowscriptaccess:"always"},keys:{next:{13:"left",34:"up",39:"left",40:"up"},prev:{8:"right",33:"down",37:"right",38:"down"},close:[27],play:[32],toggle:[70]},direction:{next:"left",prev:"right"},scrollOutside:!0,index:0,type:null,href:null,content:null,title:null,tpl:{wrap:'<div class="fancybox-wrap" tabIndex="-1"><div class="fancybox-skin"><div class="fancybox-outer"><div class="fancybox-inner"></div></div></div></div>',image:'<img class="fancybox-image" src="{href}" alt="" />',iframe:'<iframe id="fancybox-frame{rnd}" name="fancybox-frame{rnd}" class="fancybox-iframe" frameborder="0" vspace="0" hspace="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen'+(r?' allowtransparency="true"':"")+"></iframe>",error:'<p class="fancybox-error">The requested content cannot be loaded.<br/>Please try again later.</p>',closeBtn:'<a title="Close" class="fancybox-item fancybox-close" href="javascript:;"></a>',next:'<a title="Next" class="fancybox-nav fancybox-next" href="javascript:;"><span></span></a>',prev:'<a title="Previous" class="fancybox-nav fancybox-prev" href="javascript:;"><span></span></a>'},openEffect:"fade",openSpeed:250,openEasing:"swing",openOpacity:!0,openMethod:"zoomIn",closeEffect:"fade",closeSpeed:250,closeEasing:"swing",closeOpacity:!0,closeMethod:"zoomOut",nextEffect:"elastic",nextSpeed:250,nextEasing:"swing",nextMethod:"changeIn",prevEffect:"elastic",prevSpeed:250,prevEasing:"swing",prevMethod:"changeOut",helpers:{overlay:!0,title:!0},onCancel:$.noop,beforeLoad:$.noop,afterLoad:$.noop,beforeShow:$.noop,afterShow:$.noop,beforeChange:$.noop,beforeClose:$.noop,afterClose:$.noop},group:{},opts:{},previous:null,coming:null,current:null,isActive:!1,isOpen:!1,isOpened:!1,wrap:null,skin:null,outer:null,inner:null,player:{timer:null,isActive:!1},ajaxLoad:null,imgPreload:null,transitions:{},helpers:{},open:function(l,d){if(l&&($.isPlainObject(d)||(d={}),!1!==A.close(!0)))return $.isArray(l)||(l=p(l)?$(l).get():[l]),$.each(l,function(e,t){var i,o,s,n,r,a={};"object"===$.type(t)&&(t.nodeType&&(t=$(t)),p(t)?(a={href:t.data("fancybox-href")||t.attr("href"),title:t.data("fancybox-title")||t.attr("title"),isDom:!0,element:t},$.metadata&&$.extend(!0,a,t.metadata())):a=t),i=d.href||a.href||(h(t)?t:null),o=d.title!==c?d.title:a.title||"",!(n=(s=d.content||a.content)?"html":d.type||a.type)&&a.isDom&&((n=t.data("fancybox-type"))||(n=(n=t.prop("class").match(/fancybox\.(\w+)/))?n[1]:null)),h(i)&&(n||(A.isImage(i)?n="image":A.isSWF(i)?n="swf":"#"===i.charAt(0)?n="inline":h(t)&&(n="html",s=t)),"ajax"===n&&(i=(r=i.split(/\s+/,2)).shift(),r=r.shift())),s||("inline"===n?i?s=$(h(i)?i.replace(/.*(?=#[^\s]+$)/,""):i):a.isDom&&(s=t):"html"===n?s=i:!n&&!i&&a.isDom&&(n="inline",s=t)),$.extend(a,{href:i,type:n,content:s,title:o,selector:r}),l[e]=a}),A.opts=$.extend(!0,{},A.defaults,d),d.keys!==c&&(A.opts.keys=!!d.keys&&$.extend({},A.defaults.keys,d.keys)),A.group=l,A._start(A.opts.index)},cancel:function(){var e=A.coming;e&&!1!==A.trigger("onCancel")&&(A.hideLoading(),A.ajaxLoad&&A.ajaxLoad.abort(),A.ajaxLoad=null,A.imgPreload&&(A.imgPreload.onload=A.imgPreload.onerror=null),e.wrap&&e.wrap.stop(!0,!0).trigger("onReset").remove(),A.coming=null,A.current||A._afterZoomOut(e))},close:function(e){A.cancel(),!1!==A.trigger("beforeClose")&&(A.unbindEvents(),A.isActive&&(A.isOpen&&!0!==e?(A.isOpen=A.isOpened=!1,A.isClosing=!0,$(".fancybox-item, .fancybox-nav").remove(),A.wrap.stop(!0,!0).removeClass("fancybox-opened"),A.transitions[A.current.closeMethod]()):($(".fancybox-wrap").stop(!0).trigger("onReset").remove(),A._afterZoomOut())))},play:function(e){var t=function(){clearTimeout(A.player.timer)},i=function(){t(),A.current&&A.player.isActive&&(A.player.timer=setTimeout(A.next,A.current.playSpeed))},o=function(){t(),d.unbind(".player"),A.player.isActive=!1,A.trigger("onPlayEnd")};!0===e||!A.player.isActive&&!1!==e?A.current&&(A.current.loop||A.current.index<A.group.length-1)&&(A.player.isActive=!0,d.bind({"onCancel.player beforeClose.player":o,"onUpdate.player":i,"beforeLoad.player":t}),i(),A.trigger("onPlayStart")):o()},next:function(e){var t=A.current;t&&(h(e)||(e=t.direction.next),A.jumpto(t.index+1,e,"next"))},prev:function(e){var t=A.current;t&&(h(e)||(e=t.direction.prev),A.jumpto(t.index-1,e,"prev"))},jumpto:function(e,t,i){var o=A.current;o&&(e=H(e),A.direction=t||o.direction[e>=o.index?"next":"prev"],A.router=i||"jumpto",o.loop&&(e<0&&(e=o.group.length+e%o.group.length),e%=o.group.length),o.group[e]!==c&&(A.cancel(),A._start(e)))},reposition:function(e,t){var i,o=A.current,s=o?o.wrap:null;s&&(i=A._getPosition(t),e&&"scroll"===e.type?(delete i.position,s.stop(!0,!0).animate(i,200)):(s.css(i),o.pos=$.extend({},o.dim,i)))},update:function(t){var i=t&&t.type,o=!i||"orientationchange"===i;o&&(clearTimeout(a),a=null),A.isOpen&&!a&&(a=setTimeout(function(){var e=A.current;e&&!A.isClosing&&(A.wrap.removeClass("fancybox-tmp"),(o||"load"===i||"resize"===i&&e.autoResize)&&A._setDimension(),"scroll"===i&&e.canShrink||A.reposition(t),A.trigger("onUpdate"),a=null)},o&&!l?0:300))},toggle:function(e){A.isOpen&&(A.current.fitToView="boolean"===$.type(e)?e:!A.current.fitToView,l&&(A.wrap.removeAttr("style").addClass("fancybox-tmp"),A.trigger("onUpdate")),A.update())},hideLoading:function(){d.unbind(".loading"),$("#fancybox-loading").remove()},showLoading:function(){var e,t;A.hideLoading(),e=$('<div id="fancybox-loading"><div></div></div>').click(A.cancel).appendTo("body"),d.bind("keydown.loading",function(e){27===(e.which||e.keyCode)&&(e.preventDefault(),A.cancel())}),A.defaults.fixed||(t=A.getViewport(),e.css({position:"absolute",top:.5*t.h+t.y,left:.5*t.w+t.x}))},getViewport:function(){var e=A.current&&A.current.locked||!1,t={x:n.scrollLeft(),y:n.scrollTop()};return t.h=e?(t.w=e[0].clientWidth,e[0].clientHeight):(t.w=l&&o.innerWidth?o.innerWidth:n.width(),l&&o.innerHeight?o.innerHeight:n.height()),t},unbindEvents:function(){A.wrap&&p(A.wrap)&&A.wrap.unbind(".fb"),d.unbind(".fb"),n.unbind(".fb")},bindEvents:function(){var t,r=A.current;r&&(n.bind("orientationchange.fb"+(l?"":" resize.fb")+(r.autoCenter&&!r.locked?" scroll.fb":""),A.update),(t=r.keys)&&d.bind("keydown.fb",function(i){var o=i.which||i.keyCode,e=i.target||i.srcElement;if(27===o&&A.coming)return!1;!i.ctrlKey&&!i.altKey&&!i.shiftKey&&!i.metaKey&&(!e||!e.type&&!$(e).is("[contenteditable]"))&&$.each(t,function(e,t){return 1<r.group.length&&t[o]!==c?(A[e](t[o]),i.preventDefault(),!1):-1<$.inArray(o,t)?(A[e](),i.preventDefault(),!1):void 0})}),$.fn.mousewheel&&r.mouseWheel&&A.wrap.bind("mousewheel.fb",function(e,t,i,o){for(var s=$(e.target||null),n=!1;s.length&&!n&&!s.is(".fancybox-skin")&&!s.is(".fancybox-wrap");)n=s[0]&&!(s[0].style.overflow&&"hidden"===s[0].style.overflow)&&(s[0].clientWidth&&s[0].scrollWidth>s[0].clientWidth||s[0].clientHeight&&s[0].scrollHeight>s[0].clientHeight),s=$(s).parent();0!==t&&!n&&1<A.group.length&&!r.canShrink&&(0<o||0<i?A.prev(0<o?"down":"left"):(o<0||i<0)&&A.next(o<0?"up":"right"),e.preventDefault())}))},trigger:function(i,e){var t,o=e||A.coming||A.current;if(o){if($.isFunction(o[i])&&(t=o[i].apply(o,Array.prototype.slice.call(arguments,1))),!1===t)return!1;o.helpers&&$.each(o.helpers,function(e,t){t&&A.helpers[e]&&$.isFunction(A.helpers[e][i])&&A.helpers[e][i]($.extend(!0,{},A.helpers[e].defaults,t),o)}),d.trigger(i)}},isImage:function(e){return h(e)&&e.match(/(^data:image\/.*,)|(\.(jp(e|g|eg)|gif|png|bmp|webp|svg)((\?|#).*)?$)/i)},isSWF:function(e){return h(e)&&e.match(/\.(swf)((\?|#).*)?$/i)},_start:function(e){var t,i,o={};if(e=H(e),!(t=A.group[e]||null))return!1;if(t=(o=$.extend(!0,{},A.opts,t)).margin,i=o.padding,"number"===$.type(t)&&(o.margin=[t,t,t,t]),"number"===$.type(i)&&(o.padding=[i,i,i,i]),o.modal&&$.extend(!0,o,{closeBtn:!1,closeClick:!1,nextClick:!1,arrows:!1,mouseWheel:!1,keys:null,helpers:{overlay:{closeClick:!1}}}),o.autoSize&&(o.autoWidth=o.autoHeight=!0),"auto"===o.width&&(o.autoWidth=!0),"auto"===o.height&&(o.autoHeight=!0),o.group=A.group,o.index=e,A.coming=o,!1===A.trigger("beforeLoad"))A.coming=null;else{if(i=o.type,t=o.href,!i)return A.coming=null,!(!A.current||!A.router||"jumpto"===A.router)&&(A.current.index=e,A[A.router](A.direction));if(A.isActive=!0,"image"!==i&&"swf"!==i||(o.autoHeight=o.autoWidth=!1,o.scrolling="visible"),"image"===i&&(o.aspectRatio=!0),"iframe"===i&&l&&(o.scrolling="scroll"),o.wrap=$(o.tpl.wrap).addClass("fancybox-"+(l?"mobile":"desktop")+" fancybox-type-"+i+" fancybox-tmp "+o.wrapCSS).appendTo(o.parent||"body"),$.extend(o,{skin:$(".fancybox-skin",o.wrap),outer:$(".fancybox-outer",o.wrap),inner:$(".fancybox-inner",o.wrap)}),$.each(["Top","Right","Bottom","Left"],function(e,t){o.skin.css("padding"+t,P(o.padding[e]))}),A.trigger("onReady"),"inline"===i||"html"===i){if(!o.content||!o.content.length)return A._error("content")}else if(!t)return A._error("href");"image"===i?A._loadImage():"ajax"===i?A._loadAjax():"iframe"===i?A._loadIframe():A._afterLoad()}},_error:function(e){$.extend(A.coming,{type:"html",autoWidth:!0,autoHeight:!0,minWidth:0,minHeight:0,scrolling:"no",hasError:e,content:A.coming.tpl.error}),A._afterLoad()},_loadImage:function(){var e=A.imgPreload=new Image;e.onload=function(){this.onload=this.onerror=null,A.coming.width=this.width/A.opts.pixelRatio,A.coming.height=this.height/A.opts.pixelRatio,A._afterLoad()},e.onerror=function(){this.onload=this.onerror=null,A._error("image")},e.src=A.coming.href,!0!==e.complete&&A.showLoading()},_loadAjax:function(){var i=A.coming;A.showLoading(),A.ajaxLoad=$.ajax($.extend({},i.ajax,{url:i.href,error:function(e,t){A.coming&&"abort"!==t?A._error("ajax",e):A.hideLoading()},success:function(e,t){"success"===t&&(i.content=e,A._afterLoad())}}))},_loadIframe:function(){var e=A.coming,t=$(e.tpl.iframe.replace(/\{rnd\}/g,(new Date).getTime())).attr("scrolling",l?"auto":e.iframe.scrolling).attr("src",e.href);$(e.wrap).bind("onReset",function(){try{$(this).find("iframe").hide().attr("src","//about:blank").end().empty()}catch(e){}}),e.iframe.preload&&(A.showLoading(),t.one("load",function(){$(this).data("ready",1),l||$(this).bind("load.fb",A.update),$(this).parents(".fancybox-wrap").width("100%").removeClass("fancybox-tmp").show(),A._afterLoad()})),e.content=t.appendTo(e.inner),e.iframe.preload||A._afterLoad()},_preloadImages:function(){var e,t,i=A.group,o=A.current,s=i.length,n=o.preload?Math.min(o.preload,s-1):0;for(t=1;t<=n;t+=1)"image"===(e=i[(o.index+t)%s]).type&&e.href&&((new Image).src=e.href)},_afterLoad:function(){var i,e,t,o,s,n=A.coming,r=A.current;if(A.hideLoading(),n&&!1!==A.isActive)if(!1===A.trigger("afterLoad",n,r))n.wrap.stop(!0).trigger("onReset").remove(),A.coming=null;else{switch(r&&(A.trigger("beforeChange",r),r.wrap.stop(!0).removeClass("fancybox-opened").find(".fancybox-item, .fancybox-nav").remove()),A.unbindEvents(),i=n.content,e=n.type,t=n.scrolling,$.extend(A,{wrap:n.wrap,skin:n.skin,outer:n.outer,inner:n.inner,current:n,previous:r}),o=n.href,e){case"inline":case"ajax":case"html":n.selector?i=$("<div>").html(i).find(n.selector):p(i)&&(i.data("fancybox-placeholder")||i.data("fancybox-placeholder",$('<div class="fancybox-placeholder"></div>').insertAfter(i).hide()),i=i.show().detach(),n.wrap.bind("onReset",function(){$(this).find(i).length&&i.hide().replaceAll(i.data("fancybox-placeholder")).data("fancybox-placeholder",!1)}));break;case"image":i=n.tpl.image.replace("{href}",o);break;case"swf":i='<object id="fancybox-swf" classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" width="100%" height="100%"><param name="movie" value="'+o+'"></param>',s="",$.each(n.swf,function(e,t){i+='<param name="'+e+'" value="'+t+'"></param>',s+=" "+e+'="'+t+'"'}),i+='<embed src="'+o+'" type="application/x-shockwave-flash" width="100%" height="100%"'+s+"></embed></object>"}(!p(i)||!i.parent().is(n.inner))&&n.inner.append(i),A.trigger("beforeShow"),n.inner.css("overflow","yes"===t?"scroll":"no"===t?"hidden":t),A._setDimension(),A.reposition(),A.isOpen=!1,A.coming=null,A.bindEvents(),A.isOpened?r.prevMethod&&A.transitions[r.prevMethod]():$(".fancybox-wrap").not(n.wrap).stop(!0).trigger("onReset").remove(),A.transitions[A.isOpened?n.nextMethod:n.openMethod](),A._preloadImages()}},_setDimension:function(){var e,t,i,o,s,n,r,a,l,d=A.getViewport(),c=0,p=!1,h=!1,u=(p=A.wrap,A.skin),f=A.inner,g=A.current,v=(h=g.width,g.height),y=g.minWidth,w=g.minHeight,m=g.maxWidth,k=g.maxHeight,b=g.scrolling,S=g.scrollOutside?g.scrollbarWidth:0,x=g.margin,T=H(x[1]+x[3]),C=H(x[0]+x[2]);if(p.add(u).add(f).width("auto").height("auto").removeClass("fancybox-tmp"),t=T+(x=H(u.outerWidth(!0)-u.width())),i=C+(e=H(u.outerHeight(!0)-u.height())),o=O(h)?(d.w-t)*H(h)/100:h,s=O(v)?(d.h-i)*H(v)/100:v,"iframe"===g.type){if(l=g.content,g.autoHeight&&1===l.data("ready"))try{l[0].contentWindow.document.location&&(f.width(o).height(9999),n=l.contents().find("body"),S&&n.css("overflow-x","hidden"),s=n.outerHeight(!0))}catch(e){}}else(g.autoWidth||g.autoHeight)&&(f.addClass("fancybox-tmp"),g.autoWidth||f.width(o),g.autoHeight||f.height(s),g.autoWidth&&(o=f.width()),g.autoHeight&&(s=f.height()),f.removeClass("fancybox-tmp"));if(h=H(o),v=H(s),a=o/s,y=H(O(y)?H(y,"w")-t:y),m=H(O(m)?H(m,"w")-t:m),w=H(O(w)?H(w,"h")-i:w),n=m,r=k=H(O(k)?H(k,"h")-i:k),g.fitToView&&(m=Math.min(d.w-t,m),k=Math.min(d.h-i,k)),t=d.w-T,C=d.h-C,g.aspectRatio?(m<h&&(v=H((h=m)/a)),k<v&&(h=H((v=k)*a)),h<y&&(v=H((h=y)/a)),v<w&&(h=H((v=w)*a))):(h=Math.max(y,Math.min(h,m)),g.autoHeight&&"iframe"!==g.type&&(f.width(h),v=f.height()),v=Math.max(w,Math.min(v,k))),g.fitToView)if(f.width(h).height(v),p.width(h+x),d=p.width(),T=p.height(),g.aspectRatio)for(;(t<d||C<T)&&y<h&&w<v&&!(19<c++);)v=Math.max(w,Math.min(k,v-10)),(h=H(v*a))<y&&(v=H((h=y)/a)),m<h&&(v=H((h=m)/a)),f.width(h).height(v),p.width(h+x),d=p.width(),T=p.height();else h=Math.max(y,Math.min(h,h-(d-t))),v=Math.max(w,Math.min(v,v-(T-C)));S&&"auto"===b&&v<s&&h+x+S<t&&(h+=S),f.width(h).height(v),p.width(h+x),d=p.width(),T=p.height(),p=(t<d||C<T)&&y<h&&w<v,h=g.aspectRatio?h<n&&v<r&&h<o&&v<s:(h<n||v<r)&&(h<o||v<s),$.extend(g,{dim:{width:P(d),height:P(T)},origWidth:o,origHeight:s,canShrink:p,canExpand:h,wPadding:x,hPadding:e,wrapSpace:T-u.outerHeight(!0),skinSpace:u.height()-v}),!l&&g.autoHeight&&w<v&&v<k&&!h&&f.height("auto")},_getPosition:function(e){var t=A.current,i=A.getViewport(),o=t.margin,s=A.wrap.width()+o[1]+o[3],n=A.wrap.height()+o[0]+o[2];o={position:"absolute",top:o[0],left:o[3]};return t.autoCenter&&t.fixed&&!e&&n<=i.h&&s<=i.w?o.position="fixed":t.locked||(o.top+=i.y,o.left+=i.x),o.top=P(Math.max(o.top,o.top+(i.h-n)*t.topRatio)),o.left=P(Math.max(o.left,o.left+(i.w-s)*t.leftRatio)),o},_afterZoomIn:function(){var t=A.current;t&&(A.isOpen=A.isOpened=!0,A.wrap.css("overflow","visible").addClass("fancybox-opened"),A.update(),(t.closeClick||t.nextClick&&1<A.group.length)&&A.inner.css("cursor","pointer").bind("click.fb",function(e){!$(e.target).is("a")&&!$(e.target).parent().is("a")&&(e.preventDefault(),A[t.closeClick?"close":"next"]())}),t.closeBtn&&$(t.tpl.closeBtn).appendTo(A.skin).bind("click.fb",function(e){e.preventDefault(),A.close()}),t.arrows&&1<A.group.length&&((t.loop||0<t.index)&&$(t.tpl.prev).appendTo(A.outer).bind("click.fb",A.prev),(t.loop||t.index<A.group.length-1)&&$(t.tpl.next).appendTo(A.outer).bind("click.fb",A.next)),A.trigger("afterShow"),t.loop||t.index!==t.group.length-1?A.opts.autoPlay&&!A.player.isActive&&(A.opts.autoPlay=!1,A.play()):A.play(!1))},_afterZoomOut:function(e){e=e||A.current,$(".fancybox-wrap").trigger("onReset").remove(),$.extend(A,{group:{},opts:{},router:!1,current:null,isActive:!1,isOpened:!1,isOpen:!1,isClosing:!1,wrap:null,skin:null,outer:null,inner:null}),A.trigger("afterClose",e)}}),A.transitions={getOrigPosition:function(){var e=A.current,t=e.element,i=e.orig,o={},s=50,n=50,r=e.hPadding,a=e.wPadding,l=A.getViewport();return!i&&e.isDom&&t.is(":visible")&&((i=t.find("img:first")).length||(i=t)),p(i)?(o=i.offset(),i.is("img")&&(s=i.outerWidth(),n=i.outerHeight())):(o.top=l.y+(l.h-n)*e.topRatio,o.left=l.x+(l.w-s)*e.leftRatio),("fixed"===A.wrap.css("position")||e.locked)&&(o.top-=l.y,o.left-=l.x),{top:P(o.top-r*e.topRatio),left:P(o.left-a*e.leftRatio),width:P(s+a),height:P(n+r)}},step:function(e,t){var i,o,s=t.prop,n=(o=A.current).wrapSpace,r=o.skinSpace;"width"!==s&&"height"!==s||(i=t.end===t.start?1:(e-t.start)/(t.end-t.start),A.isClosing&&(i=1-i),o=e-(o="width"===s?o.wPadding:o.hPadding),A.skin[s](H("width"===s?o:o-n*i)),A.inner[s](H("width"===s?o:o-n*i-r*i)))},zoomIn:function(){var e=A.current,t=e.pos,i=e.openEffect,o="elastic"===i,s=$.extend({opacity:1},t);delete s.position,o?(t=this.getOrigPosition(),e.openOpacity&&(t.opacity=.1)):"fade"===i&&(t.opacity=.1),A.wrap.css(t).animate(s,{duration:"none"===i?0:e.openSpeed,easing:e.openEasing,step:o?this.step:null,complete:A._afterZoomIn})},zoomOut:function(){var e=A.current,t=e.closeEffect,i="elastic"===t,o={opacity:.1};i&&(o=this.getOrigPosition(),e.closeOpacity&&(o.opacity=.1)),A.wrap.animate(o,{duration:"none"===t?0:e.closeSpeed,easing:e.closeEasing,step:i?this.step:null,complete:A._afterZoomOut})},changeIn:function(){var e,t=A.current,i=t.nextEffect,o=t.pos,s={opacity:1},n=A.direction;o.opacity=.1,"elastic"===i&&(s[e="down"===n||"up"===n?"top":"left"]="down"===n||"right"===n?(o[e]=P(H(o[e])-200),"+=200px"):(o[e]=P(H(o[e])+200),"-=200px")),"none"===i?A._afterZoomIn():A.wrap.css(o).animate(s,{duration:t.nextSpeed,easing:t.nextEasing,complete:A._afterZoomIn})},changeOut:function(){var e=A.previous,t=e.prevEffect,i={opacity:.1},o=A.direction;"elastic"===t&&(i["down"===o||"up"===o?"top":"left"]=("up"===o||"left"===o?"-":"+")+"=200px"),e.wrap.animate(i,{duration:"none"===t?0:e.prevSpeed,easing:e.prevEasing,complete:function(){$(this).trigger("onReset").remove()}})}},A.helpers.overlay={defaults:{closeClick:!0,speedOut:200,showEarly:!0,css:{},locked:!l,fixed:!0},overlay:null,fixed:!1,el:$("html"),create:function(e){e=$.extend({},this.defaults,e),this.overlay&&this.close(),this.overlay=$('<div class="fancybox-overlay"></div>').appendTo(A.coming?A.coming.parent:e.parent),this.fixed=!1,e.fixed&&A.defaults.fixed&&(this.overlay.addClass("fancybox-overlay-fixed"),this.fixed=!0)},open:function(e){var t=this;e=$.extend({},this.defaults,e),this.overlay?this.overlay.unbind(".overlay").width("auto").height("auto"):this.create(e),this.fixed||(n.bind("resize.overlay",$.proxy(this.update,this)),this.update()),e.closeClick&&this.overlay.bind("click.overlay",function(e){if($(e.target).hasClass("fancybox-overlay"))return A.isActive?A.close():t.close(),!1}),this.overlay.css(e.css).show()},close:function(){var e,t;n.unbind("resize.overlay"),this.el.hasClass("fancybox-lock")&&($(".fancybox-margin").removeClass("fancybox-margin"),e=n.scrollTop(),t=n.scrollLeft(),this.el.removeClass("fancybox-lock"),n.scrollTop(e).scrollLeft(t)),$(".fancybox-overlay").remove().hide(),$.extend(this,{overlay:null,fixed:!1})},update:function(){var e,t="100%";this.overlay.width(t).height("100%"),r?(e=Math.max(i.documentElement.offsetWidth,i.body.offsetWidth),d.width()>e&&(t=d.width())):d.width()>n.width()&&(t=d.width()),this.overlay.width(t).height(d.height())},onReady:function(e,t){var i=this.overlay;$(".fancybox-overlay").stop(!0,!0),i||this.create(e),e.locked&&this.fixed&&t.fixed&&(i||(this.margin=d.height()>n.height()&&$("html").css("margin-right").replace("px","")),t.locked=this.overlay.append(t.wrap),t.fixed=!1),!0===e.showEarly&&this.beforeShow.apply(this,arguments)},beforeShow:function(e,t){var i,o;t.locked&&(!1!==this.margin&&($("*").filter(function(){return"fixed"===$(this).css("position")&&!$(this).hasClass("fancybox-overlay")&&!$(this).hasClass("fancybox-wrap")}).addClass("fancybox-margin"),this.el.addClass("fancybox-margin")),i=n.scrollTop(),o=n.scrollLeft(),this.el.addClass("fancybox-lock"),n.scrollTop(i).scrollLeft(o)),this.open(e)},onUpdate:function(){this.fixed||this.update()},afterClose:function(e){this.overlay&&!A.coming&&this.overlay.fadeOut(e.speedOut,$.proxy(this.close,this))}},A.helpers.title={defaults:{type:"float",position:"bottom"},beforeShow:function(e){var t=A.current,i=t.title,o=e.type;if($.isFunction(i)&&(i=i.call(t.element,t)),h(i)&&""!==$.trim(i)){switch(t=$('<div class="fancybox-title fancybox-title-'+o+'-wrap">'+i+"</div>"),o){case"inside":o=A.skin;break;case"outside":o=A.wrap;break;case"over":o=A.inner;break;default:o=A.skin,t.appendTo("body"),r&&t.width(t.width()),t.wrapInner('<span class="child"></span>'),A.current.margin[2]+=Math.abs(H(t.css("margin-bottom")))}t["top"===e.position?"prependTo":"appendTo"](o)}}},$.fn.fancybox=function(n){var r,a=$(this),l=this.selector||"",e=function(e){var t,i,o=$(this).blur(),s=r;!e.ctrlKey&&!e.altKey&&!e.shiftKey&&!e.metaKey&&!o.is(".fancybox-wrap")&&(t=n.groupAttr||"data-fancybox-group",(i=o.attr(t))||(t="rel",i=o.get(0)[t]),i&&""!==i&&"nofollow"!==i&&(s=(o=(o=l.length?$(l):a).filter("["+t+'="'+i+'"]')).index(this)),n.index=s,!1!==A.open(o,n)&&e.preventDefault())};return r=(n=n||{}).index||0,l&&!1!==n.live?d.undelegate(l,"click.fb-start").delegate(l+":not('.fancybox-item, .fancybox-nav')","click.fb-start",e):a.unbind("click.fb-start").bind("click.fb-start",e),this.filter("[data-fancybox-start=1]").trigger("click"),this},d.ready(function(){var e,t;if($.scrollbarWidth===c&&($.scrollbarWidth=function(){var e=$('<div style="width:50px;height:50px;overflow:auto"><div/></div>').appendTo("body"),t=(t=e.children()).innerWidth()-t.height(99).innerWidth();return e.remove(),t}),$.support.fixedPosition===c){e=$.support;var i=20===(t=$('<div style="position:fixed;top:20px;"></div>').appendTo("body"))[0].offsetTop||15===t[0].offsetTop;t.remove(),e.fixedPosition=i}$.extend(A.defaults,{scrollbarWidth:$.scrollbarWidth(),fixed:$.support.fixedPosition,parent:$("body")}),e=$(o).width(),s.addClass("fancybox-lock-test"),t=$(o).width(),s.removeClass("fancybox-lock-test"),$("<style type='text/css'>.fancybox-margin{margin-right:"+(t-e)+"px;}</style>").appendTo("head")})}(window,document,jQuery),jQuery(function(){initAnchors()}),function(d,e){var s,n,r,c=d(window),a="onwheel"in document||9<=document.documentMode?"wheel":"mousewheel DOMMouseScroll";function o(e,t,i){var o;document.body&&(t="number"==typeof t?{duration:t}:t||{},s=s||d("html, body"),o=t.container||s,"number"==typeof e&&(e={top:e}),n&&r&&n.off(a,r),t.wheelBehavior&&"none"!==t.wheelBehavior&&(r=function(e){"stop"===t.wheelBehavior?(o.off(a,r),o.stop()):"ignore"===t.wheelBehavior&&e.preventDefault()},n=o.on(a,r)),o.stop().animate({scrollLeft:e.left,scrollTop:e.top},t.duration,function(){r&&o.off(a,r),d.isFunction(i)&&i()}))}function t(e){this.options=d.extend({anchorLinks:'a[href^="#"]',container:null,extraOffset:null,activeClasses:null,easing:"swing",animMode:"duration",animDuration:800,animSpeed:1500,anchorActiveClass:"anchor-active",sectionActiveClass:"section-active",wheelBehavior:"stop",useNativeAnchorScrolling:!1},e),this.init()}t.prototype={init:function(){this.initStructure(),this.attachEvents(),this.isInit=!0},initStructure:function(){var e=this;this.container=this.options.container?d(this.options.container):d("html,body"),this.scrollContainer=this.options.container?this.container:c,this.anchorLinks=jQuery(this.options.anchorLinks).filter(function(){return jQuery(e.getAnchorTarget(jQuery(this))).length})},getId:function(e){try{return"#"+e.replace(/^.*?(#|$)/,"")}catch(e){return null}},getAnchorTarget:function(e){var t=this.getId(d(e).attr("href"));return d(1<t.length?t:"html")},getTargetOffset:function(e){var t=e.offset().top;return this.options.container&&(t-=this.container.offset().top-this.container.prop("scrollTop")),"number"==typeof this.options.extraOffset?t-=this.options.extraOffset:"function"==typeof this.options.extraOffset&&(t-=this.options.extraOffset(e)),{top:t}},attachEvents:function(){var t=this;if(this.options.activeClasses&&this.anchorLinks.length){this.anchorData=[];for(var e=0;e<this.anchorLinks.length;e++){var i=jQuery(this.anchorLinks[e]),o=t.getAnchorTarget(i),s=null;d.each(t.anchorData,function(e,t){t.block[0]===o[0]&&(s=t)}),s?s.link=s.link.add(i):t.anchorData.push({link:i,block:o})}this.resizeHandler=function(){t.isInit&&t.recalculateOffsets()},this.scrollHandler=function(){t.refreshActiveClass()},this.recalculateOffsets(),this.scrollContainer.on("scroll",this.scrollHandler),c.on("resize load orientationchange refreshAnchor",this.resizeHandler)}this.clickHandler=function(e){t.onClick(e)},this.options.useNativeAnchorScrolling||this.anchorLinks.on("click",this.clickHandler)},recalculateOffsets:function(){var i=this;d.each(this.anchorData,function(e,t){t.offset=i.getTargetOffset(t.block),t.height=t.block.outerHeight()}),this.refreshActiveClass()},toggleActiveClass:function(e,t,i){e.toggleClass(this.options.anchorActiveClass,i),t.toggleClass(this.options.sectionActiveClass,i)},refreshActiveClass:function(){var s=this,n=!1,r=this.container.prop("scrollHeight"),a=this.scrollContainer.height(),l=this.options.container?this.container.prop("scrollTop"):c.scrollTop();this.options.customScrollHandler?this.options.customScrollHandler.call(this,l,this.anchorData):(this.anchorData.sort(function(e,t){return e.offset.top-t.offset.top}),d.each(this.anchorData,function(e){var t=s.anchorData.length-e-1,i=s.anchorData[t],o="parent"===s.options.activeClasses?i.link.parent():i.link;r-a<=l?t===s.anchorData.length-1?s.toggleActiveClass(o,i.block,!0):s.toggleActiveClass(o,i.block,!1):!n&&(l>=i.offset.top-1||0===t)?(n=!0,s.toggleActiveClass(o,i.block,!0)):s.toggleActiveClass(o,i.block,!1)}))},calculateScrollDuration:function(e){return"speed"===this.options.animMode?Math.abs(this.scrollContainer.scrollTop()-e.top)/this.options.animSpeed*1e3:this.options.animDuration},onClick:function(e){var t=this.getAnchorTarget(e.currentTarget),i=this.getTargetOffset(t);e.preventDefault(),o(i,{container:this.container,wheelBehavior:this.options.wheelBehavior,duration:this.calculateScrollDuration(i)}),this.makeCallback("onBeforeScroll",e.currentTarget)},makeCallback:function(e){if("function"==typeof this.options[e]){var t=Array.prototype.slice.call(arguments);t.shift(),this.options[e].apply(this,t)}},destroy:function(){var s=this;this.isInit=!1,this.options.activeClasses&&(c.off("resize load orientationchange refreshAnchor",this.resizeHandler),this.scrollContainer.off("scroll",this.scrollHandler),d.each(this.anchorData,function(e){var t=s.anchorData.length-e-1,i=s.anchorData[t],o="parent"===s.options.activeClasses?i.link.parent():i.link;s.toggleActiveClass(o,i.block,!1)})),this.anchorLinks.off("click",this.clickHandler)}},d.extend(t,{scrollTo:function(e,t,i){o(e,t,i)}}),e.SmoothScroll=t}(jQuery,this),$(function(){var e=$("body");$(window).scroll(function(){0<$(window).scrollTop()?e.addClass("scroll"):e.removeClass("scroll")})}),$(document).on("click","button.plus, button.minus",function(){var e=$(this).parent(".quantity").find(".qty"),t=parseFloat(e.val()),i=parseFloat(e.attr("max")),o=parseFloat(e.attr("min")),s=parseFloat(e.attr("step"));$(this).is(".plus")?i&&i<=t?e.val(i).change():e.val(t+s).change():o&&t<=o?e.val(o).change():1<t&&e.val(t-s).change()}),(new WOW).init(),$(function(){$(".menu .menu-item-has-children a").on("click",function(){$(this).parents(".menu-item-has-children ").toggleClass("active")}),$(".nav-opener").on("click",function(e){e.preventDefault(),$("body").toggleClass("nav-active")})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
