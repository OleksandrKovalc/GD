function initLightbox(){jQuery('a.lightbox, a[rel*="lightbox"]').fancybox({loop:!1,helpers:{overlay:{css:{background:"rgba(0, 0, 0, 0.65)"}}},afterLoad:function(e,t){0===e.href.indexOf("#")&&jQuery(e.href).find("a.close").off("click.fb").on("click.fb",function(e){e.preventDefault(),jQuery.fancybox.close()})}})}function initAnchors(){new SmoothScroll({anchorLinks:".btn-back",extraOffset:0,wheelBehavior:"none"})}(function(){var t,i,o=function(e,t){return function(){return e.apply(t,arguments)}};t=function(){function e(){}return e.prototype.extend=function(e,t){var i,o;for(i in e)null!=(o=e[i])&&(t[i]=o);return t},e.prototype.isMobile=function(e){return/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(e)},e}(),i=this.WeakMap||(i=function(){function e(){this.keys=[],this.values=[]}return e.prototype.get=function(e){var t,i,o,n;for(t=i=0,o=(n=this.keys).length;i<o;t=++i)if(n[t]===e)return this.values[t]},e.prototype.set=function(e,t){var i,o,n,s;for(i=o=0,n=(s=this.keys).length;o<n;i=++o)if(s[i]===e)return void(this.values[i]=t);return this.keys.push(e),this.values.push(t)},e}()),this.WOW=function(){function e(e){null==e&&(e={}),this.scrollCallback=o(this.scrollCallback,this),this.scrollHandler=o(this.scrollHandler,this),this.start=o(this.start,this),this.scrolled=!0,this.config=this.util().extend(e,this.defaults),this.animationNameCache=new i}return e.prototype.defaults={boxClass:"wow",animateClass:"animated",offset:0,mobile:!0},e.prototype.init=function(){var e;return this.element=window.document.documentElement,"interactive"===(e=document.readyState)||"complete"===e?this.start():document.addEventListener("DOMContentLoaded",this.start)},e.prototype.start=function(){var e,t,i,o;if(this.boxes=this.element.getElementsByClassName(this.config.boxClass),this.boxes.length){if(this.disabled())return this.resetStyle();for(t=0,i=(o=this.boxes).length;t<i;t++)e=o[t],this.applyStyle(e,!0);return window.addEventListener("scroll",this.scrollHandler,!1),window.addEventListener("resize",this.scrollHandler,!1),this.interval=setInterval(this.scrollCallback,50)}},e.prototype.stop=function(){return window.removeEventListener("scroll",this.scrollHandler,!1),window.removeEventListener("resize",this.scrollHandler,!1),null!=this.interval?clearInterval(this.interval):void 0},e.prototype.show=function(e){return this.applyStyle(e),e.className=e.className+" "+this.config.animateClass},e.prototype.applyStyle=function(e,t){var i,o,n,s;return o=e.getAttribute("data-wow-duration"),i=e.getAttribute("data-wow-delay"),n=e.getAttribute("data-wow-iteration"),this.animate((s=this,function(){return s.customStyle(e,t,o,i,n)}))},e.prototype.animate="requestAnimationFrame"in window?function(e){return window.requestAnimationFrame(e)}:function(e){return e()},e.prototype.resetStyle=function(){var e,t,i,o,n;for(n=[],t=0,i=(o=this.boxes).length;t<i;t++)e=o[t],n.push(e.setAttribute("style","visibility: visible;"));return n},e.prototype.customStyle=function(e,t,i,o,n){return t&&this.cacheAnimationName(e),e.style.visibility=t?"hidden":"visible",i&&this.vendorSet(e.style,{animationDuration:i}),o&&this.vendorSet(e.style,{animationDelay:o}),n&&this.vendorSet(e.style,{animationIterationCount:n}),this.vendorSet(e.style,{animationName:t?"none":this.cachedAnimationName(e)}),e},e.prototype.vendors=["moz","webkit"],e.prototype.vendorSet=function(n,e){var s,r,a,t;for(s in t=[],e)r=e[s],n[""+s]=r,t.push(function(){var e,t,i,o;for(o=[],e=0,t=(i=this.vendors).length;e<t;e++)a=i[e],o.push(n[""+a+s.charAt(0).toUpperCase()+s.substr(1)]=r);return o}.call(this));return t},e.prototype.vendorCSS=function(e,t){var i,o,n,s,r,a;for(i=(o=window.getComputedStyle(e)).getPropertyCSSValue(t),s=0,r=(a=this.vendors).length;s<r;s++)n=a[s],i=i||o.getPropertyCSSValue("-"+n+"-"+t);return i},e.prototype.animationName=function(t){var i;try{i=this.vendorCSS(t,"animation-name").cssText}catch(e){i=window.getComputedStyle(t).getPropertyValue("animation-name")}return"none"===i?"":i},e.prototype.cacheAnimationName=function(e){return this.animationNameCache.set(e,this.animationName(e))},e.prototype.cachedAnimationName=function(e){return this.animationNameCache.get(e)},e.prototype.scrollHandler=function(){return this.scrolled=!0},e.prototype.scrollCallback=function(){var n;return this.scrolled&&(this.scrolled=!1,this.boxes=function(){var e,t,i,o;for(o=[],e=0,t=(i=this.boxes).length;e<t;e++)(n=i[e])&&(this.isVisible(n)?this.show(n):o.push(n));return o}.call(this),!this.boxes.length)?this.stop():void 0},e.prototype.offsetTop=function(e){for(var t;void 0===e.offsetTop;)e=e.parentNode;for(t=e.offsetTop;e=e.offsetParent;)t+=e.offsetTop;return t},e.prototype.isVisible=function(e){var t,i,o,n,s;return i=e.getAttribute("data-wow-offset")||this.config.offset,n=(s=window.pageYOffset)+this.element.clientHeight-i,t=(o=this.offsetTop(e))+e.clientHeight,o<=n&&s<=t},e.prototype.util=function(){return this._util||(this._util=new t)},e.prototype.disabled=function(){return!this.config.mobile&&this.util().isMobile(navigator.userAgent)},e}()}).call(this),function(e){"use strict";"function"==typeof define&&define.amd?define(["jquery"],e):"undefined"!=typeof exports?module.exports=e(require("jquery")):e(jQuery)}(function(d){"use strict";var n,r=window.Slick||{};n=0,(r=function(e,t){var i,o=this;o.defaults={accessibility:!0,adaptiveHeight:!1,appendArrows:d(e),appendDots:d(e),arrows:!0,asNavFor:null,prevArrow:'<button class="slick-prev" aria-label="Previous" type="button"></button>',nextArrow:'<button class="slick-next" aria-label="Next" type="button"></button>',autoplay:!1,autoplaySpeed:3e3,centerMode:!1,centerPadding:"50px",cssEase:"ease",customPaging:function(e,t){return d('<button type="button" />').text(t+1)},dots:!1,dotsClass:"slick-dots",draggable:!0,easing:"linear",edgeFriction:.35,fade:!1,focusOnSelect:!1,focusOnChange:!1,infinite:!0,initialSlide:0,lazyLoad:"ondemand",mobileFirst:!1,pauseOnHover:!0,pauseOnFocus:!0,pauseOnDotsHover:!1,respondTo:"window",responsive:null,rows:1,rtl:!1,slide:"",slidesPerRow:1,slidesToShow:1,slidesToScroll:1,speed:500,swipe:!0,swipeToSlide:!1,touchMove:!0,touchThreshold:5,useCSS:!0,useTransform:!0,variableWidth:!1,vertical:!1,verticalSwiping:!1,waitForAnimate:!0,zIndex:1e3},o.initials={animating:!1,dragging:!1,autoPlayTimer:null,currentDirection:0,currentLeft:null,currentSlide:0,direction:1,$dots:null,listWidth:null,listHeight:null,loadIndex:0,$nextArrow:null,$prevArrow:null,scrolling:!1,slideCount:null,slideWidth:null,$slideTrack:null,$slides:null,sliding:!1,slideOffset:0,swipeLeft:null,swiping:!1,$list:null,touchObject:{},transformsEnabled:!1,unslicked:!1},d.extend(o,o.initials),o.activeBreakpoint=null,o.animType=null,o.animProp=null,o.breakpoints=[],o.breakpointSettings=[],o.cssTransitions=!1,o.focussed=!1,o.interrupted=!1,o.hidden="hidden",o.paused=!0,o.positionProp=null,o.respondTo=null,o.rowCount=1,o.shouldClick=!0,o.$slider=d(e),o.$slidesCache=null,o.transformType=null,o.transitionType=null,o.visibilityChange="visibilitychange",o.windowWidth=0,o.windowTimer=null,i=d(e).data("slick")||{},o.options=d.extend({},o.defaults,t,i),o.currentSlide=o.options.initialSlide,o.originalSettings=o.options,void 0!==document.mozHidden?(o.hidden="mozHidden",o.visibilityChange="mozvisibilitychange"):void 0!==document.webkitHidden&&(o.hidden="webkitHidden",o.visibilityChange="webkitvisibilitychange"),o.autoPlay=d.proxy(o.autoPlay,o),o.autoPlayClear=d.proxy(o.autoPlayClear,o),o.autoPlayIterator=d.proxy(o.autoPlayIterator,o),o.changeSlide=d.proxy(o.changeSlide,o),o.clickHandler=d.proxy(o.clickHandler,o),o.selectHandler=d.proxy(o.selectHandler,o),o.setPosition=d.proxy(o.setPosition,o),o.swipeHandler=d.proxy(o.swipeHandler,o),o.dragHandler=d.proxy(o.dragHandler,o),o.keyHandler=d.proxy(o.keyHandler,o),o.instanceUid=n++,o.htmlExpr=/^(?:\s*(<[\w\W]+>)[^>]*)$/,o.registerBreakpoints(),o.init(!0)}).prototype.activateADA=function(){this.$slideTrack.find(".slick-active").attr({"aria-hidden":"false"}).find("a, input, button, select").attr({tabindex:"0"})},r.prototype.addSlide=r.prototype.slickAdd=function(e,t,i){var o=this;if("boolean"==typeof t)i=t,t=null;else if(t<0||t>=o.slideCount)return!1;o.unload(),"number"==typeof t?0===t&&0===o.$slides.length?d(e).appendTo(o.$slideTrack):i?d(e).insertBefore(o.$slides.eq(t)):d(e).insertAfter(o.$slides.eq(t)):!0===i?d(e).prependTo(o.$slideTrack):d(e).appendTo(o.$slideTrack),o.$slides=o.$slideTrack.children(this.options.slide),o.$slideTrack.children(this.options.slide).detach(),o.$slideTrack.append(o.$slides),o.$slides.each(function(e,t){d(t).attr("data-slick-index",e)}),o.$slidesCache=o.$slides,o.reinit()},r.prototype.animateHeight=function(){var e=this;if(1===e.options.slidesToShow&&!0===e.options.adaptiveHeight&&!1===e.options.vertical){var t=e.$slides.eq(e.currentSlide).outerHeight(!0);e.$list.animate({height:t},e.options.speed)}},r.prototype.animateSlide=function(e,t){var i={},o=this;o.animateHeight(),!0===o.options.rtl&&!1===o.options.vertical&&(e=-e),!1===o.transformsEnabled?!1===o.options.vertical?o.$slideTrack.animate({left:e},o.options.speed,o.options.easing,t):o.$slideTrack.animate({top:e},o.options.speed,o.options.easing,t):!1===o.cssTransitions?(!0===o.options.rtl&&(o.currentLeft=-o.currentLeft),d({animStart:o.currentLeft}).animate({animStart:e},{duration:o.options.speed,easing:o.options.easing,step:function(e){e=Math.ceil(e),!1===o.options.vertical?i[o.animType]="translate("+e+"px, 0px)":i[o.animType]="translate(0px,"+e+"px)",o.$slideTrack.css(i)},complete:function(){t&&t.call()}})):(o.applyTransition(),e=Math.ceil(e),!1===o.options.vertical?i[o.animType]="translate3d("+e+"px, 0px, 0px)":i[o.animType]="translate3d(0px,"+e+"px, 0px)",o.$slideTrack.css(i),t&&setTimeout(function(){o.disableTransition(),t.call()},o.options.speed))},r.prototype.getNavTarget=function(){var e=this.options.asNavFor;return e&&null!==e&&(e=d(e).not(this.$slider)),e},r.prototype.asNavFor=function(t){var e=this.getNavTarget();null!==e&&"object"==typeof e&&e.each(function(){var e=d(this).slick("getSlick");e.unslicked||e.slideHandler(t,!0)})},r.prototype.applyTransition=function(e){var t=this,i={};!1===t.options.fade?i[t.transitionType]=t.transformType+" "+t.options.speed+"ms "+t.options.cssEase:i[t.transitionType]="opacity "+t.options.speed+"ms "+t.options.cssEase,!1===t.options.fade?t.$slideTrack.css(i):t.$slides.eq(e).css(i)},r.prototype.autoPlay=function(){var e=this;e.autoPlayClear(),e.slideCount>e.options.slidesToShow&&(e.autoPlayTimer=setInterval(e.autoPlayIterator,e.options.autoplaySpeed))},r.prototype.autoPlayClear=function(){this.autoPlayTimer&&clearInterval(this.autoPlayTimer)},r.prototype.autoPlayIterator=function(){var e=this,t=e.currentSlide+e.options.slidesToScroll;e.paused||e.interrupted||e.focussed||(!1===e.options.infinite&&(1===e.direction&&e.currentSlide+1===e.slideCount-1?e.direction=0:0===e.direction&&(t=e.currentSlide-e.options.slidesToScroll,e.currentSlide-1==0&&(e.direction=1))),e.slideHandler(t))},r.prototype.buildArrows=function(){var e=this;!0===e.options.arrows&&(e.$prevArrow=d(e.options.prevArrow).addClass("slick-arrow"),e.$nextArrow=d(e.options.nextArrow).addClass("slick-arrow"),e.slideCount>e.options.slidesToShow?(e.$prevArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"),e.$nextArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"),e.htmlExpr.test(e.options.prevArrow)&&e.$prevArrow.prependTo(e.options.appendArrows),e.htmlExpr.test(e.options.nextArrow)&&e.$nextArrow.appendTo(e.options.appendArrows),!0!==e.options.infinite&&e.$prevArrow.addClass("slick-disabled").attr("aria-disabled","true")):e.$prevArrow.add(e.$nextArrow).addClass("slick-hidden").attr({"aria-disabled":"true",tabindex:"-1"}))},r.prototype.buildDots=function(){var e,t,i=this;if(!0===i.options.dots&&i.slideCount>i.options.slidesToShow){for(i.$slider.addClass("slick-dotted"),t=d("<ul />").addClass(i.options.dotsClass),e=0;e<=i.getDotCount();e+=1)t.append(d("<li />").append(i.options.customPaging.call(this,i,e)));i.$dots=t.appendTo(i.options.appendDots),i.$dots.find("li").first().addClass("slick-active")}},r.prototype.buildOut=function(){var e=this;e.$slides=e.$slider.children(e.options.slide+":not(.slick-cloned)").addClass("slick-slide"),e.slideCount=e.$slides.length,e.$slides.each(function(e,t){d(t).attr("data-slick-index",e).data("originalStyling",d(t).attr("style")||"")}),e.$slider.addClass("slick-slider"),e.$slideTrack=0===e.slideCount?d('<div class="slick-track"/>').appendTo(e.$slider):e.$slides.wrapAll('<div class="slick-track"/>').parent(),e.$list=e.$slideTrack.wrap('<div class="slick-list"/>').parent(),e.$slideTrack.css("opacity",0),!0!==e.options.centerMode&&!0!==e.options.swipeToSlide||(e.options.slidesToScroll=1),d("img[data-lazy]",e.$slider).not("[src]").addClass("slick-loading"),e.setupInfinite(),e.buildArrows(),e.buildDots(),e.updateDots(),e.setSlideClasses("number"==typeof e.currentSlide?e.currentSlide:0),!0===e.options.draggable&&e.$list.addClass("draggable")},r.prototype.buildRows=function(){var e,t,i,o,n,s,r,a=this;if(o=document.createDocumentFragment(),s=a.$slider.children(),0<a.options.rows){for(r=a.options.slidesPerRow*a.options.rows,n=Math.ceil(s.length/r),e=0;e<n;e++){var l=document.createElement("div");for(t=0;t<a.options.rows;t++){var d=document.createElement("div");for(i=0;i<a.options.slidesPerRow;i++){var c=e*r+(t*a.options.slidesPerRow+i);s.get(c)&&d.appendChild(s.get(c))}l.appendChild(d)}o.appendChild(l)}a.$slider.empty().append(o),a.$slider.children().children().children().css({width:100/a.options.slidesPerRow+"%",display:"inline-block"})}},r.prototype.checkResponsive=function(e,t){var i,o,n,s=this,r=!1,a=s.$slider.width(),l=window.innerWidth||d(window).width();if("window"===s.respondTo?n=l:"slider"===s.respondTo?n=a:"min"===s.respondTo&&(n=Math.min(l,a)),s.options.responsive&&s.options.responsive.length&&null!==s.options.responsive){for(i in o=null,s.breakpoints)s.breakpoints.hasOwnProperty(i)&&(!1===s.originalSettings.mobileFirst?n<s.breakpoints[i]&&(o=s.breakpoints[i]):n>s.breakpoints[i]&&(o=s.breakpoints[i]));null!==o?null!==s.activeBreakpoint?(o!==s.activeBreakpoint||t)&&(s.activeBreakpoint=o,"unslick"===s.breakpointSettings[o]?s.unslick(o):(s.options=d.extend({},s.originalSettings,s.breakpointSettings[o]),!0===e&&(s.currentSlide=s.options.initialSlide),s.refresh(e)),r=o):(s.activeBreakpoint=o,"unslick"===s.breakpointSettings[o]?s.unslick(o):(s.options=d.extend({},s.originalSettings,s.breakpointSettings[o]),!0===e&&(s.currentSlide=s.options.initialSlide),s.refresh(e)),r=o):null!==s.activeBreakpoint&&(s.activeBreakpoint=null,s.options=s.originalSettings,!0===e&&(s.currentSlide=s.options.initialSlide),s.refresh(e),r=o),e||!1===r||s.$slider.trigger("breakpoint",[s,r])}},r.prototype.changeSlide=function(e,t){var i,o,n=this,s=d(e.currentTarget);switch(s.is("a")&&e.preventDefault(),s.is("li")||(s=s.closest("li")),i=n.slideCount%n.options.slidesToScroll!=0?0:(n.slideCount-n.currentSlide)%n.options.slidesToScroll,e.data.message){case"previous":o=0===i?n.options.slidesToScroll:n.options.slidesToShow-i,n.slideCount>n.options.slidesToShow&&n.slideHandler(n.currentSlide-o,!1,t);break;case"next":o=0===i?n.options.slidesToScroll:i,n.slideCount>n.options.slidesToShow&&n.slideHandler(n.currentSlide+o,!1,t);break;case"index":var r=0===e.data.index?0:e.data.index||s.index()*n.options.slidesToScroll;n.slideHandler(n.checkNavigable(r),!1,t),s.children().trigger("focus");break;default:return}},r.prototype.checkNavigable=function(e){var t,i;if(i=0,e>(t=this.getNavigableIndexes())[t.length-1])e=t[t.length-1];else for(var o in t){if(e<t[o]){e=i;break}i=t[o]}return e},r.prototype.cleanUpEvents=function(){var e=this;e.options.dots&&null!==e.$dots&&(d("li",e.$dots).off("click.slick",e.changeSlide).off("mouseenter.slick",d.proxy(e.interrupt,e,!0)).off("mouseleave.slick",d.proxy(e.interrupt,e,!1)),!0===e.options.accessibility&&e.$dots.off("keydown.slick",e.keyHandler)),e.$slider.off("focus.slick blur.slick"),!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow&&e.$prevArrow.off("click.slick",e.changeSlide),e.$nextArrow&&e.$nextArrow.off("click.slick",e.changeSlide),!0===e.options.accessibility&&(e.$prevArrow&&e.$prevArrow.off("keydown.slick",e.keyHandler),e.$nextArrow&&e.$nextArrow.off("keydown.slick",e.keyHandler))),e.$list.off("touchstart.slick mousedown.slick",e.swipeHandler),e.$list.off("touchmove.slick mousemove.slick",e.swipeHandler),e.$list.off("touchend.slick mouseup.slick",e.swipeHandler),e.$list.off("touchcancel.slick mouseleave.slick",e.swipeHandler),e.$list.off("click.slick",e.clickHandler),d(document).off(e.visibilityChange,e.visibility),e.cleanUpSlideEvents(),!0===e.options.accessibility&&e.$list.off("keydown.slick",e.keyHandler),!0===e.options.focusOnSelect&&d(e.$slideTrack).children().off("click.slick",e.selectHandler),d(window).off("orientationchange.slick.slick-"+e.instanceUid,e.orientationChange),d(window).off("resize.slick.slick-"+e.instanceUid,e.resize),d("[draggable!=true]",e.$slideTrack).off("dragstart",e.preventDefault),d(window).off("load.slick.slick-"+e.instanceUid,e.setPosition)},r.prototype.cleanUpSlideEvents=function(){var e=this;e.$list.off("mouseenter.slick",d.proxy(e.interrupt,e,!0)),e.$list.off("mouseleave.slick",d.proxy(e.interrupt,e,!1))},r.prototype.cleanUpRows=function(){var e;0<this.options.rows&&((e=this.$slides.children().children()).removeAttr("style"),this.$slider.empty().append(e))},r.prototype.clickHandler=function(e){!1===this.shouldClick&&(e.stopImmediatePropagation(),e.stopPropagation(),e.preventDefault())},r.prototype.destroy=function(e){var t=this;t.autoPlayClear(),t.touchObject={},t.cleanUpEvents(),d(".slick-cloned",t.$slider).detach(),t.$dots&&t.$dots.remove(),t.$prevArrow&&t.$prevArrow.length&&(t.$prevArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display",""),t.htmlExpr.test(t.options.prevArrow)&&t.$prevArrow.remove()),t.$nextArrow&&t.$nextArrow.length&&(t.$nextArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display",""),t.htmlExpr.test(t.options.nextArrow)&&t.$nextArrow.remove()),t.$slides&&(t.$slides.removeClass("slick-slide slick-active slick-center slick-visible slick-current").removeAttr("aria-hidden").removeAttr("data-slick-index").each(function(){d(this).attr("style",d(this).data("originalStyling"))}),t.$slideTrack.children(this.options.slide).detach(),t.$slideTrack.detach(),t.$list.detach(),t.$slider.append(t.$slides)),t.cleanUpRows(),t.$slider.removeClass("slick-slider"),t.$slider.removeClass("slick-initialized"),t.$slider.removeClass("slick-dotted"),t.unslicked=!0,e||t.$slider.trigger("destroy",[t])},r.prototype.disableTransition=function(e){var t={};t[this.transitionType]="",!1===this.options.fade?this.$slideTrack.css(t):this.$slides.eq(e).css(t)},r.prototype.fadeSlide=function(e,t){var i=this;!1===i.cssTransitions?(i.$slides.eq(e).css({zIndex:i.options.zIndex}),i.$slides.eq(e).animate({opacity:1},i.options.speed,i.options.easing,t)):(i.applyTransition(e),i.$slides.eq(e).css({opacity:1,zIndex:i.options.zIndex}),t&&setTimeout(function(){i.disableTransition(e),t.call()},i.options.speed))},r.prototype.fadeSlideOut=function(e){var t=this;!1===t.cssTransitions?t.$slides.eq(e).animate({opacity:0,zIndex:t.options.zIndex-2},t.options.speed,t.options.easing):(t.applyTransition(e),t.$slides.eq(e).css({opacity:0,zIndex:t.options.zIndex-2}))},r.prototype.filterSlides=r.prototype.slickFilter=function(e){var t=this;null!==e&&(t.$slidesCache=t.$slides,t.unload(),t.$slideTrack.children(this.options.slide).detach(),t.$slidesCache.filter(e).appendTo(t.$slideTrack),t.reinit())},r.prototype.focusHandler=function(){var i=this;i.$slider.off("focus.slick blur.slick").on("focus.slick blur.slick","*",function(e){e.stopImmediatePropagation();var t=d(this);setTimeout(function(){i.options.pauseOnFocus&&(i.focussed=t.is(":focus"),i.autoPlay())},0)})},r.prototype.getCurrent=r.prototype.slickCurrentSlide=function(){return this.currentSlide},r.prototype.getDotCount=function(){var e=this,t=0,i=0,o=0;if(!0===e.options.infinite)if(e.slideCount<=e.options.slidesToShow)++o;else for(;t<e.slideCount;)++o,t=i+e.options.slidesToScroll,i+=e.options.slidesToScroll<=e.options.slidesToShow?e.options.slidesToScroll:e.options.slidesToShow;else if(!0===e.options.centerMode)o=e.slideCount;else if(e.options.asNavFor)for(;t<e.slideCount;)++o,t=i+e.options.slidesToScroll,i+=e.options.slidesToScroll<=e.options.slidesToShow?e.options.slidesToScroll:e.options.slidesToShow;else o=1+Math.ceil((e.slideCount-e.options.slidesToShow)/e.options.slidesToScroll);return o-1},r.prototype.getLeft=function(e){var t,i,o,n,s=this,r=0;return s.slideOffset=0,i=s.$slides.first().outerHeight(!0),!0===s.options.infinite?(s.slideCount>s.options.slidesToShow&&(s.slideOffset=s.slideWidth*s.options.slidesToShow*-1,n=-1,!0===s.options.vertical&&!0===s.options.centerMode&&(2===s.options.slidesToShow?n=-1.5:1===s.options.slidesToShow&&(n=-2)),r=i*s.options.slidesToShow*n),s.slideCount%s.options.slidesToScroll!=0&&e+s.options.slidesToScroll>s.slideCount&&s.slideCount>s.options.slidesToShow&&(r=e>s.slideCount?(s.slideOffset=(s.options.slidesToShow-(e-s.slideCount))*s.slideWidth*-1,(s.options.slidesToShow-(e-s.slideCount))*i*-1):(s.slideOffset=s.slideCount%s.options.slidesToScroll*s.slideWidth*-1,s.slideCount%s.options.slidesToScroll*i*-1))):e+s.options.slidesToShow>s.slideCount&&(s.slideOffset=(e+s.options.slidesToShow-s.slideCount)*s.slideWidth,r=(e+s.options.slidesToShow-s.slideCount)*i),s.slideCount<=s.options.slidesToShow&&(r=s.slideOffset=0),!0===s.options.centerMode&&s.slideCount<=s.options.slidesToShow?s.slideOffset=s.slideWidth*Math.floor(s.options.slidesToShow)/2-s.slideWidth*s.slideCount/2:!0===s.options.centerMode&&!0===s.options.infinite?s.slideOffset+=s.slideWidth*Math.floor(s.options.slidesToShow/2)-s.slideWidth:!0===s.options.centerMode&&(s.slideOffset=0,s.slideOffset+=s.slideWidth*Math.floor(s.options.slidesToShow/2)),t=!1===s.options.vertical?e*s.slideWidth*-1+s.slideOffset:e*i*-1+r,!0===s.options.variableWidth&&(o=s.slideCount<=s.options.slidesToShow||!1===s.options.infinite?s.$slideTrack.children(".slick-slide").eq(e):s.$slideTrack.children(".slick-slide").eq(e+s.options.slidesToShow),t=!0===s.options.rtl?o[0]?-1*(s.$slideTrack.width()-o[0].offsetLeft-o.width()):0:o[0]?-1*o[0].offsetLeft:0,!0===s.options.centerMode&&(o=s.slideCount<=s.options.slidesToShow||!1===s.options.infinite?s.$slideTrack.children(".slick-slide").eq(e):s.$slideTrack.children(".slick-slide").eq(e+s.options.slidesToShow+1),t=!0===s.options.rtl?o[0]?-1*(s.$slideTrack.width()-o[0].offsetLeft-o.width()):0:o[0]?-1*o[0].offsetLeft:0,t+=(s.$list.width()-o.outerWidth())/2)),t},r.prototype.getOption=r.prototype.slickGetOption=function(e){return this.options[e]},r.prototype.getNavigableIndexes=function(){var e,t=this,i=0,o=0,n=[];for(e=!1===t.options.infinite?t.slideCount:(i=-1*t.options.slidesToScroll,o=-1*t.options.slidesToScroll,2*t.slideCount);i<e;)n.push(i),i=o+t.options.slidesToScroll,o+=t.options.slidesToScroll<=t.options.slidesToShow?t.options.slidesToScroll:t.options.slidesToShow;return n},r.prototype.getSlick=function(){return this},r.prototype.getSlideCount=function(){var i,o,n=this;return o=!0===n.options.centerMode?n.slideWidth*Math.floor(n.options.slidesToShow/2):0,!0===n.options.swipeToSlide?(n.$slideTrack.find(".slick-slide").each(function(e,t){if(t.offsetLeft-o+d(t).outerWidth()/2>-1*n.swipeLeft)return i=t,!1}),Math.abs(d(i).attr("data-slick-index")-n.currentSlide)||1):n.options.slidesToScroll},r.prototype.goTo=r.prototype.slickGoTo=function(e,t){this.changeSlide({data:{message:"index",index:parseInt(e)}},t)},r.prototype.init=function(e){var t=this;d(t.$slider).hasClass("slick-initialized")||(d(t.$slider).addClass("slick-initialized"),t.buildRows(),t.buildOut(),t.setProps(),t.startLoad(),t.loadSlider(),t.initializeEvents(),t.updateArrows(),t.updateDots(),t.checkResponsive(!0),t.focusHandler()),e&&t.$slider.trigger("init",[t]),!0===t.options.accessibility&&t.initADA(),t.options.autoplay&&(t.paused=!1,t.autoPlay())},r.prototype.initADA=function(){var o=this,i=Math.ceil(o.slideCount/o.options.slidesToShow),n=o.getNavigableIndexes().filter(function(e){return 0<=e&&e<o.slideCount});o.$slides.add(o.$slideTrack.find(".slick-cloned")).attr({"aria-hidden":"true",tabindex:"-1"}).find("a, input, button, select").attr({tabindex:"-1"}),null!==o.$dots&&(o.$slides.not(o.$slideTrack.find(".slick-cloned")).each(function(e){var t=n.indexOf(e);if(d(this).attr({role:"tabpanel",id:"slick-slide"+o.instanceUid+e,tabindex:-1}),-1!==t){var i="slick-slide-control"+o.instanceUid+t;d("#"+i).length&&d(this).attr({"aria-describedby":i})}}),o.$dots.attr("role","tablist").find("li").each(function(e){var t=n[e];d(this).attr({role:"presentation"}),d(this).find("button").first().attr({role:"tab",id:"slick-slide-control"+o.instanceUid+e,"aria-controls":"slick-slide"+o.instanceUid+t,"aria-label":e+1+" of "+i,"aria-selected":null,tabindex:"-1"})}).eq(o.currentSlide).find("button").attr({"aria-selected":"true",tabindex:"0"}).end());for(var e=o.currentSlide,t=e+o.options.slidesToShow;e<t;e++)o.options.focusOnChange?o.$slides.eq(e).attr({tabindex:"0"}):o.$slides.eq(e).removeAttr("tabindex");o.activateADA()},r.prototype.initArrowEvents=function(){var e=this;!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow.off("click.slick").on("click.slick",{message:"previous"},e.changeSlide),e.$nextArrow.off("click.slick").on("click.slick",{message:"next"},e.changeSlide),!0===e.options.accessibility&&(e.$prevArrow.on("keydown.slick",e.keyHandler),e.$nextArrow.on("keydown.slick",e.keyHandler)))},r.prototype.initDotEvents=function(){var e=this;!0===e.options.dots&&e.slideCount>e.options.slidesToShow&&(d("li",e.$dots).on("click.slick",{message:"index"},e.changeSlide),!0===e.options.accessibility&&e.$dots.on("keydown.slick",e.keyHandler)),!0===e.options.dots&&!0===e.options.pauseOnDotsHover&&e.slideCount>e.options.slidesToShow&&d("li",e.$dots).on("mouseenter.slick",d.proxy(e.interrupt,e,!0)).on("mouseleave.slick",d.proxy(e.interrupt,e,!1))},r.prototype.initSlideEvents=function(){var e=this;e.options.pauseOnHover&&(e.$list.on("mouseenter.slick",d.proxy(e.interrupt,e,!0)),e.$list.on("mouseleave.slick",d.proxy(e.interrupt,e,!1)))},r.prototype.initializeEvents=function(){var e=this;e.initArrowEvents(),e.initDotEvents(),e.initSlideEvents(),e.$list.on("touchstart.slick mousedown.slick",{action:"start"},e.swipeHandler),e.$list.on("touchmove.slick mousemove.slick",{action:"move"},e.swipeHandler),e.$list.on("touchend.slick mouseup.slick",{action:"end"},e.swipeHandler),e.$list.on("touchcancel.slick mouseleave.slick",{action:"end"},e.swipeHandler),e.$list.on("click.slick",e.clickHandler),d(document).on(e.visibilityChange,d.proxy(e.visibility,e)),!0===e.options.accessibility&&e.$list.on("keydown.slick",e.keyHandler),!0===e.options.focusOnSelect&&d(e.$slideTrack).children().on("click.slick",e.selectHandler),d(window).on("orientationchange.slick.slick-"+e.instanceUid,d.proxy(e.orientationChange,e)),d(window).on("resize.slick.slick-"+e.instanceUid,d.proxy(e.resize,e)),d("[draggable!=true]",e.$slideTrack).on("dragstart",e.preventDefault),d(window).on("load.slick.slick-"+e.instanceUid,e.setPosition),d(e.setPosition)},r.prototype.initUI=function(){var e=this;!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow.show(),e.$nextArrow.show()),!0===e.options.dots&&e.slideCount>e.options.slidesToShow&&e.$dots.show()},r.prototype.keyHandler=function(e){var t=this;e.target.tagName.match("TEXTAREA|INPUT|SELECT")||(37===e.keyCode&&!0===t.options.accessibility?t.changeSlide({data:{message:!0===t.options.rtl?"next":"previous"}}):39===e.keyCode&&!0===t.options.accessibility&&t.changeSlide({data:{message:!0===t.options.rtl?"previous":"next"}}))},r.prototype.lazyLoad=function(){var e,t,i,s=this;function o(e){d("img[data-lazy]",e).each(function(){var e=d(this),t=d(this).attr("data-lazy"),i=d(this).attr("data-srcset"),o=d(this).attr("data-sizes")||s.$slider.attr("data-sizes"),n=document.createElement("img");n.onload=function(){e.animate({opacity:0},100,function(){i&&(e.attr("srcset",i),o&&e.attr("sizes",o)),e.attr("src",t).animate({opacity:1},200,function(){e.removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading")}),s.$slider.trigger("lazyLoaded",[s,e,t])})},n.onerror=function(){e.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"),s.$slider.trigger("lazyLoadError",[s,e,t])},n.src=t})}if(!0===s.options.centerMode?i=!0===s.options.infinite?(t=s.currentSlide+(s.options.slidesToShow/2+1))+s.options.slidesToShow+2:(t=Math.max(0,s.currentSlide-(s.options.slidesToShow/2+1)),s.options.slidesToShow/2+1+2+s.currentSlide):(t=s.options.infinite?s.options.slidesToShow+s.currentSlide:s.currentSlide,i=Math.ceil(t+s.options.slidesToShow),!0===s.options.fade&&(0<t&&t--,i<=s.slideCount&&i++)),e=s.$slider.find(".slick-slide").slice(t,i),"anticipated"===s.options.lazyLoad)for(var n=t-1,r=i,a=s.$slider.find(".slick-slide"),l=0;l<s.options.slidesToScroll;l++)n<0&&(n=s.slideCount-1),e=(e=e.add(a.eq(n))).add(a.eq(r)),n--,r++;o(e),s.slideCount<=s.options.slidesToShow?o(s.$slider.find(".slick-slide")):s.currentSlide>=s.slideCount-s.options.slidesToShow?o(s.$slider.find(".slick-cloned").slice(0,s.options.slidesToShow)):0===s.currentSlide&&o(s.$slider.find(".slick-cloned").slice(-1*s.options.slidesToShow))},r.prototype.loadSlider=function(){var e=this;e.setPosition(),e.$slideTrack.css({opacity:1}),e.$slider.removeClass("slick-loading"),e.initUI(),"progressive"===e.options.lazyLoad&&e.progressiveLazyLoad()},r.prototype.next=r.prototype.slickNext=function(){this.changeSlide({data:{message:"next"}})},r.prototype.orientationChange=function(){this.checkResponsive(),this.setPosition()},r.prototype.pause=r.prototype.slickPause=function(){this.autoPlayClear(),this.paused=!0},r.prototype.play=r.prototype.slickPlay=function(){var e=this;e.autoPlay(),e.options.autoplay=!0,e.paused=!1,e.focussed=!1,e.interrupted=!1},r.prototype.postSlide=function(e){var t=this;t.unslicked||(t.$slider.trigger("afterChange",[t,e]),t.animating=!1,t.slideCount>t.options.slidesToShow&&t.setPosition(),t.swipeLeft=null,t.options.autoplay&&t.autoPlay(),!0===t.options.accessibility&&(t.initADA(),t.options.focusOnChange&&d(t.$slides.get(t.currentSlide)).attr("tabindex",0).focus()))},r.prototype.prev=r.prototype.slickPrev=function(){this.changeSlide({data:{message:"previous"}})},r.prototype.preventDefault=function(e){e.preventDefault()},r.prototype.progressiveLazyLoad=function(e){e=e||1;var t,i,o,n,s,r=this,a=d("img[data-lazy]",r.$slider);a.length?(t=a.first(),i=t.attr("data-lazy"),o=t.attr("data-srcset"),n=t.attr("data-sizes")||r.$slider.attr("data-sizes"),(s=document.createElement("img")).onload=function(){o&&(t.attr("srcset",o),n&&t.attr("sizes",n)),t.attr("src",i).removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading"),!0===r.options.adaptiveHeight&&r.setPosition(),r.$slider.trigger("lazyLoaded",[r,t,i]),r.progressiveLazyLoad()},s.onerror=function(){e<3?setTimeout(function(){r.progressiveLazyLoad(e+1)},500):(t.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"),r.$slider.trigger("lazyLoadError",[r,t,i]),r.progressiveLazyLoad())},s.src=i):r.$slider.trigger("allImagesLoaded",[r])},r.prototype.refresh=function(e){var t,i,o=this;i=o.slideCount-o.options.slidesToShow,!o.options.infinite&&o.currentSlide>i&&(o.currentSlide=i),o.slideCount<=o.options.slidesToShow&&(o.currentSlide=0),t=o.currentSlide,o.destroy(!0),d.extend(o,o.initials,{currentSlide:t}),o.init(),e||o.changeSlide({data:{message:"index",index:t}},!1)},r.prototype.registerBreakpoints=function(){var e,t,i,o=this,n=o.options.responsive||null;if("array"===d.type(n)&&n.length){for(e in o.respondTo=o.options.respondTo||"window",n)if(i=o.breakpoints.length-1,n.hasOwnProperty(e)){for(t=n[e].breakpoint;0<=i;)o.breakpoints[i]&&o.breakpoints[i]===t&&o.breakpoints.splice(i,1),i--;o.breakpoints.push(t),o.breakpointSettings[t]=n[e].settings}o.breakpoints.sort(function(e,t){return o.options.mobileFirst?e-t:t-e})}},r.prototype.reinit=function(){var e=this;e.$slides=e.$slideTrack.children(e.options.slide).addClass("slick-slide"),e.slideCount=e.$slides.length,e.currentSlide>=e.slideCount&&0!==e.currentSlide&&(e.currentSlide=e.currentSlide-e.options.slidesToScroll),e.slideCount<=e.options.slidesToShow&&(e.currentSlide=0),e.registerBreakpoints(),e.setProps(),e.setupInfinite(),e.buildArrows(),e.updateArrows(),e.initArrowEvents(),e.buildDots(),e.updateDots(),e.initDotEvents(),e.cleanUpSlideEvents(),e.initSlideEvents(),e.checkResponsive(!1,!0),!0===e.options.focusOnSelect&&d(e.$slideTrack).children().on("click.slick",e.selectHandler),e.setSlideClasses("number"==typeof e.currentSlide?e.currentSlide:0),e.setPosition(),e.focusHandler(),e.paused=!e.options.autoplay,e.autoPlay(),e.$slider.trigger("reInit",[e])},r.prototype.resize=function(){var e=this;d(window).width()!==e.windowWidth&&(clearTimeout(e.windowDelay),e.windowDelay=window.setTimeout(function(){e.windowWidth=d(window).width(),e.checkResponsive(),e.unslicked||e.setPosition()},50))},r.prototype.removeSlide=r.prototype.slickRemove=function(e,t,i){var o=this;if(e="boolean"==typeof e?!0===(t=e)?0:o.slideCount-1:!0===t?--e:e,o.slideCount<1||e<0||e>o.slideCount-1)return!1;o.unload(),!0===i?o.$slideTrack.children().remove():o.$slideTrack.children(this.options.slide).eq(e).remove(),o.$slides=o.$slideTrack.children(this.options.slide),o.$slideTrack.children(this.options.slide).detach(),o.$slideTrack.append(o.$slides),o.$slidesCache=o.$slides,o.reinit()},r.prototype.setCSS=function(e){var t,i,o=this,n={};!0===o.options.rtl&&(e=-e),t="left"==o.positionProp?Math.ceil(e)+"px":"0px",i="top"==o.positionProp?Math.ceil(e)+"px":"0px",n[o.positionProp]=e,!1===o.transformsEnabled||(!(n={})===o.cssTransitions?n[o.animType]="translate("+t+", "+i+")":n[o.animType]="translate3d("+t+", "+i+", 0px)"),o.$slideTrack.css(n)},r.prototype.setDimensions=function(){var e=this;!1===e.options.vertical?!0===e.options.centerMode&&e.$list.css({padding:"0px "+e.options.centerPadding}):(e.$list.height(e.$slides.first().outerHeight(!0)*e.options.slidesToShow),!0===e.options.centerMode&&e.$list.css({padding:e.options.centerPadding+" 0px"})),e.listWidth=e.$list.width(),e.listHeight=e.$list.height(),!1===e.options.vertical&&!1===e.options.variableWidth?(e.slideWidth=Math.ceil(e.listWidth/e.options.slidesToShow),e.$slideTrack.width(Math.ceil(e.slideWidth*e.$slideTrack.children(".slick-slide").length))):!0===e.options.variableWidth?e.$slideTrack.width(5e3*e.slideCount):(e.slideWidth=Math.ceil(e.listWidth),e.$slideTrack.height(Math.ceil(e.$slides.first().outerHeight(!0)*e.$slideTrack.children(".slick-slide").length)));var t=e.$slides.first().outerWidth(!0)-e.$slides.first().width();!1===e.options.variableWidth&&e.$slideTrack.children(".slick-slide").width(e.slideWidth-t)},r.prototype.setFade=function(){var i,o=this;o.$slides.each(function(e,t){i=o.slideWidth*e*-1,!0===o.options.rtl?d(t).css({position:"relative",right:i,top:0,zIndex:o.options.zIndex-2,opacity:0}):d(t).css({position:"relative",left:i,top:0,zIndex:o.options.zIndex-2,opacity:0})}),o.$slides.eq(o.currentSlide).css({zIndex:o.options.zIndex-1,opacity:1})},r.prototype.setHeight=function(){var e=this;if(1===e.options.slidesToShow&&!0===e.options.adaptiveHeight&&!1===e.options.vertical){var t=e.$slides.eq(e.currentSlide).outerHeight(!0);e.$list.css("height",t)}},r.prototype.setOption=r.prototype.slickSetOption=function(){var e,t,i,o,n,s=this,r=!1;if("object"===d.type(arguments[0])?(i=arguments[0],r=arguments[1],n="multiple"):"string"===d.type(arguments[0])&&(i=arguments[0],o=arguments[1],r=arguments[2],"responsive"===arguments[0]&&"array"===d.type(arguments[1])?n="responsive":void 0!==arguments[1]&&(n="single")),"single"===n)s.options[i]=o;else if("multiple"===n)d.each(i,function(e,t){s.options[e]=t});else if("responsive"===n)for(t in o)if("array"!==d.type(s.options.responsive))s.options.responsive=[o[t]];else{for(e=s.options.responsive.length-1;0<=e;)s.options.responsive[e].breakpoint===o[t].breakpoint&&s.options.responsive.splice(e,1),e--;s.options.responsive.push(o[t])}r&&(s.unload(),s.reinit())},r.prototype.setPosition=function(){var e=this;e.setDimensions(),e.setHeight(),!1===e.options.fade?e.setCSS(e.getLeft(e.currentSlide)):e.setFade(),e.$slider.trigger("setPosition",[e])},r.prototype.setProps=function(){var e=this,t=document.body.style;e.positionProp=!0===e.options.vertical?"top":"left","top"===e.positionProp?e.$slider.addClass("slick-vertical"):e.$slider.removeClass("slick-vertical"),void 0===t.WebkitTransition&&void 0===t.MozTransition&&void 0===t.msTransition||!0===e.options.useCSS&&(e.cssTransitions=!0),e.options.fade&&("number"==typeof e.options.zIndex?e.options.zIndex<3&&(e.options.zIndex=3):e.options.zIndex=e.defaults.zIndex),void 0!==t.OTransform&&(e.animType="OTransform",e.transformType="-o-transform",e.transitionType="OTransition",void 0===t.perspectiveProperty&&void 0===t.webkitPerspective&&(e.animType=!1)),void 0!==t.MozTransform&&(e.animType="MozTransform",e.transformType="-moz-transform",e.transitionType="MozTransition",void 0===t.perspectiveProperty&&void 0===t.MozPerspective&&(e.animType=!1)),void 0!==t.webkitTransform&&(e.animType="webkitTransform",e.transformType="-webkit-transform",e.transitionType="webkitTransition",void 0===t.perspectiveProperty&&void 0===t.webkitPerspective&&(e.animType=!1)),void 0!==t.msTransform&&(e.animType="msTransform",e.transformType="-ms-transform",e.transitionType="msTransition",void 0===t.msTransform&&(e.animType=!1)),void 0!==t.transform&&!1!==e.animType&&(e.animType="transform",e.transformType="transform",e.transitionType="transition"),e.transformsEnabled=e.options.useTransform&&null!==e.animType&&!1!==e.animType},r.prototype.setSlideClasses=function(e){var t,i,o,n,s=this;if(i=s.$slider.find(".slick-slide").removeClass("slick-active slick-center slick-current").attr("aria-hidden","true"),s.$slides.eq(e).addClass("slick-current"),!0===s.options.centerMode){var r=s.options.slidesToShow%2==0?1:0;t=Math.floor(s.options.slidesToShow/2),!0===s.options.infinite&&(t<=e&&e<=s.slideCount-1-t?s.$slides.slice(e-t+r,e+t+1).addClass("slick-active").attr("aria-hidden","false"):(o=s.options.slidesToShow+e,i.slice(o-t+1+r,o+t+2).addClass("slick-active").attr("aria-hidden","false")),0===e?i.eq(i.length-1-s.options.slidesToShow).addClass("slick-center"):e===s.slideCount-1&&i.eq(s.options.slidesToShow).addClass("slick-center")),s.$slides.eq(e).addClass("slick-center")}else 0<=e&&e<=s.slideCount-s.options.slidesToShow?s.$slides.slice(e,e+s.options.slidesToShow).addClass("slick-active").attr("aria-hidden","false"):i.length<=s.options.slidesToShow?i.addClass("slick-active").attr("aria-hidden","false"):(n=s.slideCount%s.options.slidesToShow,o=!0===s.options.infinite?s.options.slidesToShow+e:e,s.options.slidesToShow==s.options.slidesToScroll&&s.slideCount-e<s.options.slidesToShow?i.slice(o-(s.options.slidesToShow-n),o+n).addClass("slick-active").attr("aria-hidden","false"):i.slice(o,o+s.options.slidesToShow).addClass("slick-active").attr("aria-hidden","false"));"ondemand"!==s.options.lazyLoad&&"anticipated"!==s.options.lazyLoad||s.lazyLoad()},r.prototype.setupInfinite=function(){var e,t,i,o=this;if(!0===o.options.fade&&(o.options.centerMode=!1),!0===o.options.infinite&&!1===o.options.fade&&(t=null,o.slideCount>o.options.slidesToShow)){for(i=!0===o.options.centerMode?o.options.slidesToShow+1:o.options.slidesToShow,e=o.slideCount;e>o.slideCount-i;e-=1)t=e-1,d(o.$slides[t]).clone(!0).attr("id","").attr("data-slick-index",t-o.slideCount).prependTo(o.$slideTrack).addClass("slick-cloned");for(e=0;e<i+o.slideCount;e+=1)t=e,d(o.$slides[t]).clone(!0).attr("id","").attr("data-slick-index",t+o.slideCount).appendTo(o.$slideTrack).addClass("slick-cloned");o.$slideTrack.find(".slick-cloned").find("[id]").each(function(){d(this).attr("id","")})}},r.prototype.interrupt=function(e){e||this.autoPlay(),this.interrupted=e},r.prototype.selectHandler=function(e){var t=d(e.target).is(".slick-slide")?d(e.target):d(e.target).parents(".slick-slide"),i=parseInt(t.attr("data-slick-index"));i||(i=0),this.slideCount<=this.options.slidesToShow?this.slideHandler(i,!1,!0):this.slideHandler(i)},r.prototype.slideHandler=function(e,t,i){var o,n,s,r,a,l,d=this;if(t=t||!1,!(!0===d.animating&&!0===d.options.waitForAnimate||!0===d.options.fade&&d.currentSlide===e))if(!1===t&&d.asNavFor(e),o=e,a=d.getLeft(o),r=d.getLeft(d.currentSlide),d.currentLeft=null===d.swipeLeft?r:d.swipeLeft,!1===d.options.infinite&&!1===d.options.centerMode&&(e<0||e>d.getDotCount()*d.options.slidesToScroll))!1===d.options.fade&&(o=d.currentSlide,!0!==i&&d.slideCount>d.options.slidesToShow?d.animateSlide(r,function(){d.postSlide(o)}):d.postSlide(o));else if(!1===d.options.infinite&&!0===d.options.centerMode&&(e<0||e>d.slideCount-d.options.slidesToScroll))!1===d.options.fade&&(o=d.currentSlide,!0!==i&&d.slideCount>d.options.slidesToShow?d.animateSlide(r,function(){d.postSlide(o)}):d.postSlide(o));else{if(d.options.autoplay&&clearInterval(d.autoPlayTimer),n=o<0?d.slideCount%d.options.slidesToScroll!=0?d.slideCount-d.slideCount%d.options.slidesToScroll:d.slideCount+o:o>=d.slideCount?d.slideCount%d.options.slidesToScroll!=0?0:o-d.slideCount:o,d.animating=!0,d.$slider.trigger("beforeChange",[d,d.currentSlide,n]),s=d.currentSlide,d.currentSlide=n,d.setSlideClasses(d.currentSlide),d.options.asNavFor&&(l=(l=d.getNavTarget()).slick("getSlick")).slideCount<=l.options.slidesToShow&&l.setSlideClasses(d.currentSlide),d.updateDots(),d.updateArrows(),!0===d.options.fade)return!0!==i?(d.fadeSlideOut(s),d.fadeSlide(n,function(){d.postSlide(n)})):d.postSlide(n),void d.animateHeight();!0!==i&&d.slideCount>d.options.slidesToShow?d.animateSlide(a,function(){d.postSlide(n)}):d.postSlide(n)}},r.prototype.startLoad=function(){var e=this;!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow.hide(),e.$nextArrow.hide()),!0===e.options.dots&&e.slideCount>e.options.slidesToShow&&e.$dots.hide(),e.$slider.addClass("slick-loading")},r.prototype.swipeDirection=function(){var e,t,i,o,n=this;return e=n.touchObject.startX-n.touchObject.curX,t=n.touchObject.startY-n.touchObject.curY,i=Math.atan2(t,e),(o=Math.round(180*i/Math.PI))<0&&(o=360-Math.abs(o)),o<=45&&0<=o?!1===n.options.rtl?"left":"right":o<=360&&315<=o?!1===n.options.rtl?"left":"right":135<=o&&o<=225?!1===n.options.rtl?"right":"left":!0===n.options.verticalSwiping?35<=o&&o<=135?"down":"up":"vertical"},r.prototype.swipeEnd=function(e){var t,i,o=this;if(o.dragging=!1,o.swiping=!1,o.scrolling)return o.scrolling=!1;if(o.interrupted=!1,o.shouldClick=!(10<o.touchObject.swipeLength),void 0===o.touchObject.curX)return!1;if(!0===o.touchObject.edgeHit&&o.$slider.trigger("edge",[o,o.swipeDirection()]),o.touchObject.swipeLength>=o.touchObject.minSwipe){switch(i=o.swipeDirection()){case"left":case"down":t=o.options.swipeToSlide?o.checkNavigable(o.currentSlide+o.getSlideCount()):o.currentSlide+o.getSlideCount(),o.currentDirection=0;break;case"right":case"up":t=o.options.swipeToSlide?o.checkNavigable(o.currentSlide-o.getSlideCount()):o.currentSlide-o.getSlideCount(),o.currentDirection=1}"vertical"!=i&&(o.slideHandler(t),o.touchObject={},o.$slider.trigger("swipe",[o,i]))}else o.touchObject.startX!==o.touchObject.curX&&(o.slideHandler(o.currentSlide),o.touchObject={})},r.prototype.swipeHandler=function(e){var t=this;if(!(!1===t.options.swipe||"ontouchend"in document&&!1===t.options.swipe||!1===t.options.draggable&&-1!==e.type.indexOf("mouse")))switch(t.touchObject.fingerCount=e.originalEvent&&void 0!==e.originalEvent.touches?e.originalEvent.touches.length:1,t.touchObject.minSwipe=t.listWidth/t.options.touchThreshold,!0===t.options.verticalSwiping&&(t.touchObject.minSwipe=t.listHeight/t.options.touchThreshold),e.data.action){case"start":t.swipeStart(e);break;case"move":t.swipeMove(e);break;case"end":t.swipeEnd(e)}},r.prototype.swipeMove=function(e){var t,i,o,n,s,r,a=this;return s=void 0!==e.originalEvent?e.originalEvent.touches:null,!(!a.dragging||a.scrolling||s&&1!==s.length)&&(t=a.getLeft(a.currentSlide),a.touchObject.curX=void 0!==s?s[0].pageX:e.clientX,a.touchObject.curY=void 0!==s?s[0].pageY:e.clientY,a.touchObject.swipeLength=Math.round(Math.sqrt(Math.pow(a.touchObject.curX-a.touchObject.startX,2))),r=Math.round(Math.sqrt(Math.pow(a.touchObject.curY-a.touchObject.startY,2))),!a.options.verticalSwiping&&!a.swiping&&4<r?!(a.scrolling=!0):(!0===a.options.verticalSwiping&&(a.touchObject.swipeLength=r),i=a.swipeDirection(),void 0!==e.originalEvent&&4<a.touchObject.swipeLength&&(a.swiping=!0,e.preventDefault()),n=(!1===a.options.rtl?1:-1)*(a.touchObject.curX>a.touchObject.startX?1:-1),!0===a.options.verticalSwiping&&(n=a.touchObject.curY>a.touchObject.startY?1:-1),o=a.touchObject.swipeLength,(a.touchObject.edgeHit=!1)===a.options.infinite&&(0===a.currentSlide&&"right"===i||a.currentSlide>=a.getDotCount()&&"left"===i)&&(o=a.touchObject.swipeLength*a.options.edgeFriction,a.touchObject.edgeHit=!0),!1===a.options.vertical?a.swipeLeft=t+o*n:a.swipeLeft=t+o*(a.$list.height()/a.listWidth)*n,!0===a.options.verticalSwiping&&(a.swipeLeft=t+o*n),!0!==a.options.fade&&!1!==a.options.touchMove&&(!0===a.animating?(a.swipeLeft=null,!1):void a.setCSS(a.swipeLeft))))},r.prototype.swipeStart=function(e){var t,i=this;if(i.interrupted=!0,1!==i.touchObject.fingerCount||i.slideCount<=i.options.slidesToShow)return!(i.touchObject={});void 0!==e.originalEvent&&void 0!==e.originalEvent.touches&&(t=e.originalEvent.touches[0]),i.touchObject.startX=i.touchObject.curX=void 0!==t?t.pageX:e.clientX,i.touchObject.startY=i.touchObject.curY=void 0!==t?t.pageY:e.clientY,i.dragging=!0},r.prototype.unfilterSlides=r.prototype.slickUnfilter=function(){var e=this;null!==e.$slidesCache&&(e.unload(),e.$slideTrack.children(this.options.slide).detach(),e.$slidesCache.appendTo(e.$slideTrack),e.reinit())},r.prototype.unload=function(){var e=this;d(".slick-cloned",e.$slider).remove(),e.$dots&&e.$dots.remove(),e.$prevArrow&&e.htmlExpr.test(e.options.prevArrow)&&e.$prevArrow.remove(),e.$nextArrow&&e.htmlExpr.test(e.options.nextArrow)&&e.$nextArrow.remove(),e.$slides.removeClass("slick-slide slick-active slick-visible slick-current").attr("aria-hidden","true").css("width","")},r.prototype.unslick=function(e){this.$slider.trigger("unslick",[this,e]),this.destroy()},r.prototype.updateArrows=function(){var e=this;Math.floor(e.options.slidesToShow/2),!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&!e.options.infinite&&(e.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false"),e.$nextArrow.removeClass("slick-disabled").attr("aria-disabled","false"),0===e.currentSlide?(e.$prevArrow.addClass("slick-disabled").attr("aria-disabled","true"),e.$nextArrow.removeClass("slick-disabled").attr("aria-disabled","false")):e.currentSlide>=e.slideCount-e.options.slidesToShow&&!1===e.options.centerMode?(e.$nextArrow.addClass("slick-disabled").attr("aria-disabled","true"),e.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false")):e.currentSlide>=e.slideCount-1&&!0===e.options.centerMode&&(e.$nextArrow.addClass("slick-disabled").attr("aria-disabled","true"),e.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false")))},r.prototype.updateDots=function(){var e=this;null!==e.$dots&&(e.$dots.find("li").removeClass("slick-active").end(),e.$dots.find("li").eq(Math.floor(e.currentSlide/e.options.slidesToScroll)).addClass("slick-active"))},r.prototype.visibility=function(){this.options.autoplay&&(document[this.hidden]?this.interrupted=!0:this.interrupted=!1)},d.fn.slick=function(){var e,t,i=this,o=arguments[0],n=Array.prototype.slice.call(arguments,1),s=i.length;for(e=0;e<s;e++)if("object"==typeof o||void 0===o?i[e].slick=new r(i[e],o):t=i[e].slick[o].apply(i[e].slick,n),void 0!==t)return t;return i}}),$(function(){$(".reviews-slider").slick({slidesToShow:4,slidesToScroll:1,prevArrow:$(".reviews-slider-nav .icon-arrow-thin-left"),nextArrow:$(".reviews-slider-nav .icon-arrow-thin-right"),dots:!0,responsive:[{breakpoint:1400,settings:{slidesToShow:3,slidesToScroll:1}},{breakpoint:1024,settings:{slidesToShow:2,slidesToScroll:2}},{breakpoint:600,settings:{slidesToShow:1,slidesToScroll:1}}]}),$(".partners-slider").slick({slidesToShow:4,slidesToScroll:1,responsive:[{breakpoint:1024,settings:{slidesToShow:3,slidesToScroll:1,dots:!0,autoplay:!0,arrow:!1}},{breakpoint:480,settings:{slidesToShow:2,slidesToScroll:2,dots:!0,autoplay:!0}}]}),$(".pro-slider").slick({slidesToShow:1,slidesToScroll:1,dots:!0}),$(".director-slider").slick({infinite:!0,centerMode:!0,slidesToShow:3,centerPadding:"5px",arrow:!0,responsive:[{breakpoint:768,settings:{centerMode:!0,dots:!0,slidesToShow:1}}]})}),jQuery(function(){initLightbox()}),function(o,i,$,c){var n=$("html"),s=$(o),d=$(i),A=$.fancybox=function(){A.open.apply(this,arguments)},r=navigator.userAgent.match(/msie/i),a=null,l=i.createTouch!==c,p=function(e){return e&&e.hasOwnProperty&&e instanceof $},u=function(e){return e&&"string"===$.type(e)},O=function(e){return u(e)&&0<e.indexOf("%")},H=function(e,t){var i=parseInt(e,10)||0;return t&&O(e)&&(i*=A.getViewport()[t]/100),Math.ceil(i)},P=function(e,t){return H(e,t)+"px"};$.extend(A,{version:"2.1.5",defaults:{padding:15,margin:20,width:800,height:600,minWidth:100,minHeight:100,maxWidth:9999,maxHeight:9999,pixelRatio:1,autoSize:!0,autoHeight:!1,autoWidth:!1,autoResize:!0,autoCenter:!l,fitToView:!0,aspectRatio:!1,topRatio:.5,leftRatio:.5,scrolling:"auto",wrapCSS:"",arrows:!0,closeBtn:!0,closeClick:!1,nextClick:!1,mouseWheel:!0,autoPlay:!1,playSpeed:3e3,preload:3,modal:!1,loop:!0,ajax:{dataType:"html",headers:{"X-fancyBox":!0}},iframe:{scrolling:"auto",preload:!0},swf:{wmode:"transparent",allowfullscreen:"true",allowscriptaccess:"always"},keys:{next:{13:"left",34:"up",39:"left",40:"up"},prev:{8:"right",33:"down",37:"right",38:"down"},close:[27],play:[32],toggle:[70]},direction:{next:"left",prev:"right"},scrollOutside:!0,index:0,type:null,href:null,content:null,title:null,tpl:{wrap:'<div class="fancybox-wrap" tabIndex="-1"><div class="fancybox-skin"><div class="fancybox-outer"><div class="fancybox-inner"></div></div></div></div>',image:'<img class="fancybox-image" src="{href}" alt="" />',iframe:'<iframe id="fancybox-frame{rnd}" name="fancybox-frame{rnd}" class="fancybox-iframe" frameborder="0" vspace="0" hspace="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen'+(r?' allowtransparency="true"':"")+"></iframe>",error:'<p class="fancybox-error">The requested content cannot be loaded.<br/>Please try again later.</p>',closeBtn:'<a title="Close" class="fancybox-item fancybox-close" href="javascript:;"></a>',next:'<a title="Next" class="fancybox-nav fancybox-next" href="javascript:;"><span></span></a>',prev:'<a title="Previous" class="fancybox-nav fancybox-prev" href="javascript:;"><span></span></a>'},openEffect:"fade",openSpeed:250,openEasing:"swing",openOpacity:!0,openMethod:"zoomIn",closeEffect:"fade",closeSpeed:250,closeEasing:"swing",closeOpacity:!0,closeMethod:"zoomOut",nextEffect:"elastic",nextSpeed:250,nextEasing:"swing",nextMethod:"changeIn",prevEffect:"elastic",prevSpeed:250,prevEasing:"swing",prevMethod:"changeOut",helpers:{overlay:!0,title:!0},onCancel:$.noop,beforeLoad:$.noop,afterLoad:$.noop,beforeShow:$.noop,afterShow:$.noop,beforeChange:$.noop,beforeClose:$.noop,afterClose:$.noop},group:{},opts:{},previous:null,coming:null,current:null,isActive:!1,isOpen:!1,isOpened:!1,wrap:null,skin:null,outer:null,inner:null,player:{timer:null,isActive:!1},ajaxLoad:null,imgPreload:null,transitions:{},helpers:{},open:function(l,d){if(l&&($.isPlainObject(d)||(d={}),!1!==A.close(!0)))return $.isArray(l)||(l=p(l)?$(l).get():[l]),$.each(l,function(e,t){var i,o,n,s,r,a={};"object"===$.type(t)&&(t.nodeType&&(t=$(t)),p(t)?(a={href:t.data("fancybox-href")||t.attr("href"),title:t.data("fancybox-title")||t.attr("title"),isDom:!0,element:t},$.metadata&&$.extend(!0,a,t.metadata())):a=t),i=d.href||a.href||(u(t)?t:null),o=d.title!==c?d.title:a.title||"",!(s=(n=d.content||a.content)?"html":d.type||a.type)&&a.isDom&&((s=t.data("fancybox-type"))||(s=(s=t.prop("class").match(/fancybox\.(\w+)/))?s[1]:null)),u(i)&&(s||(A.isImage(i)?s="image":A.isSWF(i)?s="swf":"#"===i.charAt(0)?s="inline":u(t)&&(s="html",n=t)),"ajax"===s&&(i=(r=i.split(/\s+/,2)).shift(),r=r.shift())),n||("inline"===s?i?n=$(u(i)?i.replace(/.*(?=#[^\s]+$)/,""):i):a.isDom&&(n=t):"html"===s?n=i:!s&&!i&&a.isDom&&(s="inline",n=t)),$.extend(a,{href:i,type:s,content:n,title:o,selector:r}),l[e]=a}),A.opts=$.extend(!0,{},A.defaults,d),d.keys!==c&&(A.opts.keys=!!d.keys&&$.extend({},A.defaults.keys,d.keys)),A.group=l,A._start(A.opts.index)},cancel:function(){var e=A.coming;e&&!1!==A.trigger("onCancel")&&(A.hideLoading(),A.ajaxLoad&&A.ajaxLoad.abort(),A.ajaxLoad=null,A.imgPreload&&(A.imgPreload.onload=A.imgPreload.onerror=null),e.wrap&&e.wrap.stop(!0,!0).trigger("onReset").remove(),A.coming=null,A.current||A._afterZoomOut(e))},close:function(e){A.cancel(),!1!==A.trigger("beforeClose")&&(A.unbindEvents(),A.isActive&&(A.isOpen&&!0!==e?(A.isOpen=A.isOpened=!1,A.isClosing=!0,$(".fancybox-item, .fancybox-nav").remove(),A.wrap.stop(!0,!0).removeClass("fancybox-opened"),A.transitions[A.current.closeMethod]()):($(".fancybox-wrap").stop(!0).trigger("onReset").remove(),A._afterZoomOut())))},play:function(e){var t=function(){clearTimeout(A.player.timer)},i=function(){t(),A.current&&A.player.isActive&&(A.player.timer=setTimeout(A.next,A.current.playSpeed))},o=function(){t(),d.unbind(".player"),A.player.isActive=!1,A.trigger("onPlayEnd")};!0===e||!A.player.isActive&&!1!==e?A.current&&(A.current.loop||A.current.index<A.group.length-1)&&(A.player.isActive=!0,d.bind({"onCancel.player beforeClose.player":o,"onUpdate.player":i,"beforeLoad.player":t}),i(),A.trigger("onPlayStart")):o()},next:function(e){var t=A.current;t&&(u(e)||(e=t.direction.next),A.jumpto(t.index+1,e,"next"))},prev:function(e){var t=A.current;t&&(u(e)||(e=t.direction.prev),A.jumpto(t.index-1,e,"prev"))},jumpto:function(e,t,i){var o=A.current;o&&(e=H(e),A.direction=t||o.direction[e>=o.index?"next":"prev"],A.router=i||"jumpto",o.loop&&(e<0&&(e=o.group.length+e%o.group.length),e%=o.group.length),o.group[e]!==c&&(A.cancel(),A._start(e)))},reposition:function(e,t){var i,o=A.current,n=o?o.wrap:null;n&&(i=A._getPosition(t),e&&"scroll"===e.type?(delete i.position,n.stop(!0,!0).animate(i,200)):(n.css(i),o.pos=$.extend({},o.dim,i)))},update:function(t){var i=t&&t.type,o=!i||"orientationchange"===i;o&&(clearTimeout(a),a=null),A.isOpen&&!a&&(a=setTimeout(function(){var e=A.current;e&&!A.isClosing&&(A.wrap.removeClass("fancybox-tmp"),(o||"load"===i||"resize"===i&&e.autoResize)&&A._setDimension(),"scroll"===i&&e.canShrink||A.reposition(t),A.trigger("onUpdate"),a=null)},o&&!l?0:300))},toggle:function(e){A.isOpen&&(A.current.fitToView="boolean"===$.type(e)?e:!A.current.fitToView,l&&(A.wrap.removeAttr("style").addClass("fancybox-tmp"),A.trigger("onUpdate")),A.update())},hideLoading:function(){d.unbind(".loading"),$("#fancybox-loading").remove()},showLoading:function(){var e,t;A.hideLoading(),e=$('<div id="fancybox-loading"><div></div></div>').click(A.cancel).appendTo("body"),d.bind("keydown.loading",function(e){27===(e.which||e.keyCode)&&(e.preventDefault(),A.cancel())}),A.defaults.fixed||(t=A.getViewport(),e.css({position:"absolute",top:.5*t.h+t.y,left:.5*t.w+t.x}))},getViewport:function(){var e=A.current&&A.current.locked||!1,t={x:s.scrollLeft(),y:s.scrollTop()};return t.h=e?(t.w=e[0].clientWidth,e[0].clientHeight):(t.w=l&&o.innerWidth?o.innerWidth:s.width(),l&&o.innerHeight?o.innerHeight:s.height()),t},unbindEvents:function(){A.wrap&&p(A.wrap)&&A.wrap.unbind(".fb"),d.unbind(".fb"),s.unbind(".fb")},bindEvents:function(){var t,r=A.current;r&&(s.bind("orientationchange.fb"+(l?"":" resize.fb")+(r.autoCenter&&!r.locked?" scroll.fb":""),A.update),(t=r.keys)&&d.bind("keydown.fb",function(i){var o=i.which||i.keyCode,e=i.target||i.srcElement;if(27===o&&A.coming)return!1;!i.ctrlKey&&!i.altKey&&!i.shiftKey&&!i.metaKey&&(!e||!e.type&&!$(e).is("[contenteditable]"))&&$.each(t,function(e,t){return 1<r.group.length&&t[o]!==c?(A[e](t[o]),i.preventDefault(),!1):-1<$.inArray(o,t)?(A[e](),i.preventDefault(),!1):void 0})}),$.fn.mousewheel&&r.mouseWheel&&A.wrap.bind("mousewheel.fb",function(e,t,i,o){for(var n=$(e.target||null),s=!1;n.length&&!s&&!n.is(".fancybox-skin")&&!n.is(".fancybox-wrap");)s=n[0]&&!(n[0].style.overflow&&"hidden"===n[0].style.overflow)&&(n[0].clientWidth&&n[0].scrollWidth>n[0].clientWidth||n[0].clientHeight&&n[0].scrollHeight>n[0].clientHeight),n=$(n).parent();0!==t&&!s&&1<A.group.length&&!r.canShrink&&(0<o||0<i?A.prev(0<o?"down":"left"):(o<0||i<0)&&A.next(o<0?"up":"right"),e.preventDefault())}))},trigger:function(i,e){var t,o=e||A.coming||A.current;if(o){if($.isFunction(o[i])&&(t=o[i].apply(o,Array.prototype.slice.call(arguments,1))),!1===t)return!1;o.helpers&&$.each(o.helpers,function(e,t){t&&A.helpers[e]&&$.isFunction(A.helpers[e][i])&&A.helpers[e][i]($.extend(!0,{},A.helpers[e].defaults,t),o)}),d.trigger(i)}},isImage:function(e){return u(e)&&e.match(/(^data:image\/.*,)|(\.(jp(e|g|eg)|gif|png|bmp|webp|svg)((\?|#).*)?$)/i)},isSWF:function(e){return u(e)&&e.match(/\.(swf)((\?|#).*)?$/i)},_start:function(e){var t,i,o={};if(e=H(e),!(t=A.group[e]||null))return!1;if(t=(o=$.extend(!0,{},A.opts,t)).margin,i=o.padding,"number"===$.type(t)&&(o.margin=[t,t,t,t]),"number"===$.type(i)&&(o.padding=[i,i,i,i]),o.modal&&$.extend(!0,o,{closeBtn:!1,closeClick:!1,nextClick:!1,arrows:!1,mouseWheel:!1,keys:null,helpers:{overlay:{closeClick:!1}}}),o.autoSize&&(o.autoWidth=o.autoHeight=!0),"auto"===o.width&&(o.autoWidth=!0),"auto"===o.height&&(o.autoHeight=!0),o.group=A.group,o.index=e,A.coming=o,!1===A.trigger("beforeLoad"))A.coming=null;else{if(i=o.type,t=o.href,!i)return A.coming=null,!(!A.current||!A.router||"jumpto"===A.router)&&(A.current.index=e,A[A.router](A.direction));if(A.isActive=!0,"image"!==i&&"swf"!==i||(o.autoHeight=o.autoWidth=!1,o.scrolling="visible"),"image"===i&&(o.aspectRatio=!0),"iframe"===i&&l&&(o.scrolling="scroll"),o.wrap=$(o.tpl.wrap).addClass("fancybox-"+(l?"mobile":"desktop")+" fancybox-type-"+i+" fancybox-tmp "+o.wrapCSS).appendTo(o.parent||"body"),$.extend(o,{skin:$(".fancybox-skin",o.wrap),outer:$(".fancybox-outer",o.wrap),inner:$(".fancybox-inner",o.wrap)}),$.each(["Top","Right","Bottom","Left"],function(e,t){o.skin.css("padding"+t,P(o.padding[e]))}),A.trigger("onReady"),"inline"===i||"html"===i){if(!o.content||!o.content.length)return A._error("content")}else if(!t)return A._error("href");"image"===i?A._loadImage():"ajax"===i?A._loadAjax():"iframe"===i?A._loadIframe():A._afterLoad()}},_error:function(e){$.extend(A.coming,{type:"html",autoWidth:!0,autoHeight:!0,minWidth:0,minHeight:0,scrolling:"no",hasError:e,content:A.coming.tpl.error}),A._afterLoad()},_loadImage:function(){var e=A.imgPreload=new Image;e.onload=function(){this.onload=this.onerror=null,A.coming.width=this.width/A.opts.pixelRatio,A.coming.height=this.height/A.opts.pixelRatio,A._afterLoad()},e.onerror=function(){this.onload=this.onerror=null,A._error("image")},e.src=A.coming.href,!0!==e.complete&&A.showLoading()},_loadAjax:function(){var i=A.coming;A.showLoading(),A.ajaxLoad=$.ajax($.extend({},i.ajax,{url:i.href,error:function(e,t){A.coming&&"abort"!==t?A._error("ajax",e):A.hideLoading()},success:function(e,t){"success"===t&&(i.content=e,A._afterLoad())}}))},_loadIframe:function(){var e=A.coming,t=$(e.tpl.iframe.replace(/\{rnd\}/g,(new Date).getTime())).attr("scrolling",l?"auto":e.iframe.scrolling).attr("src",e.href);$(e.wrap).bind("onReset",function(){try{$(this).find("iframe").hide().attr("src","//about:blank").end().empty()}catch(e){}}),e.iframe.preload&&(A.showLoading(),t.one("load",function(){$(this).data("ready",1),l||$(this).bind("load.fb",A.update),$(this).parents(".fancybox-wrap").width("100%").removeClass("fancybox-tmp").show(),A._afterLoad()})),e.content=t.appendTo(e.inner),e.iframe.preload||A._afterLoad()},_preloadImages:function(){var e,t,i=A.group,o=A.current,n=i.length,s=o.preload?Math.min(o.preload,n-1):0;for(t=1;t<=s;t+=1)"image"===(e=i[(o.index+t)%n]).type&&e.href&&((new Image).src=e.href)},_afterLoad:function(){var i,e,t,o,n,s=A.coming,r=A.current;if(A.hideLoading(),s&&!1!==A.isActive)if(!1===A.trigger("afterLoad",s,r))s.wrap.stop(!0).trigger("onReset").remove(),A.coming=null;else{switch(r&&(A.trigger("beforeChange",r),r.wrap.stop(!0).removeClass("fancybox-opened").find(".fancybox-item, .fancybox-nav").remove()),A.unbindEvents(),i=s.content,e=s.type,t=s.scrolling,$.extend(A,{wrap:s.wrap,skin:s.skin,outer:s.outer,inner:s.inner,current:s,previous:r}),o=s.href,e){case"inline":case"ajax":case"html":s.selector?i=$("<div>").html(i).find(s.selector):p(i)&&(i.data("fancybox-placeholder")||i.data("fancybox-placeholder",$('<div class="fancybox-placeholder"></div>').insertAfter(i).hide()),i=i.show().detach(),s.wrap.bind("onReset",function(){$(this).find(i).length&&i.hide().replaceAll(i.data("fancybox-placeholder")).data("fancybox-placeholder",!1)}));break;case"image":i=s.tpl.image.replace("{href}",o);break;case"swf":i='<object id="fancybox-swf" classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" width="100%" height="100%"><param name="movie" value="'+o+'"></param>',n="",$.each(s.swf,function(e,t){i+='<param name="'+e+'" value="'+t+'"></param>',n+=" "+e+'="'+t+'"'}),i+='<embed src="'+o+'" type="application/x-shockwave-flash" width="100%" height="100%"'+n+"></embed></object>"}(!p(i)||!i.parent().is(s.inner))&&s.inner.append(i),A.trigger("beforeShow"),s.inner.css("overflow","yes"===t?"scroll":"no"===t?"hidden":t),A._setDimension(),A.reposition(),A.isOpen=!1,A.coming=null,A.bindEvents(),A.isOpened?r.prevMethod&&A.transitions[r.prevMethod]():$(".fancybox-wrap").not(s.wrap).stop(!0).trigger("onReset").remove(),A.transitions[A.isOpened?s.nextMethod:s.openMethod](),A._preloadImages()}},_setDimension:function(){var e,t,i,o,n,s,r,a,l,d=A.getViewport(),c=0,p=!1,u=!1,h=(p=A.wrap,A.skin),f=A.inner,g=A.current,v=(u=g.width,g.height),y=g.minWidth,w=g.minHeight,m=g.maxWidth,k=g.maxHeight,b=g.scrolling,x=g.scrollOutside?g.scrollbarWidth:0,S=g.margin,T=H(S[1]+S[3]),C=H(S[0]+S[2]);if(p.add(h).add(f).width("auto").height("auto").removeClass("fancybox-tmp"),t=T+(S=H(h.outerWidth(!0)-h.width())),i=C+(e=H(h.outerHeight(!0)-h.height())),o=O(u)?(d.w-t)*H(u)/100:u,n=O(v)?(d.h-i)*H(v)/100:v,"iframe"===g.type){if(l=g.content,g.autoHeight&&1===l.data("ready"))try{l[0].contentWindow.document.location&&(f.width(o).height(9999),s=l.contents().find("body"),x&&s.css("overflow-x","hidden"),n=s.outerHeight(!0))}catch(e){}}else(g.autoWidth||g.autoHeight)&&(f.addClass("fancybox-tmp"),g.autoWidth||f.width(o),g.autoHeight||f.height(n),g.autoWidth&&(o=f.width()),g.autoHeight&&(n=f.height()),f.removeClass("fancybox-tmp"));if(u=H(o),v=H(n),a=o/n,y=H(O(y)?H(y,"w")-t:y),m=H(O(m)?H(m,"w")-t:m),w=H(O(w)?H(w,"h")-i:w),s=m,r=k=H(O(k)?H(k,"h")-i:k),g.fitToView&&(m=Math.min(d.w-t,m),k=Math.min(d.h-i,k)),t=d.w-T,C=d.h-C,g.aspectRatio?(m<u&&(v=H((u=m)/a)),k<v&&(u=H((v=k)*a)),u<y&&(v=H((u=y)/a)),v<w&&(u=H((v=w)*a))):(u=Math.max(y,Math.min(u,m)),g.autoHeight&&"iframe"!==g.type&&(f.width(u),v=f.height()),v=Math.max(w,Math.min(v,k))),g.fitToView)if(f.width(u).height(v),p.width(u+S),d=p.width(),T=p.height(),g.aspectRatio)for(;(t<d||C<T)&&y<u&&w<v&&!(19<c++);)v=Math.max(w,Math.min(k,v-10)),(u=H(v*a))<y&&(v=H((u=y)/a)),m<u&&(v=H((u=m)/a)),f.width(u).height(v),p.width(u+S),d=p.width(),T=p.height();else u=Math.max(y,Math.min(u,u-(d-t))),v=Math.max(w,Math.min(v,v-(T-C)));x&&"auto"===b&&v<n&&u+S+x<t&&(u+=x),f.width(u).height(v),p.width(u+S),d=p.width(),T=p.height(),p=(t<d||C<T)&&y<u&&w<v,u=g.aspectRatio?u<s&&v<r&&u<o&&v<n:(u<s||v<r)&&(u<o||v<n),$.extend(g,{dim:{width:P(d),height:P(T)},origWidth:o,origHeight:n,canShrink:p,canExpand:u,wPadding:S,hPadding:e,wrapSpace:T-h.outerHeight(!0),skinSpace:h.height()-v}),!l&&g.autoHeight&&w<v&&v<k&&!u&&f.height("auto")},_getPosition:function(e){var t=A.current,i=A.getViewport(),o=t.margin,n=A.wrap.width()+o[1]+o[3],s=A.wrap.height()+o[0]+o[2];o={position:"absolute",top:o[0],left:o[3]};return t.autoCenter&&t.fixed&&!e&&s<=i.h&&n<=i.w?o.position="fixed":t.locked||(o.top+=i.y,o.left+=i.x),o.top=P(Math.max(o.top,o.top+(i.h-s)*t.topRatio)),o.left=P(Math.max(o.left,o.left+(i.w-n)*t.leftRatio)),o},_afterZoomIn:function(){var t=A.current;t&&(A.isOpen=A.isOpened=!0,A.wrap.css("overflow","visible").addClass("fancybox-opened"),A.update(),(t.closeClick||t.nextClick&&1<A.group.length)&&A.inner.css("cursor","pointer").bind("click.fb",function(e){!$(e.target).is("a")&&!$(e.target).parent().is("a")&&(e.preventDefault(),A[t.closeClick?"close":"next"]())}),t.closeBtn&&$(t.tpl.closeBtn).appendTo(A.skin).bind("click.fb",function(e){e.preventDefault(),A.close()}),t.arrows&&1<A.group.length&&((t.loop||0<t.index)&&$(t.tpl.prev).appendTo(A.outer).bind("click.fb",A.prev),(t.loop||t.index<A.group.length-1)&&$(t.tpl.next).appendTo(A.outer).bind("click.fb",A.next)),A.trigger("afterShow"),t.loop||t.index!==t.group.length-1?A.opts.autoPlay&&!A.player.isActive&&(A.opts.autoPlay=!1,A.play()):A.play(!1))},_afterZoomOut:function(e){e=e||A.current,$(".fancybox-wrap").trigger("onReset").remove(),$.extend(A,{group:{},opts:{},router:!1,current:null,isActive:!1,isOpened:!1,isOpen:!1,isClosing:!1,wrap:null,skin:null,outer:null,inner:null}),A.trigger("afterClose",e)}}),A.transitions={getOrigPosition:function(){var e=A.current,t=e.element,i=e.orig,o={},n=50,s=50,r=e.hPadding,a=e.wPadding,l=A.getViewport();return!i&&e.isDom&&t.is(":visible")&&((i=t.find("img:first")).length||(i=t)),p(i)?(o=i.offset(),i.is("img")&&(n=i.outerWidth(),s=i.outerHeight())):(o.top=l.y+(l.h-s)*e.topRatio,o.left=l.x+(l.w-n)*e.leftRatio),("fixed"===A.wrap.css("position")||e.locked)&&(o.top-=l.y,o.left-=l.x),{top:P(o.top-r*e.topRatio),left:P(o.left-a*e.leftRatio),width:P(n+a),height:P(s+r)}},step:function(e,t){var i,o,n=t.prop,s=(o=A.current).wrapSpace,r=o.skinSpace;"width"!==n&&"height"!==n||(i=t.end===t.start?1:(e-t.start)/(t.end-t.start),A.isClosing&&(i=1-i),o=e-(o="width"===n?o.wPadding:o.hPadding),A.skin[n](H("width"===n?o:o-s*i)),A.inner[n](H("width"===n?o:o-s*i-r*i)))},zoomIn:function(){var e=A.current,t=e.pos,i=e.openEffect,o="elastic"===i,n=$.extend({opacity:1},t);delete n.position,o?(t=this.getOrigPosition(),e.openOpacity&&(t.opacity=.1)):"fade"===i&&(t.opacity=.1),A.wrap.css(t).animate(n,{duration:"none"===i?0:e.openSpeed,easing:e.openEasing,step:o?this.step:null,complete:A._afterZoomIn})},zoomOut:function(){var e=A.current,t=e.closeEffect,i="elastic"===t,o={opacity:.1};i&&(o=this.getOrigPosition(),e.closeOpacity&&(o.opacity=.1)),A.wrap.animate(o,{duration:"none"===t?0:e.closeSpeed,easing:e.closeEasing,step:i?this.step:null,complete:A._afterZoomOut})},changeIn:function(){var e,t=A.current,i=t.nextEffect,o=t.pos,n={opacity:1},s=A.direction;o.opacity=.1,"elastic"===i&&(n[e="down"===s||"up"===s?"top":"left"]="down"===s||"right"===s?(o[e]=P(H(o[e])-200),"+=200px"):(o[e]=P(H(o[e])+200),"-=200px")),"none"===i?A._afterZoomIn():A.wrap.css(o).animate(n,{duration:t.nextSpeed,easing:t.nextEasing,complete:A._afterZoomIn})},changeOut:function(){var e=A.previous,t=e.prevEffect,i={opacity:.1},o=A.direction;"elastic"===t&&(i["down"===o||"up"===o?"top":"left"]=("up"===o||"left"===o?"-":"+")+"=200px"),e.wrap.animate(i,{duration:"none"===t?0:e.prevSpeed,easing:e.prevEasing,complete:function(){$(this).trigger("onReset").remove()}})}},A.helpers.overlay={defaults:{closeClick:!0,speedOut:200,showEarly:!0,css:{},locked:!l,fixed:!0},overlay:null,fixed:!1,el:$("html"),create:function(e){e=$.extend({},this.defaults,e),this.overlay&&this.close(),this.overlay=$('<div class="fancybox-overlay"></div>').appendTo(A.coming?A.coming.parent:e.parent),this.fixed=!1,e.fixed&&A.defaults.fixed&&(this.overlay.addClass("fancybox-overlay-fixed"),this.fixed=!0)},open:function(e){var t=this;e=$.extend({},this.defaults,e),this.overlay?this.overlay.unbind(".overlay").width("auto").height("auto"):this.create(e),this.fixed||(s.bind("resize.overlay",$.proxy(this.update,this)),this.update()),e.closeClick&&this.overlay.bind("click.overlay",function(e){if($(e.target).hasClass("fancybox-overlay"))return A.isActive?A.close():t.close(),!1}),this.overlay.css(e.css).show()},close:function(){var e,t;s.unbind("resize.overlay"),this.el.hasClass("fancybox-lock")&&($(".fancybox-margin").removeClass("fancybox-margin"),e=s.scrollTop(),t=s.scrollLeft(),this.el.removeClass("fancybox-lock"),s.scrollTop(e).scrollLeft(t)),$(".fancybox-overlay").remove().hide(),$.extend(this,{overlay:null,fixed:!1})},update:function(){var e,t="100%";this.overlay.width(t).height("100%"),r?(e=Math.max(i.documentElement.offsetWidth,i.body.offsetWidth),d.width()>e&&(t=d.width())):d.width()>s.width()&&(t=d.width()),this.overlay.width(t).height(d.height())},onReady:function(e,t){var i=this.overlay;$(".fancybox-overlay").stop(!0,!0),i||this.create(e),e.locked&&this.fixed&&t.fixed&&(i||(this.margin=d.height()>s.height()&&$("html").css("margin-right").replace("px","")),t.locked=this.overlay.append(t.wrap),t.fixed=!1),!0===e.showEarly&&this.beforeShow.apply(this,arguments)},beforeShow:function(e,t){var i,o;t.locked&&(!1!==this.margin&&($("*").filter(function(){return"fixed"===$(this).css("position")&&!$(this).hasClass("fancybox-overlay")&&!$(this).hasClass("fancybox-wrap")}).addClass("fancybox-margin"),this.el.addClass("fancybox-margin")),i=s.scrollTop(),o=s.scrollLeft(),this.el.addClass("fancybox-lock"),s.scrollTop(i).scrollLeft(o)),this.open(e)},onUpdate:function(){this.fixed||this.update()},afterClose:function(e){this.overlay&&!A.coming&&this.overlay.fadeOut(e.speedOut,$.proxy(this.close,this))}},A.helpers.title={defaults:{type:"float",position:"bottom"},beforeShow:function(e){var t=A.current,i=t.title,o=e.type;if($.isFunction(i)&&(i=i.call(t.element,t)),u(i)&&""!==$.trim(i)){switch(t=$('<div class="fancybox-title fancybox-title-'+o+'-wrap">'+i+"</div>"),o){case"inside":o=A.skin;break;case"outside":o=A.wrap;break;case"over":o=A.inner;break;default:o=A.skin,t.appendTo("body"),r&&t.width(t.width()),t.wrapInner('<span class="child"></span>'),A.current.margin[2]+=Math.abs(H(t.css("margin-bottom")))}t["top"===e.position?"prependTo":"appendTo"](o)}}},$.fn.fancybox=function(s){var r,a=$(this),l=this.selector||"",e=function(e){var t,i,o=$(this).blur(),n=r;!e.ctrlKey&&!e.altKey&&!e.shiftKey&&!e.metaKey&&!o.is(".fancybox-wrap")&&(t=s.groupAttr||"data-fancybox-group",(i=o.attr(t))||(t="rel",i=o.get(0)[t]),i&&""!==i&&"nofollow"!==i&&(n=(o=(o=l.length?$(l):a).filter("["+t+'="'+i+'"]')).index(this)),s.index=n,!1!==A.open(o,s)&&e.preventDefault())};return r=(s=s||{}).index||0,l&&!1!==s.live?d.undelegate(l,"click.fb-start").delegate(l+":not('.fancybox-item, .fancybox-nav')","click.fb-start",e):a.unbind("click.fb-start").bind("click.fb-start",e),this.filter("[data-fancybox-start=1]").trigger("click"),this},d.ready(function(){var e,t;if($.scrollbarWidth===c&&($.scrollbarWidth=function(){var e=$('<div style="width:50px;height:50px;overflow:auto"><div/></div>').appendTo("body"),t=(t=e.children()).innerWidth()-t.height(99).innerWidth();return e.remove(),t}),$.support.fixedPosition===c){e=$.support;var i=20===(t=$('<div style="position:fixed;top:20px;"></div>').appendTo("body"))[0].offsetTop||15===t[0].offsetTop;t.remove(),e.fixedPosition=i}$.extend(A.defaults,{scrollbarWidth:$.scrollbarWidth(),fixed:$.support.fixedPosition,parent:$("body")}),e=$(o).width(),n.addClass("fancybox-lock-test"),t=$(o).width(),n.removeClass("fancybox-lock-test"),$("<style type='text/css'>.fancybox-margin{margin-right:"+(t-e)+"px;}</style>").appendTo("head")})}(window,document,jQuery),jQuery(function(){initAnchors()}),function(d,e){var n,s,r,c=d(window),a="onwheel"in document||9<=document.documentMode?"wheel":"mousewheel DOMMouseScroll";function o(e,t,i){var o;document.body&&(t="number"==typeof t?{duration:t}:t||{},n=n||d("html, body"),o=t.container||n,"number"==typeof e&&(e={top:e}),s&&r&&s.off(a,r),t.wheelBehavior&&"none"!==t.wheelBehavior&&(r=function(e){"stop"===t.wheelBehavior?(o.off(a,r),o.stop()):"ignore"===t.wheelBehavior&&e.preventDefault()},s=o.on(a,r)),o.stop().animate({scrollLeft:e.left,scrollTop:e.top},t.duration,function(){r&&o.off(a,r),d.isFunction(i)&&i()}))}function t(e){this.options=d.extend({anchorLinks:'a[href^="#"]',container:null,extraOffset:null,activeClasses:null,easing:"swing",animMode:"duration",animDuration:800,animSpeed:1500,anchorActiveClass:"anchor-active",sectionActiveClass:"section-active",wheelBehavior:"stop",useNativeAnchorScrolling:!1},e),this.init()}t.prototype={init:function(){this.initStructure(),this.attachEvents(),this.isInit=!0},initStructure:function(){var e=this;this.container=this.options.container?d(this.options.container):d("html,body"),this.scrollContainer=this.options.container?this.container:c,this.anchorLinks=jQuery(this.options.anchorLinks).filter(function(){return jQuery(e.getAnchorTarget(jQuery(this))).length})},getId:function(e){try{return"#"+e.replace(/^.*?(#|$)/,"")}catch(e){return null}},getAnchorTarget:function(e){var t=this.getId(d(e).attr("href"));return d(1<t.length?t:"html")},getTargetOffset:function(e){var t=e.offset().top;return this.options.container&&(t-=this.container.offset().top-this.container.prop("scrollTop")),"number"==typeof this.options.extraOffset?t-=this.options.extraOffset:"function"==typeof this.options.extraOffset&&(t-=this.options.extraOffset(e)),{top:t}},attachEvents:function(){var t=this;if(this.options.activeClasses&&this.anchorLinks.length){this.anchorData=[];for(var e=0;e<this.anchorLinks.length;e++){var i=jQuery(this.anchorLinks[e]),o=t.getAnchorTarget(i),n=null;d.each(t.anchorData,function(e,t){t.block[0]===o[0]&&(n=t)}),n?n.link=n.link.add(i):t.anchorData.push({link:i,block:o})}this.resizeHandler=function(){t.isInit&&t.recalculateOffsets()},this.scrollHandler=function(){t.refreshActiveClass()},this.recalculateOffsets(),this.scrollContainer.on("scroll",this.scrollHandler),c.on("resize load orientationchange refreshAnchor",this.resizeHandler)}this.clickHandler=function(e){t.onClick(e)},this.options.useNativeAnchorScrolling||this.anchorLinks.on("click",this.clickHandler)},recalculateOffsets:function(){var i=this;d.each(this.anchorData,function(e,t){t.offset=i.getTargetOffset(t.block),t.height=t.block.outerHeight()}),this.refreshActiveClass()},toggleActiveClass:function(e,t,i){e.toggleClass(this.options.anchorActiveClass,i),t.toggleClass(this.options.sectionActiveClass,i)},refreshActiveClass:function(){var n=this,s=!1,r=this.container.prop("scrollHeight"),a=this.scrollContainer.height(),l=this.options.container?this.container.prop("scrollTop"):c.scrollTop();this.options.customScrollHandler?this.options.customScrollHandler.call(this,l,this.anchorData):(this.anchorData.sort(function(e,t){return e.offset.top-t.offset.top}),d.each(this.anchorData,function(e){var t=n.anchorData.length-e-1,i=n.anchorData[t],o="parent"===n.options.activeClasses?i.link.parent():i.link;r-a<=l?t===n.anchorData.length-1?n.toggleActiveClass(o,i.block,!0):n.toggleActiveClass(o,i.block,!1):!s&&(l>=i.offset.top-1||0===t)?(s=!0,n.toggleActiveClass(o,i.block,!0)):n.toggleActiveClass(o,i.block,!1)}))},calculateScrollDuration:function(e){return"speed"===this.options.animMode?Math.abs(this.scrollContainer.scrollTop()-e.top)/this.options.animSpeed*1e3:this.options.animDuration},onClick:function(e){var t=this.getAnchorTarget(e.currentTarget),i=this.getTargetOffset(t);e.preventDefault(),o(i,{container:this.container,wheelBehavior:this.options.wheelBehavior,duration:this.calculateScrollDuration(i)}),this.makeCallback("onBeforeScroll",e.currentTarget)},makeCallback:function(e){if("function"==typeof this.options[e]){var t=Array.prototype.slice.call(arguments);t.shift(),this.options[e].apply(this,t)}},destroy:function(){var n=this;this.isInit=!1,this.options.activeClasses&&(c.off("resize load orientationchange refreshAnchor",this.resizeHandler),this.scrollContainer.off("scroll",this.scrollHandler),d.each(this.anchorData,function(e){var t=n.anchorData.length-e-1,i=n.anchorData[t],o="parent"===n.options.activeClasses?i.link.parent():i.link;n.toggleActiveClass(o,i.block,!1)})),this.anchorLinks.off("click",this.clickHandler)}},d.extend(t,{scrollTo:function(e,t,i){o(e,t,i)}}),e.SmoothScroll=t}(jQuery,this),$(function(){var e=$("body");$(window).scroll(function(){0<$(window).scrollTop()?e.addClass("scroll"):e.removeClass("scroll")})}),$(document).on("click","button.plus, button.minus",function(){var e=$(this).parent(".quantity").find(".qty"),t=parseFloat(e.val()),i=parseFloat(e.attr("max")),o=parseFloat(e.attr("min")),n=parseFloat(e.attr("step"));$(this).is(".plus")?i&&i<=t?e.val(i).change():e.val(t+n).change():o&&t<=o?e.val(o).change():1<t&&e.val(t-n).change()}),function(A){A.fn.angle=function(e){if("object"==typeof e)return this.each(function(){new A.angle(this,e)});var t=this.data("angle");switch(e){case"resize":t.init()}},A.fn.angle.defaults={speed:2,drag:!1,previous:"",next:"",current:0,get_image:function(){},after:function(){}},A.angle=function(o,e){var t,n,s,r,a,l,d=A.extend({},A.fn.angle.defaults,e),c=A(o);A.data(o,"angle",c);var p,u=0,h=0;c.attr("data-current",d.current);var f,g=!1,v=!1,y=!1,w=!0,m=function(){(t=A(o.parentNode).css("width"))&&-1===t.indexOf("%")||(t=o.parentNode.getBoundingClientRect().width||o.parentNode.offsetWidth),t=parseInt(t),n=c.find("img:first"),s=n.offset().left,(r=c.find("img")).each(function(e){A(this).attr("data-id",e)}),a=r.length,l=parseInt(t/a/d.speed),r.toggle(),p=c.data("current"),r.eq(p).toggle()},k=function(){w=!1;var e=d.get_image();if("object"==typeof e){var t="";for(var i in e)t+='<li><img src="'+e[i]+'" /></li>';A(o).children("ul").html(t),m(),C()}};d.previous&&A(d.previous).click(function(){w&&k(),b()}),d.next&&A(d.next).click(function(){w&&k(),x()});var b=function(){r.eq(p).toggle(),p=S(p-1),r.eq(p).toggle(),c.attr("data-current",p),$(d.after())},x=function(){r.eq(p).toggle(),p=S(p+1),r.eq(p).toggle(),c.attr("data-current",p),$(d.after())},S=function(e){return(a+e%a)%a},T={handleEvent:function(e){switch(e.type){case"touchstart":this.start(e);break;case"touchmove":this.move(e);break;case"touchend":this.end()}},start:function(e){if(y=!0){var t=e.touches[0];startPos={x:t.pageX,y:t.pageY},w&&k(),u=h=parseInt((startPos.x-s)/l),f=void 0,delta={},o.addEventListener("touchmove",this,!1),o.addEventListener("touchend",this,!1)}},move:function(e){if(y){var t=e.touches[0];delta={x:t.pageX-startPos.x,y:t.pageY-startPos.y},void 0===f&&(f=!!(f||Math.abs(delta.x)<Math.abs(delta.y))),f||(e.preventDefault(),(h=parseInt((t.pageX-s)/l))!==u&&(u<h?x():b(),u=h))}},end:function(){y=!1,o.removeEventListener("touchmove",this,!1),o.removeEventListener("touchend",this,!1)}},C=function(){if(d.drag){var t=null;for(i in document.images)document.images[i].ondragstart=function(){return!1};A(o).mousedown(function(e){(v=!0)&&(t=e.screenX,w&&k(),u=h=parseInt((t-s)/l))}),A(o).mousemove(function(e){v&&t&&(e.preventDefault(),(h=parseInt((e.screenX-s)/l))!==u&&(u<h?x():b(),u=h))}),A(o).mouseup(function(){g=!1,t=null})}else A(o).mouseover(function(e){(g=!0)&&(w&&k(),u=h=parseInt((e.screenX-s)/l))}),A(o).mousemove(function(e){g&&(h=parseInt((e.screenX-s)/l))!==u&&(u<h?x():b(),u=h)}),A(o).mouseout(function(){g=!1})};"ontouchstart"in window&&o.addEventListener("touchstart",T,!1),c.setPosition=function(e){this.find("img[data-id='"+e+"']").css("display","inline"),this.find("img[data-id!='"+e+"']").css("display","none"),c.attr("data-current",e),p=e};var $=function(e){setTimeout(function(){},0)};m(),C()}}(jQuery),(new WOW).init(),$(function(){$(".menu .menu-item-has-children a").on("click",function(){$(this).parents(".menu-item-has-children ").toggleClass("active")}),$("select-option_selected").on("click",function(){$(this).parents(".select ").toggleClass("select-active")}),$(".select-option_selected").on("click",function(e){e.preventDefault(),$(this).closest(".select").toggleClass("select_open")}),$(".nav-opener").on("click",function(e){e.preventDefault(),$("body").toggleClass("nav-active")}),$("#view-3d").angle({speed:3,drag:!0})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
