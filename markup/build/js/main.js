function initLightbox(){jQuery('a.lightbox, a[rel*="lightbox"]').fancybox({loop:!1,helpers:{overlay:{css:{background:"rgba(0, 0, 0, 0.65)"}}},afterLoad:function(e,t){0===e.href.indexOf("#")&&jQuery(e.href).find("a.close").off("click.fb").on("click.fb",function(e){e.preventDefault(),jQuery.fancybox.close()})}})}function initAnchors(){new SmoothScroll({anchorLinks:".btn-back",extraOffset:0,wheelBehavior:"none"})}(function(){var t,i,o=function(e,t){return function(){return e.apply(t,arguments)}};t=function(){function e(){}return e.prototype.extend=function(e,t){var i,o;for(i in e)null!=(o=e[i])&&(t[i]=o);return t},e.prototype.isMobile=function(e){return/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(e)},e}(),i=this.WeakMap||(i=function(){function e(){this.keys=[],this.values=[]}return e.prototype.get=function(e){var t,i,o,s;for(t=i=0,o=(s=this.keys).length;i<o;t=++i)if(s[t]===e)return this.values[t]},e.prototype.set=function(e,t){var i,o,s,n;for(i=o=0,s=(n=this.keys).length;o<s;i=++o)if(n[i]===e)return void(this.values[i]=t);return this.keys.push(e),this.values.push(t)},e}()),this.WOW=function(){function e(e){null==e&&(e={}),this.scrollCallback=o(this.scrollCallback,this),this.scrollHandler=o(this.scrollHandler,this),this.start=o(this.start,this),this.scrolled=!0,this.config=this.util().extend(e,this.defaults),this.animationNameCache=new i}return e.prototype.defaults={boxClass:"wow",animateClass:"animated",offset:0,mobile:!0},e.prototype.init=function(){var e;return this.element=window.document.documentElement,"interactive"===(e=document.readyState)||"complete"===e?this.start():document.addEventListener("DOMContentLoaded",this.start)},e.prototype.start=function(){var e,t,i,o;if(this.boxes=this.element.getElementsByClassName(this.config.boxClass),this.boxes.length){if(this.disabled())return this.resetStyle();for(t=0,i=(o=this.boxes).length;t<i;t++)e=o[t],this.applyStyle(e,!0);return window.addEventListener("scroll",this.scrollHandler,!1),window.addEventListener("resize",this.scrollHandler,!1),this.interval=setInterval(this.scrollCallback,50)}},e.prototype.stop=function(){return window.removeEventListener("scroll",this.scrollHandler,!1),window.removeEventListener("resize",this.scrollHandler,!1),null!=this.interval?clearInterval(this.interval):void 0},e.prototype.show=function(e){return this.applyStyle(e),e.className=e.className+" "+this.config.animateClass},e.prototype.applyStyle=function(e,t){var i,o,s,n;return o=e.getAttribute("data-wow-duration"),i=e.getAttribute("data-wow-delay"),s=e.getAttribute("data-wow-iteration"),this.animate((n=this,function(){return n.customStyle(e,t,o,i,s)}))},e.prototype.animate="requestAnimationFrame"in window?function(e){return window.requestAnimationFrame(e)}:function(e){return e()},e.prototype.resetStyle=function(){var e,t,i,o,s;for(s=[],t=0,i=(o=this.boxes).length;t<i;t++)e=o[t],s.push(e.setAttribute("style","visibility: visible;"));return s},e.prototype.customStyle=function(e,t,i,o,s){return t&&this.cacheAnimationName(e),e.style.visibility=t?"hidden":"visible",i&&this.vendorSet(e.style,{animationDuration:i}),o&&this.vendorSet(e.style,{animationDelay:o}),s&&this.vendorSet(e.style,{animationIterationCount:s}),this.vendorSet(e.style,{animationName:t?"none":this.cachedAnimationName(e)}),e},e.prototype.vendors=["moz","webkit"],e.prototype.vendorSet=function(s,e){var n,r,a,t;for(n in t=[],e)r=e[n],s[""+n]=r,t.push(function(){var e,t,i,o;for(o=[],e=0,t=(i=this.vendors).length;e<t;e++)a=i[e],o.push(s[""+a+n.charAt(0).toUpperCase()+n.substr(1)]=r);return o}.call(this));return t},e.prototype.vendorCSS=function(e,t){var i,o,s,n,r,a;for(i=(o=window.getComputedStyle(e)).getPropertyCSSValue(t),n=0,r=(a=this.vendors).length;n<r;n++)s=a[n],i=i||o.getPropertyCSSValue("-"+s+"-"+t);return i},e.prototype.animationName=function(t){var i;try{i=this.vendorCSS(t,"animation-name").cssText}catch(e){i=window.getComputedStyle(t).getPropertyValue("animation-name")}return"none"===i?"":i},e.prototype.cacheAnimationName=function(e){return this.animationNameCache.set(e,this.animationName(e))},e.prototype.cachedAnimationName=function(e){return this.animationNameCache.get(e)},e.prototype.scrollHandler=function(){return this.scrolled=!0},e.prototype.scrollCallback=function(){var s;return this.scrolled&&(this.scrolled=!1,this.boxes=function(){var e,t,i,o;for(o=[],e=0,t=(i=this.boxes).length;e<t;e++)(s=i[e])&&(this.isVisible(s)?this.show(s):o.push(s));return o}.call(this),!this.boxes.length)?this.stop():void 0},e.prototype.offsetTop=function(e){for(var t;void 0===e.offsetTop;)e=e.parentNode;for(t=e.offsetTop;e=e.offsetParent;)t+=e.offsetTop;return t},e.prototype.isVisible=function(e){var t,i,o,s,n;return i=e.getAttribute("data-wow-offset")||this.config.offset,s=(n=window.pageYOffset)+this.element.clientHeight-i,t=(o=this.offsetTop(e))+e.clientHeight,o<=s&&n<=t},e.prototype.util=function(){return this._util||(this._util=new t)},e.prototype.disabled=function(){return!this.config.mobile&&this.util().isMobile(navigator.userAgent)},e}()}).call(this),function(e){"use strict";"function"==typeof define&&define.amd?define(["jquery"],e):"undefined"!=typeof exports?module.exports=e(require("jquery")):e(jQuery)}(function(d){"use strict";var s,r=window.Slick||{};s=0,(r=function(e,t){var i,o=this;o.defaults={accessibility:!0,adaptiveHeight:!1,appendArrows:d(e),appendDots:d(e),arrows:!0,asNavFor:null,prevArrow:'<button class="slick-prev" aria-label="Previous" type="button"></button>',nextArrow:'<button class="slick-next" aria-label="Next" type="button"></button>',autoplay:!1,autoplaySpeed:3e3,centerMode:!1,centerPadding:"50px",cssEase:"ease",customPaging:function(e,t){return d('<button type="button" />').text(t+1)},dots:!1,dotsClass:"slick-dots",draggable:!0,easing:"linear",edgeFriction:.35,fade:!1,focusOnSelect:!1,focusOnChange:!1,infinite:!0,initialSlide:0,lazyLoad:"ondemand",mobileFirst:!1,pauseOnHover:!0,pauseOnFocus:!0,pauseOnDotsHover:!1,respondTo:"window",responsive:null,rows:1,rtl:!1,slide:"",slidesPerRow:1,slidesToShow:1,slidesToScroll:1,speed:500,swipe:!0,swipeToSlide:!1,touchMove:!0,touchThreshold:5,useCSS:!0,useTransform:!0,variableWidth:!1,vertical:!1,verticalSwiping:!1,waitForAnimate:!0,zIndex:1e3},o.initials={animating:!1,dragging:!1,autoPlayTimer:null,currentDirection:0,currentLeft:null,currentSlide:0,direction:1,$dots:null,listWidth:null,listHeight:null,loadIndex:0,$nextArrow:null,$prevArrow:null,scrolling:!1,slideCount:null,slideWidth:null,$slideTrack:null,$slides:null,sliding:!1,slideOffset:0,swipeLeft:null,swiping:!1,$list:null,touchObject:{},transformsEnabled:!1,unslicked:!1},d.extend(o,o.initials),o.activeBreakpoint=null,o.animType=null,o.animProp=null,o.breakpoints=[],o.breakpointSettings=[],o.cssTransitions=!1,o.focussed=!1,o.interrupted=!1,o.hidden="hidden",o.paused=!0,o.positionProp=null,o.respondTo=null,o.rowCount=1,o.shouldClick=!0,o.$slider=d(e),o.$slidesCache=null,o.transformType=null,o.transitionType=null,o.visibilityChange="visibilitychange",o.windowWidth=0,o.windowTimer=null,i=d(e).data("slick")||{},o.options=d.extend({},o.defaults,t,i),o.currentSlide=o.options.initialSlide,o.originalSettings=o.options,void 0!==document.mozHidden?(o.hidden="mozHidden",o.visibilityChange="mozvisibilitychange"):void 0!==document.webkitHidden&&(o.hidden="webkitHidden",o.visibilityChange="webkitvisibilitychange"),o.autoPlay=d.proxy(o.autoPlay,o),o.autoPlayClear=d.proxy(o.autoPlayClear,o),o.autoPlayIterator=d.proxy(o.autoPlayIterator,o),o.changeSlide=d.proxy(o.changeSlide,o),o.clickHandler=d.proxy(o.clickHandler,o),o.selectHandler=d.proxy(o.selectHandler,o),o.setPosition=d.proxy(o.setPosition,o),o.swipeHandler=d.proxy(o.swipeHandler,o),o.dragHandler=d.proxy(o.dragHandler,o),o.keyHandler=d.proxy(o.keyHandler,o),o.instanceUid=s++,o.htmlExpr=/^(?:\s*(<[\w\W]+>)[^>]*)$/,o.registerBreakpoints(),o.init(!0)}).prototype.activateADA=function(){this.$slideTrack.find(".slick-active").attr({"aria-hidden":"false"}).find("a, input, button, select").attr({tabindex:"0"})},r.prototype.addSlide=r.prototype.slickAdd=function(e,t,i){var o=this;if("boolean"==typeof t)i=t,t=null;else if(t<0||t>=o.slideCount)return!1;o.unload(),"number"==typeof t?0===t&&0===o.$slides.length?d(e).appendTo(o.$slideTrack):i?d(e).insertBefore(o.$slides.eq(t)):d(e).insertAfter(o.$slides.eq(t)):!0===i?d(e).prependTo(o.$slideTrack):d(e).appendTo(o.$slideTrack),o.$slides=o.$slideTrack.children(this.options.slide),o.$slideTrack.children(this.options.slide).detach(),o.$slideTrack.append(o.$slides),o.$slides.each(function(e,t){d(t).attr("data-slick-index",e)}),o.$slidesCache=o.$slides,o.reinit()},r.prototype.animateHeight=function(){var e=this;if(1===e.options.slidesToShow&&!0===e.options.adaptiveHeight&&!1===e.options.vertical){var t=e.$slides.eq(e.currentSlide).outerHeight(!0);e.$list.animate({height:t},e.options.speed)}},r.prototype.animateSlide=function(e,t){var i={},o=this;o.animateHeight(),!0===o.options.rtl&&!1===o.options.vertical&&(e=-e),!1===o.transformsEnabled?!1===o.options.vertical?o.$slideTrack.animate({left:e},o.options.speed,o.options.easing,t):o.$slideTrack.animate({top:e},o.options.speed,o.options.easing,t):!1===o.cssTransitions?(!0===o.options.rtl&&(o.currentLeft=-o.currentLeft),d({animStart:o.currentLeft}).animate({animStart:e},{duration:o.options.speed,easing:o.options.easing,step:function(e){e=Math.ceil(e),!1===o.options.vertical?i[o.animType]="translate("+e+"px, 0px)":i[o.animType]="translate(0px,"+e+"px)",o.$slideTrack.css(i)},complete:function(){t&&t.call()}})):(o.applyTransition(),e=Math.ceil(e),!1===o.options.vertical?i[o.animType]="translate3d("+e+"px, 0px, 0px)":i[o.animType]="translate3d(0px,"+e+"px, 0px)",o.$slideTrack.css(i),t&&setTimeout(function(){o.disableTransition(),t.call()},o.options.speed))},r.prototype.getNavTarget=function(){var e=this.options.asNavFor;return e&&null!==e&&(e=d(e).not(this.$slider)),e},r.prototype.asNavFor=function(t){var e=this.getNavTarget();null!==e&&"object"==typeof e&&e.each(function(){var e=d(this).slick("getSlick");e.unslicked||e.slideHandler(t,!0)})},r.prototype.applyTransition=function(e){var t=this,i={};!1===t.options.fade?i[t.transitionType]=t.transformType+" "+t.options.speed+"ms "+t.options.cssEase:i[t.transitionType]="opacity "+t.options.speed+"ms "+t.options.cssEase,!1===t.options.fade?t.$slideTrack.css(i):t.$slides.eq(e).css(i)},r.prototype.autoPlay=function(){var e=this;e.autoPlayClear(),e.slideCount>e.options.slidesToShow&&(e.autoPlayTimer=setInterval(e.autoPlayIterator,e.options.autoplaySpeed))},r.prototype.autoPlayClear=function(){this.autoPlayTimer&&clearInterval(this.autoPlayTimer)},r.prototype.autoPlayIterator=function(){var e=this,t=e.currentSlide+e.options.slidesToScroll;e.paused||e.interrupted||e.focussed||(!1===e.options.infinite&&(1===e.direction&&e.currentSlide+1===e.slideCount-1?e.direction=0:0===e.direction&&(t=e.currentSlide-e.options.slidesToScroll,e.currentSlide-1==0&&(e.direction=1))),e.slideHandler(t))},r.prototype.buildArrows=function(){var e=this;!0===e.options.arrows&&(e.$prevArrow=d(e.options.prevArrow).addClass("slick-arrow"),e.$nextArrow=d(e.options.nextArrow).addClass("slick-arrow"),e.slideCount>e.options.slidesToShow?(e.$prevArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"),e.$nextArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"),e.htmlExpr.test(e.options.prevArrow)&&e.$prevArrow.prependTo(e.options.appendArrows),e.htmlExpr.test(e.options.nextArrow)&&e.$nextArrow.appendTo(e.options.appendArrows),!0!==e.options.infinite&&e.$prevArrow.addClass("slick-disabled").attr("aria-disabled","true")):e.$prevArrow.add(e.$nextArrow).addClass("slick-hidden").attr({"aria-disabled":"true",tabindex:"-1"}))},r.prototype.buildDots=function(){var e,t,i=this;if(!0===i.options.dots&&i.slideCount>i.options.slidesToShow){for(i.$slider.addClass("slick-dotted"),t=d("<ul />").addClass(i.options.dotsClass),e=0;e<=i.getDotCount();e+=1)t.append(d("<li />").append(i.options.customPaging.call(this,i,e)));i.$dots=t.appendTo(i.options.appendDots),i.$dots.find("li").first().addClass("slick-active")}},r.prototype.buildOut=function(){var e=this;e.$slides=e.$slider.children(e.options.slide+":not(.slick-cloned)").addClass("slick-slide"),e.slideCount=e.$slides.length,e.$slides.each(function(e,t){d(t).attr("data-slick-index",e).data("originalStyling",d(t).attr("style")||"")}),e.$slider.addClass("slick-slider"),e.$slideTrack=0===e.slideCount?d('<div class="slick-track"/>').appendTo(e.$slider):e.$slides.wrapAll('<div class="slick-track"/>').parent(),e.$list=e.$slideTrack.wrap('<div class="slick-list"/>').parent(),e.$slideTrack.css("opacity",0),!0!==e.options.centerMode&&!0!==e.options.swipeToSlide||(e.options.slidesToScroll=1),d("img[data-lazy]",e.$slider).not("[src]").addClass("slick-loading"),e.setupInfinite(),e.buildArrows(),e.buildDots(),e.updateDots(),e.setSlideClasses("number"==typeof e.currentSlide?e.currentSlide:0),!0===e.options.draggable&&e.$list.addClass("draggable")},r.prototype.buildRows=function(){var e,t,i,o,s,n,r,a=this;if(o=document.createDocumentFragment(),n=a.$slider.children(),0<a.options.rows){for(r=a.options.slidesPerRow*a.options.rows,s=Math.ceil(n.length/r),e=0;e<s;e++){var l=document.createElement("div");for(t=0;t<a.options.rows;t++){var d=document.createElement("div");for(i=0;i<a.options.slidesPerRow;i++){var c=e*r+(t*a.options.slidesPerRow+i);n.get(c)&&d.appendChild(n.get(c))}l.appendChild(d)}o.appendChild(l)}a.$slider.empty().append(o),a.$slider.children().children().children().css({width:100/a.options.slidesPerRow+"%",display:"inline-block"})}},r.prototype.checkResponsive=function(e,t){var i,o,s,n=this,r=!1,a=n.$slider.width(),l=window.innerWidth||d(window).width();if("window"===n.respondTo?s=l:"slider"===n.respondTo?s=a:"min"===n.respondTo&&(s=Math.min(l,a)),n.options.responsive&&n.options.responsive.length&&null!==n.options.responsive){for(i in o=null,n.breakpoints)n.breakpoints.hasOwnProperty(i)&&(!1===n.originalSettings.mobileFirst?s<n.breakpoints[i]&&(o=n.breakpoints[i]):s>n.breakpoints[i]&&(o=n.breakpoints[i]));null!==o?null!==n.activeBreakpoint?(o!==n.activeBreakpoint||t)&&(n.activeBreakpoint=o,"unslick"===n.breakpointSettings[o]?n.unslick(o):(n.options=d.extend({},n.originalSettings,n.breakpointSettings[o]),!0===e&&(n.currentSlide=n.options.initialSlide),n.refresh(e)),r=o):(n.activeBreakpoint=o,"unslick"===n.breakpointSettings[o]?n.unslick(o):(n.options=d.extend({},n.originalSettings,n.breakpointSettings[o]),!0===e&&(n.currentSlide=n.options.initialSlide),n.refresh(e)),r=o):null!==n.activeBreakpoint&&(n.activeBreakpoint=null,n.options=n.originalSettings,!0===e&&(n.currentSlide=n.options.initialSlide),n.refresh(e),r=o),e||!1===r||n.$slider.trigger("breakpoint",[n,r])}},r.prototype.changeSlide=function(e,t){var i,o,s=this,n=d(e.currentTarget);switch(n.is("a")&&e.preventDefault(),n.is("li")||(n=n.closest("li")),i=s.slideCount%s.options.slidesToScroll!=0?0:(s.slideCount-s.currentSlide)%s.options.slidesToScroll,e.data.message){case"previous":o=0===i?s.options.slidesToScroll:s.options.slidesToShow-i,s.slideCount>s.options.slidesToShow&&s.slideHandler(s.currentSlide-o,!1,t);break;case"next":o=0===i?s.options.slidesToScroll:i,s.slideCount>s.options.slidesToShow&&s.slideHandler(s.currentSlide+o,!1,t);break;case"index":var r=0===e.data.index?0:e.data.index||n.index()*s.options.slidesToScroll;s.slideHandler(s.checkNavigable(r),!1,t),n.children().trigger("focus");break;default:return}},r.prototype.checkNavigable=function(e){var t,i;if(i=0,e>(t=this.getNavigableIndexes())[t.length-1])e=t[t.length-1];else for(var o in t){if(e<t[o]){e=i;break}i=t[o]}return e},r.prototype.cleanUpEvents=function(){var e=this;e.options.dots&&null!==e.$dots&&(d("li",e.$dots).off("click.slick",e.changeSlide).off("mouseenter.slick",d.proxy(e.interrupt,e,!0)).off("mouseleave.slick",d.proxy(e.interrupt,e,!1)),!0===e.options.accessibility&&e.$dots.off("keydown.slick",e.keyHandler)),e.$slider.off("focus.slick blur.slick"),!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow&&e.$prevArrow.off("click.slick",e.changeSlide),e.$nextArrow&&e.$nextArrow.off("click.slick",e.changeSlide),!0===e.options.accessibility&&(e.$prevArrow&&e.$prevArrow.off("keydown.slick",e.keyHandler),e.$nextArrow&&e.$nextArrow.off("keydown.slick",e.keyHandler))),e.$list.off("touchstart.slick mousedown.slick",e.swipeHandler),e.$list.off("touchmove.slick mousemove.slick",e.swipeHandler),e.$list.off("touchend.slick mouseup.slick",e.swipeHandler),e.$list.off("touchcancel.slick mouseleave.slick",e.swipeHandler),e.$list.off("click.slick",e.clickHandler),d(document).off(e.visibilityChange,e.visibility),e.cleanUpSlideEvents(),!0===e.options.accessibility&&e.$list.off("keydown.slick",e.keyHandler),!0===e.options.focusOnSelect&&d(e.$slideTrack).children().off("click.slick",e.selectHandler),d(window).off("orientationchange.slick.slick-"+e.instanceUid,e.orientationChange),d(window).off("resize.slick.slick-"+e.instanceUid,e.resize),d("[draggable!=true]",e.$slideTrack).off("dragstart",e.preventDefault),d(window).off("load.slick.slick-"+e.instanceUid,e.setPosition)},r.prototype.cleanUpSlideEvents=function(){var e=this;e.$list.off("mouseenter.slick",d.proxy(e.interrupt,e,!0)),e.$list.off("mouseleave.slick",d.proxy(e.interrupt,e,!1))},r.prototype.cleanUpRows=function(){var e;0<this.options.rows&&((e=this.$slides.children().children()).removeAttr("style"),this.$slider.empty().append(e))},r.prototype.clickHandler=function(e){!1===this.shouldClick&&(e.stopImmediatePropagation(),e.stopPropagation(),e.preventDefault())},r.prototype.destroy=function(e){var t=this;t.autoPlayClear(),t.touchObject={},t.cleanUpEvents(),d(".slick-cloned",t.$slider).detach(),t.$dots&&t.$dots.remove(),t.$prevArrow&&t.$prevArrow.length&&(t.$prevArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display",""),t.htmlExpr.test(t.options.prevArrow)&&t.$prevArrow.remove()),t.$nextArrow&&t.$nextArrow.length&&(t.$nextArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display",""),t.htmlExpr.test(t.options.nextArrow)&&t.$nextArrow.remove()),t.$slides&&(t.$slides.removeClass("slick-slide slick-active slick-center slick-visible slick-current").removeAttr("aria-hidden").removeAttr("data-slick-index").each(function(){d(this).attr("style",d(this).data("originalStyling"))}),t.$slideTrack.children(this.options.slide).detach(),t.$slideTrack.detach(),t.$list.detach(),t.$slider.append(t.$slides)),t.cleanUpRows(),t.$slider.removeClass("slick-slider"),t.$slider.removeClass("slick-initialized"),t.$slider.removeClass("slick-dotted"),t.unslicked=!0,e||t.$slider.trigger("destroy",[t])},r.prototype.disableTransition=function(e){var t={};t[this.transitionType]="",!1===this.options.fade?this.$slideTrack.css(t):this.$slides.eq(e).css(t)},r.prototype.fadeSlide=function(e,t){var i=this;!1===i.cssTransitions?(i.$slides.eq(e).css({zIndex:i.options.zIndex}),i.$slides.eq(e).animate({opacity:1},i.options.speed,i.options.easing,t)):(i.applyTransition(e),i.$slides.eq(e).css({opacity:1,zIndex:i.options.zIndex}),t&&setTimeout(function(){i.disableTransition(e),t.call()},i.options.speed))},r.prototype.fadeSlideOut=function(e){var t=this;!1===t.cssTransitions?t.$slides.eq(e).animate({opacity:0,zIndex:t.options.zIndex-2},t.options.speed,t.options.easing):(t.applyTransition(e),t.$slides.eq(e).css({opacity:0,zIndex:t.options.zIndex-2}))},r.prototype.filterSlides=r.prototype.slickFilter=function(e){var t=this;null!==e&&(t.$slidesCache=t.$slides,t.unload(),t.$slideTrack.children(this.options.slide).detach(),t.$slidesCache.filter(e).appendTo(t.$slideTrack),t.reinit())},r.prototype.focusHandler=function(){var i=this;i.$slider.off("focus.slick blur.slick").on("focus.slick blur.slick","*",function(e){e.stopImmediatePropagation();var t=d(this);setTimeout(function(){i.options.pauseOnFocus&&(i.focussed=t.is(":focus"),i.autoPlay())},0)})},r.prototype.getCurrent=r.prototype.slickCurrentSlide=function(){return this.currentSlide},r.prototype.getDotCount=function(){var e=this,t=0,i=0,o=0;if(!0===e.options.infinite)if(e.slideCount<=e.options.slidesToShow)++o;else for(;t<e.slideCount;)++o,t=i+e.options.slidesToScroll,i+=e.options.slidesToScroll<=e.options.slidesToShow?e.options.slidesToScroll:e.options.slidesToShow;else if(!0===e.options.centerMode)o=e.slideCount;else if(e.options.asNavFor)for(;t<e.slideCount;)++o,t=i+e.options.slidesToScroll,i+=e.options.slidesToScroll<=e.options.slidesToShow?e.options.slidesToScroll:e.options.slidesToShow;else o=1+Math.ceil((e.slideCount-e.options.slidesToShow)/e.options.slidesToScroll);return o-1},r.prototype.getLeft=function(e){var t,i,o,s,n=this,r=0;return n.slideOffset=0,i=n.$slides.first().outerHeight(!0),!0===n.options.infinite?(n.slideCount>n.options.slidesToShow&&(n.slideOffset=n.slideWidth*n.options.slidesToShow*-1,s=-1,!0===n.options.vertical&&!0===n.options.centerMode&&(2===n.options.slidesToShow?s=-1.5:1===n.options.slidesToShow&&(s=-2)),r=i*n.options.slidesToShow*s),n.slideCount%n.options.slidesToScroll!=0&&e+n.options.slidesToScroll>n.slideCount&&n.slideCount>n.options.slidesToShow&&(r=e>n.slideCount?(n.slideOffset=(n.options.slidesToShow-(e-n.slideCount))*n.slideWidth*-1,(n.options.slidesToShow-(e-n.slideCount))*i*-1):(n.slideOffset=n.slideCount%n.options.slidesToScroll*n.slideWidth*-1,n.slideCount%n.options.slidesToScroll*i*-1))):e+n.options.slidesToShow>n.slideCount&&(n.slideOffset=(e+n.options.slidesToShow-n.slideCount)*n.slideWidth,r=(e+n.options.slidesToShow-n.slideCount)*i),n.slideCount<=n.options.slidesToShow&&(r=n.slideOffset=0),!0===n.options.centerMode&&n.slideCount<=n.options.slidesToShow?n.slideOffset=n.slideWidth*Math.floor(n.options.slidesToShow)/2-n.slideWidth*n.slideCount/2:!0===n.options.centerMode&&!0===n.options.infinite?n.slideOffset+=n.slideWidth*Math.floor(n.options.slidesToShow/2)-n.slideWidth:!0===n.options.centerMode&&(n.slideOffset=0,n.slideOffset+=n.slideWidth*Math.floor(n.options.slidesToShow/2)),t=!1===n.options.vertical?e*n.slideWidth*-1+n.slideOffset:e*i*-1+r,!0===n.options.variableWidth&&(o=n.slideCount<=n.options.slidesToShow||!1===n.options.infinite?n.$slideTrack.children(".slick-slide").eq(e):n.$slideTrack.children(".slick-slide").eq(e+n.options.slidesToShow),t=!0===n.options.rtl?o[0]?-1*(n.$slideTrack.width()-o[0].offsetLeft-o.width()):0:o[0]?-1*o[0].offsetLeft:0,!0===n.options.centerMode&&(o=n.slideCount<=n.options.slidesToShow||!1===n.options.infinite?n.$slideTrack.children(".slick-slide").eq(e):n.$slideTrack.children(".slick-slide").eq(e+n.options.slidesToShow+1),t=!0===n.options.rtl?o[0]?-1*(n.$slideTrack.width()-o[0].offsetLeft-o.width()):0:o[0]?-1*o[0].offsetLeft:0,t+=(n.$list.width()-o.outerWidth())/2)),t},r.prototype.getOption=r.prototype.slickGetOption=function(e){return this.options[e]},r.prototype.getNavigableIndexes=function(){var e,t=this,i=0,o=0,s=[];for(e=!1===t.options.infinite?t.slideCount:(i=-1*t.options.slidesToScroll,o=-1*t.options.slidesToScroll,2*t.slideCount);i<e;)s.push(i),i=o+t.options.slidesToScroll,o+=t.options.slidesToScroll<=t.options.slidesToShow?t.options.slidesToScroll:t.options.slidesToShow;return s},r.prototype.getSlick=function(){return this},r.prototype.getSlideCount=function(){var i,o,s=this;return o=!0===s.options.centerMode?s.slideWidth*Math.floor(s.options.slidesToShow/2):0,!0===s.options.swipeToSlide?(s.$slideTrack.find(".slick-slide").each(function(e,t){if(t.offsetLeft-o+d(t).outerWidth()/2>-1*s.swipeLeft)return i=t,!1}),Math.abs(d(i).attr("data-slick-index")-s.currentSlide)||1):s.options.slidesToScroll},r.prototype.goTo=r.prototype.slickGoTo=function(e,t){this.changeSlide({data:{message:"index",index:parseInt(e)}},t)},r.prototype.init=function(e){var t=this;d(t.$slider).hasClass("slick-initialized")||(d(t.$slider).addClass("slick-initialized"),t.buildRows(),t.buildOut(),t.setProps(),t.startLoad(),t.loadSlider(),t.initializeEvents(),t.updateArrows(),t.updateDots(),t.checkResponsive(!0),t.focusHandler()),e&&t.$slider.trigger("init",[t]),!0===t.options.accessibility&&t.initADA(),t.options.autoplay&&(t.paused=!1,t.autoPlay())},r.prototype.initADA=function(){var o=this,i=Math.ceil(o.slideCount/o.options.slidesToShow),s=o.getNavigableIndexes().filter(function(e){return 0<=e&&e<o.slideCount});o.$slides.add(o.$slideTrack.find(".slick-cloned")).attr({"aria-hidden":"true",tabindex:"-1"}).find("a, input, button, select").attr({tabindex:"-1"}),null!==o.$dots&&(o.$slides.not(o.$slideTrack.find(".slick-cloned")).each(function(e){var t=s.indexOf(e);if(d(this).attr({role:"tabpanel",id:"slick-slide"+o.instanceUid+e,tabindex:-1}),-1!==t){var i="slick-slide-control"+o.instanceUid+t;d("#"+i).length&&d(this).attr({"aria-describedby":i})}}),o.$dots.attr("role","tablist").find("li").each(function(e){var t=s[e];d(this).attr({role:"presentation"}),d(this).find("button").first().attr({role:"tab",id:"slick-slide-control"+o.instanceUid+e,"aria-controls":"slick-slide"+o.instanceUid+t,"aria-label":e+1+" of "+i,"aria-selected":null,tabindex:"-1"})}).eq(o.currentSlide).find("button").attr({"aria-selected":"true",tabindex:"0"}).end());for(var e=o.currentSlide,t=e+o.options.slidesToShow;e<t;e++)o.options.focusOnChange?o.$slides.eq(e).attr({tabindex:"0"}):o.$slides.eq(e).removeAttr("tabindex");o.activateADA()},r.prototype.initArrowEvents=function(){var e=this;!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow.off("click.slick").on("click.slick",{message:"previous"},e.changeSlide),e.$nextArrow.off("click.slick").on("click.slick",{message:"next"},e.changeSlide),!0===e.options.accessibility&&(e.$prevArrow.on("keydown.slick",e.keyHandler),e.$nextArrow.on("keydown.slick",e.keyHandler)))},r.prototype.initDotEvents=function(){var e=this;!0===e.options.dots&&e.slideCount>e.options.slidesToShow&&(d("li",e.$dots).on("click.slick",{message:"index"},e.changeSlide),!0===e.options.accessibility&&e.$dots.on("keydown.slick",e.keyHandler)),!0===e.options.dots&&!0===e.options.pauseOnDotsHover&&e.slideCount>e.options.slidesToShow&&d("li",e.$dots).on("mouseenter.slick",d.proxy(e.interrupt,e,!0)).on("mouseleave.slick",d.proxy(e.interrupt,e,!1))},r.prototype.initSlideEvents=function(){var e=this;e.options.pauseOnHover&&(e.$list.on("mouseenter.slick",d.proxy(e.interrupt,e,!0)),e.$list.on("mouseleave.slick",d.proxy(e.interrupt,e,!1)))},r.prototype.initializeEvents=function(){var e=this;e.initArrowEvents(),e.initDotEvents(),e.initSlideEvents(),e.$list.on("touchstart.slick mousedown.slick",{action:"start"},e.swipeHandler),e.$list.on("touchmove.slick mousemove.slick",{action:"move"},e.swipeHandler),e.$list.on("touchend.slick mouseup.slick",{action:"end"},e.swipeHandler),e.$list.on("touchcancel.slick mouseleave.slick",{action:"end"},e.swipeHandler),e.$list.on("click.slick",e.clickHandler),d(document).on(e.visibilityChange,d.proxy(e.visibility,e)),!0===e.options.accessibility&&e.$list.on("keydown.slick",e.keyHandler),!0===e.options.focusOnSelect&&d(e.$slideTrack).children().on("click.slick",e.selectHandler),d(window).on("orientationchange.slick.slick-"+e.instanceUid,d.proxy(e.orientationChange,e)),d(window).on("resize.slick.slick-"+e.instanceUid,d.proxy(e.resize,e)),d("[draggable!=true]",e.$slideTrack).on("dragstart",e.preventDefault),d(window).on("load.slick.slick-"+e.instanceUid,e.setPosition),d(e.setPosition)},r.prototype.initUI=function(){var e=this;!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow.show(),e.$nextArrow.show()),!0===e.options.dots&&e.slideCount>e.options.slidesToShow&&e.$dots.show()},r.prototype.keyHandler=function(e){var t=this;e.target.tagName.match("TEXTAREA|INPUT|SELECT")||(37===e.keyCode&&!0===t.options.accessibility?t.changeSlide({data:{message:!0===t.options.rtl?"next":"previous"}}):39===e.keyCode&&!0===t.options.accessibility&&t.changeSlide({data:{message:!0===t.options.rtl?"previous":"next"}}))},r.prototype.lazyLoad=function(){var e,t,i,n=this;function o(e){d("img[data-lazy]",e).each(function(){var e=d(this),t=d(this).attr("data-lazy"),i=d(this).attr("data-srcset"),o=d(this).attr("data-sizes")||n.$slider.attr("data-sizes"),s=document.createElement("img");s.onload=function(){e.animate({opacity:0},100,function(){i&&(e.attr("srcset",i),o&&e.attr("sizes",o)),e.attr("src",t).animate({opacity:1},200,function(){e.removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading")}),n.$slider.trigger("lazyLoaded",[n,e,t])})},s.onerror=function(){e.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"),n.$slider.trigger("lazyLoadError",[n,e,t])},s.src=t})}if(!0===n.options.centerMode?i=!0===n.options.infinite?(t=n.currentSlide+(n.options.slidesToShow/2+1))+n.options.slidesToShow+2:(t=Math.max(0,n.currentSlide-(n.options.slidesToShow/2+1)),n.options.slidesToShow/2+1+2+n.currentSlide):(t=n.options.infinite?n.options.slidesToShow+n.currentSlide:n.currentSlide,i=Math.ceil(t+n.options.slidesToShow),!0===n.options.fade&&(0<t&&t--,i<=n.slideCount&&i++)),e=n.$slider.find(".slick-slide").slice(t,i),"anticipated"===n.options.lazyLoad)for(var s=t-1,r=i,a=n.$slider.find(".slick-slide"),l=0;l<n.options.slidesToScroll;l++)s<0&&(s=n.slideCount-1),e=(e=e.add(a.eq(s))).add(a.eq(r)),s--,r++;o(e),n.slideCount<=n.options.slidesToShow?o(n.$slider.find(".slick-slide")):n.currentSlide>=n.slideCount-n.options.slidesToShow?o(n.$slider.find(".slick-cloned").slice(0,n.options.slidesToShow)):0===n.currentSlide&&o(n.$slider.find(".slick-cloned").slice(-1*n.options.slidesToShow))},r.prototype.loadSlider=function(){var e=this;e.setPosition(),e.$slideTrack.css({opacity:1}),e.$slider.removeClass("slick-loading"),e.initUI(),"progressive"===e.options.lazyLoad&&e.progressiveLazyLoad()},r.prototype.next=r.prototype.slickNext=function(){this.changeSlide({data:{message:"next"}})},r.prototype.orientationChange=function(){this.checkResponsive(),this.setPosition()},r.prototype.pause=r.prototype.slickPause=function(){this.autoPlayClear(),this.paused=!0},r.prototype.play=r.prototype.slickPlay=function(){var e=this;e.autoPlay(),e.options.autoplay=!0,e.paused=!1,e.focussed=!1,e.interrupted=!1},r.prototype.postSlide=function(e){var t=this;t.unslicked||(t.$slider.trigger("afterChange",[t,e]),t.animating=!1,t.slideCount>t.options.slidesToShow&&t.setPosition(),t.swipeLeft=null,t.options.autoplay&&t.autoPlay(),!0===t.options.accessibility&&(t.initADA(),t.options.focusOnChange&&d(t.$slides.get(t.currentSlide)).attr("tabindex",0).focus()))},r.prototype.prev=r.prototype.slickPrev=function(){this.changeSlide({data:{message:"previous"}})},r.prototype.preventDefault=function(e){e.preventDefault()},r.prototype.progressiveLazyLoad=function(e){e=e||1;var t,i,o,s,n,r=this,a=d("img[data-lazy]",r.$slider);a.length?(t=a.first(),i=t.attr("data-lazy"),o=t.attr("data-srcset"),s=t.attr("data-sizes")||r.$slider.attr("data-sizes"),(n=document.createElement("img")).onload=function(){o&&(t.attr("srcset",o),s&&t.attr("sizes",s)),t.attr("src",i).removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading"),!0===r.options.adaptiveHeight&&r.setPosition(),r.$slider.trigger("lazyLoaded",[r,t,i]),r.progressiveLazyLoad()},n.onerror=function(){e<3?setTimeout(function(){r.progressiveLazyLoad(e+1)},500):(t.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"),r.$slider.trigger("lazyLoadError",[r,t,i]),r.progressiveLazyLoad())},n.src=i):r.$slider.trigger("allImagesLoaded",[r])},r.prototype.refresh=function(e){var t,i,o=this;i=o.slideCount-o.options.slidesToShow,!o.options.infinite&&o.currentSlide>i&&(o.currentSlide=i),o.slideCount<=o.options.slidesToShow&&(o.currentSlide=0),t=o.currentSlide,o.destroy(!0),d.extend(o,o.initials,{currentSlide:t}),o.init(),e||o.changeSlide({data:{message:"index",index:t}},!1)},r.prototype.registerBreakpoints=function(){var e,t,i,o=this,s=o.options.responsive||null;if("array"===d.type(s)&&s.length){for(e in o.respondTo=o.options.respondTo||"window",s)if(i=o.breakpoints.length-1,s.hasOwnProperty(e)){for(t=s[e].breakpoint;0<=i;)o.breakpoints[i]&&o.breakpoints[i]===t&&o.breakpoints.splice(i,1),i--;o.breakpoints.push(t),o.breakpointSettings[t]=s[e].settings}o.breakpoints.sort(function(e,t){return o.options.mobileFirst?e-t:t-e})}},r.prototype.reinit=function(){var e=this;e.$slides=e.$slideTrack.children(e.options.slide).addClass("slick-slide"),e.slideCount=e.$slides.length,e.currentSlide>=e.slideCount&&0!==e.currentSlide&&(e.currentSlide=e.currentSlide-e.options.slidesToScroll),e.slideCount<=e.options.slidesToShow&&(e.currentSlide=0),e.registerBreakpoints(),e.setProps(),e.setupInfinite(),e.buildArrows(),e.updateArrows(),e.initArrowEvents(),e.buildDots(),e.updateDots(),e.initDotEvents(),e.cleanUpSlideEvents(),e.initSlideEvents(),e.checkResponsive(!1,!0),!0===e.options.focusOnSelect&&d(e.$slideTrack).children().on("click.slick",e.selectHandler),e.setSlideClasses("number"==typeof e.currentSlide?e.currentSlide:0),e.setPosition(),e.focusHandler(),e.paused=!e.options.autoplay,e.autoPlay(),e.$slider.trigger("reInit",[e])},r.prototype.resize=function(){var e=this;d(window).width()!==e.windowWidth&&(clearTimeout(e.windowDelay),e.windowDelay=window.setTimeout(function(){e.windowWidth=d(window).width(),e.checkResponsive(),e.unslicked||e.setPosition()},50))},r.prototype.removeSlide=r.prototype.slickRemove=function(e,t,i){var o=this;if(e="boolean"==typeof e?!0===(t=e)?0:o.slideCount-1:!0===t?--e:e,o.slideCount<1||e<0||e>o.slideCount-1)return!1;o.unload(),!0===i?o.$slideTrack.children().remove():o.$slideTrack.children(this.options.slide).eq(e).remove(),o.$slides=o.$slideTrack.children(this.options.slide),o.$slideTrack.children(this.options.slide).detach(),o.$slideTrack.append(o.$slides),o.$slidesCache=o.$slides,o.reinit()},r.prototype.setCSS=function(e){var t,i,o=this,s={};!0===o.options.rtl&&(e=-e),t="left"==o.positionProp?Math.ceil(e)+"px":"0px",i="top"==o.positionProp?Math.ceil(e)+"px":"0px",s[o.positionProp]=e,!1===o.transformsEnabled||(!(s={})===o.cssTransitions?s[o.animType]="translate("+t+", "+i+")":s[o.animType]="translate3d("+t+", "+i+", 0px)"),o.$slideTrack.css(s)},r.prototype.setDimensions=function(){var e=this;!1===e.options.vertical?!0===e.options.centerMode&&e.$list.css({padding:"0px "+e.options.centerPadding}):(e.$list.height(e.$slides.first().outerHeight(!0)*e.options.slidesToShow),!0===e.options.centerMode&&e.$list.css({padding:e.options.centerPadding+" 0px"})),e.listWidth=e.$list.width(),e.listHeight=e.$list.height(),!1===e.options.vertical&&!1===e.options.variableWidth?(e.slideWidth=Math.ceil(e.listWidth/e.options.slidesToShow),e.$slideTrack.width(Math.ceil(e.slideWidth*e.$slideTrack.children(".slick-slide").length))):!0===e.options.variableWidth?e.$slideTrack.width(5e3*e.slideCount):(e.slideWidth=Math.ceil(e.listWidth),e.$slideTrack.height(Math.ceil(e.$slides.first().outerHeight(!0)*e.$slideTrack.children(".slick-slide").length)));var t=e.$slides.first().outerWidth(!0)-e.$slides.first().width();!1===e.options.variableWidth&&e.$slideTrack.children(".slick-slide").width(e.slideWidth-t)},r.prototype.setFade=function(){var i,o=this;o.$slides.each(function(e,t){i=o.slideWidth*e*-1,!0===o.options.rtl?d(t).css({position:"relative",right:i,top:0,zIndex:o.options.zIndex-2,opacity:0}):d(t).css({position:"relative",left:i,top:0,zIndex:o.options.zIndex-2,opacity:0})}),o.$slides.eq(o.currentSlide).css({zIndex:o.options.zIndex-1,opacity:1})},r.prototype.setHeight=function(){var e=this;if(1===e.options.slidesToShow&&!0===e.options.adaptiveHeight&&!1===e.options.vertical){var t=e.$slides.eq(e.currentSlide).outerHeight(!0);e.$list.css("height",t)}},r.prototype.setOption=r.prototype.slickSetOption=function(){var e,t,i,o,s,n=this,r=!1;if("object"===d.type(arguments[0])?(i=arguments[0],r=arguments[1],s="multiple"):"string"===d.type(arguments[0])&&(i=arguments[0],o=arguments[1],r=arguments[2],"responsive"===arguments[0]&&"array"===d.type(arguments[1])?s="responsive":void 0!==arguments[1]&&(s="single")),"single"===s)n.options[i]=o;else if("multiple"===s)d.each(i,function(e,t){n.options[e]=t});else if("responsive"===s)for(t in o)if("array"!==d.type(n.options.responsive))n.options.responsive=[o[t]];else{for(e=n.options.responsive.length-1;0<=e;)n.options.responsive[e].breakpoint===o[t].breakpoint&&n.options.responsive.splice(e,1),e--;n.options.responsive.push(o[t])}r&&(n.unload(),n.reinit())},r.prototype.setPosition=function(){var e=this;e.setDimensions(),e.setHeight(),!1===e.options.fade?e.setCSS(e.getLeft(e.currentSlide)):e.setFade(),e.$slider.trigger("setPosition",[e])},r.prototype.setProps=function(){var e=this,t=document.body.style;e.positionProp=!0===e.options.vertical?"top":"left","top"===e.positionProp?e.$slider.addClass("slick-vertical"):e.$slider.removeClass("slick-vertical"),void 0===t.WebkitTransition&&void 0===t.MozTransition&&void 0===t.msTransition||!0===e.options.useCSS&&(e.cssTransitions=!0),e.options.fade&&("number"==typeof e.options.zIndex?e.options.zIndex<3&&(e.options.zIndex=3):e.options.zIndex=e.defaults.zIndex),void 0!==t.OTransform&&(e.animType="OTransform",e.transformType="-o-transform",e.transitionType="OTransition",void 0===t.perspectiveProperty&&void 0===t.webkitPerspective&&(e.animType=!1)),void 0!==t.MozTransform&&(e.animType="MozTransform",e.transformType="-moz-transform",e.transitionType="MozTransition",void 0===t.perspectiveProperty&&void 0===t.MozPerspective&&(e.animType=!1)),void 0!==t.webkitTransform&&(e.animType="webkitTransform",e.transformType="-webkit-transform",e.transitionType="webkitTransition",void 0===t.perspectiveProperty&&void 0===t.webkitPerspective&&(e.animType=!1)),void 0!==t.msTransform&&(e.animType="msTransform",e.transformType="-ms-transform",e.transitionType="msTransition",void 0===t.msTransform&&(e.animType=!1)),void 0!==t.transform&&!1!==e.animType&&(e.animType="transform",e.transformType="transform",e.transitionType="transition"),e.transformsEnabled=e.options.useTransform&&null!==e.animType&&!1!==e.animType},r.prototype.setSlideClasses=function(e){var t,i,o,s,n=this;if(i=n.$slider.find(".slick-slide").removeClass("slick-active slick-center slick-current").attr("aria-hidden","true"),n.$slides.eq(e).addClass("slick-current"),!0===n.options.centerMode){var r=n.options.slidesToShow%2==0?1:0;t=Math.floor(n.options.slidesToShow/2),!0===n.options.infinite&&(t<=e&&e<=n.slideCount-1-t?n.$slides.slice(e-t+r,e+t+1).addClass("slick-active").attr("aria-hidden","false"):(o=n.options.slidesToShow+e,i.slice(o-t+1+r,o+t+2).addClass("slick-active").attr("aria-hidden","false")),0===e?i.eq(i.length-1-n.options.slidesToShow).addClass("slick-center"):e===n.slideCount-1&&i.eq(n.options.slidesToShow).addClass("slick-center")),n.$slides.eq(e).addClass("slick-center")}else 0<=e&&e<=n.slideCount-n.options.slidesToShow?n.$slides.slice(e,e+n.options.slidesToShow).addClass("slick-active").attr("aria-hidden","false"):i.length<=n.options.slidesToShow?i.addClass("slick-active").attr("aria-hidden","false"):(s=n.slideCount%n.options.slidesToShow,o=!0===n.options.infinite?n.options.slidesToShow+e:e,n.options.slidesToShow==n.options.slidesToScroll&&n.slideCount-e<n.options.slidesToShow?i.slice(o-(n.options.slidesToShow-s),o+s).addClass("slick-active").attr("aria-hidden","false"):i.slice(o,o+n.options.slidesToShow).addClass("slick-active").attr("aria-hidden","false"));"ondemand"!==n.options.lazyLoad&&"anticipated"!==n.options.lazyLoad||n.lazyLoad()},r.prototype.setupInfinite=function(){var e,t,i,o=this;if(!0===o.options.fade&&(o.options.centerMode=!1),!0===o.options.infinite&&!1===o.options.fade&&(t=null,o.slideCount>o.options.slidesToShow)){for(i=!0===o.options.centerMode?o.options.slidesToShow+1:o.options.slidesToShow,e=o.slideCount;e>o.slideCount-i;e-=1)t=e-1,d(o.$slides[t]).clone(!0).attr("id","").attr("data-slick-index",t-o.slideCount).prependTo(o.$slideTrack).addClass("slick-cloned");for(e=0;e<i+o.slideCount;e+=1)t=e,d(o.$slides[t]).clone(!0).attr("id","").attr("data-slick-index",t+o.slideCount).appendTo(o.$slideTrack).addClass("slick-cloned");o.$slideTrack.find(".slick-cloned").find("[id]").each(function(){d(this).attr("id","")})}},r.prototype.interrupt=function(e){e||this.autoPlay(),this.interrupted=e},r.prototype.selectHandler=function(e){var t=d(e.target).is(".slick-slide")?d(e.target):d(e.target).parents(".slick-slide"),i=parseInt(t.attr("data-slick-index"));i||(i=0),this.slideCount<=this.options.slidesToShow?this.slideHandler(i,!1,!0):this.slideHandler(i)},r.prototype.slideHandler=function(e,t,i){var o,s,n,r,a,l,d=this;if(t=t||!1,!(!0===d.animating&&!0===d.options.waitForAnimate||!0===d.options.fade&&d.currentSlide===e))if(!1===t&&d.asNavFor(e),o=e,a=d.getLeft(o),r=d.getLeft(d.currentSlide),d.currentLeft=null===d.swipeLeft?r:d.swipeLeft,!1===d.options.infinite&&!1===d.options.centerMode&&(e<0||e>d.getDotCount()*d.options.slidesToScroll))!1===d.options.fade&&(o=d.currentSlide,!0!==i&&d.slideCount>d.options.slidesToShow?d.animateSlide(r,function(){d.postSlide(o)}):d.postSlide(o));else if(!1===d.options.infinite&&!0===d.options.centerMode&&(e<0||e>d.slideCount-d.options.slidesToScroll))!1===d.options.fade&&(o=d.currentSlide,!0!==i&&d.slideCount>d.options.slidesToShow?d.animateSlide(r,function(){d.postSlide(o)}):d.postSlide(o));else{if(d.options.autoplay&&clearInterval(d.autoPlayTimer),s=o<0?d.slideCount%d.options.slidesToScroll!=0?d.slideCount-d.slideCount%d.options.slidesToScroll:d.slideCount+o:o>=d.slideCount?d.slideCount%d.options.slidesToScroll!=0?0:o-d.slideCount:o,d.animating=!0,d.$slider.trigger("beforeChange",[d,d.currentSlide,s]),n=d.currentSlide,d.currentSlide=s,d.setSlideClasses(d.currentSlide),d.options.asNavFor&&(l=(l=d.getNavTarget()).slick("getSlick")).slideCount<=l.options.slidesToShow&&l.setSlideClasses(d.currentSlide),d.updateDots(),d.updateArrows(),!0===d.options.fade)return!0!==i?(d.fadeSlideOut(n),d.fadeSlide(s,function(){d.postSlide(s)})):d.postSlide(s),void d.animateHeight();!0!==i&&d.slideCount>d.options.slidesToShow?d.animateSlide(a,function(){d.postSlide(s)}):d.postSlide(s)}},r.prototype.startLoad=function(){var e=this;!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow.hide(),e.$nextArrow.hide()),!0===e.options.dots&&e.slideCount>e.options.slidesToShow&&e.$dots.hide(),e.$slider.addClass("slick-loading")},r.prototype.swipeDirection=function(){var e,t,i,o,s=this;return e=s.touchObject.startX-s.touchObject.curX,t=s.touchObject.startY-s.touchObject.curY,i=Math.atan2(t,e),(o=Math.round(180*i/Math.PI))<0&&(o=360-Math.abs(o)),o<=45&&0<=o?!1===s.options.rtl?"left":"right":o<=360&&315<=o?!1===s.options.rtl?"left":"right":135<=o&&o<=225?!1===s.options.rtl?"right":"left":!0===s.options.verticalSwiping?35<=o&&o<=135?"down":"up":"vertical"},r.prototype.swipeEnd=function(e){var t,i,o=this;if(o.dragging=!1,o.swiping=!1,o.scrolling)return o.scrolling=!1;if(o.interrupted=!1,o.shouldClick=!(10<o.touchObject.swipeLength),void 0===o.touchObject.curX)return!1;if(!0===o.touchObject.edgeHit&&o.$slider.trigger("edge",[o,o.swipeDirection()]),o.touchObject.swipeLength>=o.touchObject.minSwipe){switch(i=o.swipeDirection()){case"left":case"down":t=o.options.swipeToSlide?o.checkNavigable(o.currentSlide+o.getSlideCount()):o.currentSlide+o.getSlideCount(),o.currentDirection=0;break;case"right":case"up":t=o.options.swipeToSlide?o.checkNavigable(o.currentSlide-o.getSlideCount()):o.currentSlide-o.getSlideCount(),o.currentDirection=1}"vertical"!=i&&(o.slideHandler(t),o.touchObject={},o.$slider.trigger("swipe",[o,i]))}else o.touchObject.startX!==o.touchObject.curX&&(o.slideHandler(o.currentSlide),o.touchObject={})},r.prototype.swipeHandler=function(e){var t=this;if(!(!1===t.options.swipe||"ontouchend"in document&&!1===t.options.swipe||!1===t.options.draggable&&-1!==e.type.indexOf("mouse")))switch(t.touchObject.fingerCount=e.originalEvent&&void 0!==e.originalEvent.touches?e.originalEvent.touches.length:1,t.touchObject.minSwipe=t.listWidth/t.options.touchThreshold,!0===t.options.verticalSwiping&&(t.touchObject.minSwipe=t.listHeight/t.options.touchThreshold),e.data.action){case"start":t.swipeStart(e);break;case"move":t.swipeMove(e);break;case"end":t.swipeEnd(e)}},r.prototype.swipeMove=function(e){var t,i,o,s,n,r,a=this;return n=void 0!==e.originalEvent?e.originalEvent.touches:null,!(!a.dragging||a.scrolling||n&&1!==n.length)&&(t=a.getLeft(a.currentSlide),a.touchObject.curX=void 0!==n?n[0].pageX:e.clientX,a.touchObject.curY=void 0!==n?n[0].pageY:e.clientY,a.touchObject.swipeLength=Math.round(Math.sqrt(Math.pow(a.touchObject.curX-a.touchObject.startX,2))),r=Math.round(Math.sqrt(Math.pow(a.touchObject.curY-a.touchObject.startY,2))),!a.options.verticalSwiping&&!a.swiping&&4<r?!(a.scrolling=!0):(!0===a.options.verticalSwiping&&(a.touchObject.swipeLength=r),i=a.swipeDirection(),void 0!==e.originalEvent&&4<a.touchObject.swipeLength&&(a.swiping=!0,e.preventDefault()),s=(!1===a.options.rtl?1:-1)*(a.touchObject.curX>a.touchObject.startX?1:-1),!0===a.options.verticalSwiping&&(s=a.touchObject.curY>a.touchObject.startY?1:-1),o=a.touchObject.swipeLength,(a.touchObject.edgeHit=!1)===a.options.infinite&&(0===a.currentSlide&&"right"===i||a.currentSlide>=a.getDotCount()&&"left"===i)&&(o=a.touchObject.swipeLength*a.options.edgeFriction,a.touchObject.edgeHit=!0),!1===a.options.vertical?a.swipeLeft=t+o*s:a.swipeLeft=t+o*(a.$list.height()/a.listWidth)*s,!0===a.options.verticalSwiping&&(a.swipeLeft=t+o*s),!0!==a.options.fade&&!1!==a.options.touchMove&&(!0===a.animating?(a.swipeLeft=null,!1):void a.setCSS(a.swipeLeft))))},r.prototype.swipeStart=function(e){var t,i=this;if(i.interrupted=!0,1!==i.touchObject.fingerCount||i.slideCount<=i.options.slidesToShow)return!(i.touchObject={});void 0!==e.originalEvent&&void 0!==e.originalEvent.touches&&(t=e.originalEvent.touches[0]),i.touchObject.startX=i.touchObject.curX=void 0!==t?t.pageX:e.clientX,i.touchObject.startY=i.touchObject.curY=void 0!==t?t.pageY:e.clientY,i.dragging=!0},r.prototype.unfilterSlides=r.prototype.slickUnfilter=function(){var e=this;null!==e.$slidesCache&&(e.unload(),e.$slideTrack.children(this.options.slide).detach(),e.$slidesCache.appendTo(e.$slideTrack),e.reinit())},r.prototype.unload=function(){var e=this;d(".slick-cloned",e.$slider).remove(),e.$dots&&e.$dots.remove(),e.$prevArrow&&e.htmlExpr.test(e.options.prevArrow)&&e.$prevArrow.remove(),e.$nextArrow&&e.htmlExpr.test(e.options.nextArrow)&&e.$nextArrow.remove(),e.$slides.removeClass("slick-slide slick-active slick-visible slick-current").attr("aria-hidden","true").css("width","")},r.prototype.unslick=function(e){this.$slider.trigger("unslick",[this,e]),this.destroy()},r.prototype.updateArrows=function(){var e=this;Math.floor(e.options.slidesToShow/2),!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&!e.options.infinite&&(e.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false"),e.$nextArrow.removeClass("slick-disabled").attr("aria-disabled","false"),0===e.currentSlide?(e.$prevArrow.addClass("slick-disabled").attr("aria-disabled","true"),e.$nextArrow.removeClass("slick-disabled").attr("aria-disabled","false")):e.currentSlide>=e.slideCount-e.options.slidesToShow&&!1===e.options.centerMode?(e.$nextArrow.addClass("slick-disabled").attr("aria-disabled","true"),e.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false")):e.currentSlide>=e.slideCount-1&&!0===e.options.centerMode&&(e.$nextArrow.addClass("slick-disabled").attr("aria-disabled","true"),e.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false")))},r.prototype.updateDots=function(){var e=this;null!==e.$dots&&(e.$dots.find("li").removeClass("slick-active").end(),e.$dots.find("li").eq(Math.floor(e.currentSlide/e.options.slidesToScroll)).addClass("slick-active"))},r.prototype.visibility=function(){this.options.autoplay&&(document[this.hidden]?this.interrupted=!0:this.interrupted=!1)},d.fn.slick=function(){var e,t,i=this,o=arguments[0],s=Array.prototype.slice.call(arguments,1),n=i.length;for(e=0;e<n;e++)if("object"==typeof o||void 0===o?i[e].slick=new r(i[e],o):t=i[e].slick[o].apply(i[e].slick,s),void 0!==t)return t;return i}}),$(function(){$(".reviews-slider").slick({slidesToShow:4,slidesToScroll:1,prevArrow:$(".reviews-slider-nav .icon-arrow-thin-left"),nextArrow:$(".reviews-slider-nav .icon-arrow-thin-right"),dots:!0,responsive:[{breakpoint:1400,settings:{slidesToShow:3,slidesToScroll:1}},{breakpoint:1024,settings:{slidesToShow:2,slidesToScroll:2}},{breakpoint:600,settings:{slidesToShow:1,slidesToScroll:1}}]}),$(".partners-slider").slick({slidesToShow:4,slidesToScroll:1,responsive:[{breakpoint:1024,settings:{slidesToShow:3,slidesToScroll:1,dots:!0,autoplay:!0,arrow:!1}},{breakpoint:480,settings:{slidesToShow:2,slidesToScroll:2,dots:!0,autoplay:!0}}]}),$(".pro-slider").slick({slidesToShow:1,slidesToScroll:1,dots:!0}),$(".director-slider").slick({infinite:!0,centerMode:!0,slidesToShow:3,slidesToScroll:1,centerPadding:"0",arrow:!0,responsive:[{breakpoint:768,settings:{centerMode:!0,dots:!0,slidesToShow:1}}]})}),jQuery(function(){initLightbox()}),function(o,i,$,c){var s=$("html"),n=$(o),d=$(i),A=$.fancybox=function(){A.open.apply(this,arguments)},r=navigator.userAgent.match(/msie/i),a=null,l=i.createTouch!==c,p=function(e){return e&&e.hasOwnProperty&&e instanceof $},h=function(e){return e&&"string"===$.type(e)},O=function(e){return h(e)&&0<e.indexOf("%")},H=function(e,t){var i=parseInt(e,10)||0;return t&&O(e)&&(i*=A.getViewport()[t]/100),Math.ceil(i)},P=function(e,t){return H(e,t)+"px"};$.extend(A,{version:"2.1.5",defaults:{padding:15,margin:20,width:800,height:600,minWidth:100,minHeight:100,maxWidth:9999,maxHeight:9999,pixelRatio:1,autoSize:!0,autoHeight:!1,autoWidth:!1,autoResize:!0,autoCenter:!l,fitToView:!0,aspectRatio:!1,topRatio:.5,leftRatio:.5,scrolling:"auto",wrapCSS:"",arrows:!0,closeBtn:!0,closeClick:!1,nextClick:!1,mouseWheel:!0,autoPlay:!1,playSpeed:3e3,preload:3,modal:!1,loop:!0,ajax:{dataType:"html",headers:{"X-fancyBox":!0}},iframe:{scrolling:"auto",preload:!0},swf:{wmode:"transparent",allowfullscreen:"true",allowscriptaccess:"always"},keys:{next:{13:"left",34:"up",39:"left",40:"up"},prev:{8:"right",33:"down",37:"right",38:"down"},close:[27],play:[32],toggle:[70]},direction:{next:"left",prev:"right"},scrollOutside:!0,index:0,type:null,href:null,content:null,title:null,tpl:{wrap:'<div class="fancybox-wrap" tabIndex="-1"><div class="fancybox-skin"><div class="fancybox-outer"><div class="fancybox-inner"></div></div></div></div>',image:'<img class="fancybox-image" src="{href}" alt="" />',iframe:'<iframe id="fancybox-frame{rnd}" name="fancybox-frame{rnd}" class="fancybox-iframe" frameborder="0" vspace="0" hspace="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen'+(r?' allowtransparency="true"':"")+"></iframe>",error:'<p class="fancybox-error">The requested content cannot be loaded.<br/>Please try again later.</p>',closeBtn:'<a title="Close" class="fancybox-item fancybox-close" href="javascript:;"></a>',next:'<a title="Next" class="fancybox-nav fancybox-next" href="javascript:;"><span></span></a>',prev:'<a title="Previous" class="fancybox-nav fancybox-prev" href="javascript:;"><span></span></a>'},openEffect:"fade",openSpeed:250,openEasing:"swing",openOpacity:!0,openMethod:"zoomIn",closeEffect:"fade",closeSpeed:250,closeEasing:"swing",closeOpacity:!0,closeMethod:"zoomOut",nextEffect:"elastic",nextSpeed:250,nextEasing:"swing",nextMethod:"changeIn",prevEffect:"elastic",prevSpeed:250,prevEasing:"swing",prevMethod:"changeOut",helpers:{overlay:!0,title:!0},onCancel:$.noop,beforeLoad:$.noop,afterLoad:$.noop,beforeShow:$.noop,afterShow:$.noop,beforeChange:$.noop,beforeClose:$.noop,afterClose:$.noop},group:{},opts:{},previous:null,coming:null,current:null,isActive:!1,isOpen:!1,isOpened:!1,wrap:null,skin:null,outer:null,inner:null,player:{timer:null,isActive:!1},ajaxLoad:null,imgPreload:null,transitions:{},helpers:{},open:function(l,d){if(l&&($.isPlainObject(d)||(d={}),!1!==A.close(!0)))return $.isArray(l)||(l=p(l)?$(l).get():[l]),$.each(l,function(e,t){var i,o,s,n,r,a={};"object"===$.type(t)&&(t.nodeType&&(t=$(t)),p(t)?(a={href:t.data("fancybox-href")||t.attr("href"),title:t.data("fancybox-title")||t.attr("title"),isDom:!0,element:t},$.metadata&&$.extend(!0,a,t.metadata())):a=t),i=d.href||a.href||(h(t)?t:null),o=d.title!==c?d.title:a.title||"",!(n=(s=d.content||a.content)?"html":d.type||a.type)&&a.isDom&&((n=t.data("fancybox-type"))||(n=(n=t.prop("class").match(/fancybox\.(\w+)/))?n[1]:null)),h(i)&&(n||(A.isImage(i)?n="image":A.isSWF(i)?n="swf":"#"===i.charAt(0)?n="inline":h(t)&&(n="html",s=t)),"ajax"===n&&(i=(r=i.split(/\s+/,2)).shift(),r=r.shift())),s||("inline"===n?i?s=$(h(i)?i.replace(/.*(?=#[^\s]+$)/,""):i):a.isDom&&(s=t):"html"===n?s=i:!n&&!i&&a.isDom&&(n="inline",s=t)),$.extend(a,{href:i,type:n,content:s,title:o,selector:r}),l[e]=a}),A.opts=$.extend(!0,{},A.defaults,d),d.keys!==c&&(A.opts.keys=!!d.keys&&$.extend({},A.defaults.keys,d.keys)),A.group=l,A._start(A.opts.index)},cancel:function(){var e=A.coming;e&&!1!==A.trigger("onCancel")&&(A.hideLoading(),A.ajaxLoad&&A.ajaxLoad.abort(),A.ajaxLoad=null,A.imgPreload&&(A.imgPreload.onload=A.imgPreload.onerror=null),e.wrap&&e.wrap.stop(!0,!0).trigger("onReset").remove(),A.coming=null,A.current||A._afterZoomOut(e))},close:function(e){A.cancel(),!1!==A.trigger("beforeClose")&&(A.unbindEvents(),A.isActive&&(A.isOpen&&!0!==e?(A.isOpen=A.isOpened=!1,A.isClosing=!0,$(".fancybox-item, .fancybox-nav").remove(),A.wrap.stop(!0,!0).removeClass("fancybox-opened"),A.transitions[A.current.closeMethod]()):($(".fancybox-wrap").stop(!0).trigger("onReset").remove(),A._afterZoomOut())))},play:function(e){var t=function(){clearTimeout(A.player.timer)},i=function(){t(),A.current&&A.player.isActive&&(A.player.timer=setTimeout(A.next,A.current.playSpeed))},o=function(){t(),d.unbind(".player"),A.player.isActive=!1,A.trigger("onPlayEnd")};!0===e||!A.player.isActive&&!1!==e?A.current&&(A.current.loop||A.current.index<A.group.length-1)&&(A.player.isActive=!0,d.bind({"onCancel.player beforeClose.player":o,"onUpdate.player":i,"beforeLoad.player":t}),i(),A.trigger("onPlayStart")):o()},next:function(e){var t=A.current;t&&(h(e)||(e=t.direction.next),A.jumpto(t.index+1,e,"next"))},prev:function(e){var t=A.current;t&&(h(e)||(e=t.direction.prev),A.jumpto(t.index-1,e,"prev"))},jumpto:function(e,t,i){var o=A.current;o&&(e=H(e),A.direction=t||o.direction[e>=o.index?"next":"prev"],A.router=i||"jumpto",o.loop&&(e<0&&(e=o.group.length+e%o.group.length),e%=o.group.length),o.group[e]!==c&&(A.cancel(),A._start(e)))},reposition:function(e,t){var i,o=A.current,s=o?o.wrap:null;s&&(i=A._getPosition(t),e&&"scroll"===e.type?(delete i.position,s.stop(!0,!0).animate(i,200)):(s.css(i),o.pos=$.extend({},o.dim,i)))},update:function(t){var i=t&&t.type,o=!i||"orientationchange"===i;o&&(clearTimeout(a),a=null),A.isOpen&&!a&&(a=setTimeout(function(){var e=A.current;e&&!A.isClosing&&(A.wrap.removeClass("fancybox-tmp"),(o||"load"===i||"resize"===i&&e.autoResize)&&A._setDimension(),"scroll"===i&&e.canShrink||A.reposition(t),A.trigger("onUpdate"),a=null)},o&&!l?0:300))},toggle:function(e){A.isOpen&&(A.current.fitToView="boolean"===$.type(e)?e:!A.current.fitToView,l&&(A.wrap.removeAttr("style").addClass("fancybox-tmp"),A.trigger("onUpdate")),A.update())},hideLoading:function(){d.unbind(".loading"),$("#fancybox-loading").remove()},showLoading:function(){var e,t;A.hideLoading(),e=$('<div id="fancybox-loading"><div></div></div>').click(A.cancel).appendTo("body"),d.bind("keydown.loading",function(e){27===(e.which||e.keyCode)&&(e.preventDefault(),A.cancel())}),A.defaults.fixed||(t=A.getViewport(),e.css({position:"absolute",top:.5*t.h+t.y,left:.5*t.w+t.x}))},getViewport:function(){var e=A.current&&A.current.locked||!1,t={x:n.scrollLeft(),y:n.scrollTop()};return t.h=e?(t.w=e[0].clientWidth,e[0].clientHeight):(t.w=l&&o.innerWidth?o.innerWidth:n.width(),l&&o.innerHeight?o.innerHeight:n.height()),t},unbindEvents:function(){A.wrap&&p(A.wrap)&&A.wrap.unbind(".fb"),d.unbind(".fb"),n.unbind(".fb")},bindEvents:function(){var t,r=A.current;r&&(n.bind("orientationchange.fb"+(l?"":" resize.fb")+(r.autoCenter&&!r.locked?" scroll.fb":""),A.update),(t=r.keys)&&d.bind("keydown.fb",function(i){var o=i.which||i.keyCode,e=i.target||i.srcElement;if(27===o&&A.coming)return!1;!i.ctrlKey&&!i.altKey&&!i.shiftKey&&!i.metaKey&&(!e||!e.type&&!$(e).is("[contenteditable]"))&&$.each(t,function(e,t){return 1<r.group.length&&t[o]!==c?(A[e](t[o]),i.preventDefault(),!1):-1<$.inArray(o,t)?(A[e](),i.preventDefault(),!1):void 0})}),$.fn.mousewheel&&r.mouseWheel&&A.wrap.bind("mousewheel.fb",function(e,t,i,o){for(var s=$(e.target||null),n=!1;s.length&&!n&&!s.is(".fancybox-skin")&&!s.is(".fancybox-wrap");)n=s[0]&&!(s[0].style.overflow&&"hidden"===s[0].style.overflow)&&(s[0].clientWidth&&s[0].scrollWidth>s[0].clientWidth||s[0].clientHeight&&s[0].scrollHeight>s[0].clientHeight),s=$(s).parent();0!==t&&!n&&1<A.group.length&&!r.canShrink&&(0<o||0<i?A.prev(0<o?"down":"left"):(o<0||i<0)&&A.next(o<0?"up":"right"),e.preventDefault())}))},trigger:function(i,e){var t,o=e||A.coming||A.current;if(o){if($.isFunction(o[i])&&(t=o[i].apply(o,Array.prototype.slice.call(arguments,1))),!1===t)return!1;o.helpers&&$.each(o.helpers,function(e,t){t&&A.helpers[e]&&$.isFunction(A.helpers[e][i])&&A.helpers[e][i]($.extend(!0,{},A.helpers[e].defaults,t),o)}),d.trigger(i)}},isImage:function(e){return h(e)&&e.match(/(^data:image\/.*,)|(\.(jp(e|g|eg)|gif|png|bmp|webp|svg)((\?|#).*)?$)/i)},isSWF:function(e){return h(e)&&e.match(/\.(swf)((\?|#).*)?$/i)},_start:function(e){var t,i,o={};if(e=H(e),!(t=A.group[e]||null))return!1;if(t=(o=$.extend(!0,{},A.opts,t)).margin,i=o.padding,"number"===$.type(t)&&(o.margin=[t,t,t,t]),"number"===$.type(i)&&(o.padding=[i,i,i,i]),o.modal&&$.extend(!0,o,{closeBtn:!1,closeClick:!1,nextClick:!1,arrows:!1,mouseWheel:!1,keys:null,helpers:{overlay:{closeClick:!1}}}),o.autoSize&&(o.autoWidth=o.autoHeight=!0),"auto"===o.width&&(o.autoWidth=!0),"auto"===o.height&&(o.autoHeight=!0),o.group=A.group,o.index=e,A.coming=o,!1===A.trigger("beforeLoad"))A.coming=null;else{if(i=o.type,t=o.href,!i)return A.coming=null,!(!A.current||!A.router||"jumpto"===A.router)&&(A.current.index=e,A[A.router](A.direction));if(A.isActive=!0,"image"!==i&&"swf"!==i||(o.autoHeight=o.autoWidth=!1,o.scrolling="visible"),"image"===i&&(o.aspectRatio=!0),"iframe"===i&&l&&(o.scrolling="scroll"),o.wrap=$(o.tpl.wrap).addClass("fancybox-"+(l?"mobile":"desktop")+" fancybox-type-"+i+" fancybox-tmp "+o.wrapCSS).appendTo(o.parent||"body"),$.extend(o,{skin:$(".fancybox-skin",o.wrap),outer:$(".fancybox-outer",o.wrap),inner:$(".fancybox-inner",o.wrap)}),$.each(["Top","Right","Bottom","Left"],function(e,t){o.skin.css("padding"+t,P(o.padding[e]))}),A.trigger("onReady"),"inline"===i||"html"===i){if(!o.content||!o.content.length)return A._error("content")}else if(!t)return A._error("href");"image"===i?A._loadImage():"ajax"===i?A._loadAjax():"iframe"===i?A._loadIframe():A._afterLoad()}},_error:function(e){$.extend(A.coming,{type:"html",autoWidth:!0,autoHeight:!0,minWidth:0,minHeight:0,scrolling:"no",hasError:e,content:A.coming.tpl.error}),A._afterLoad()},_loadImage:function(){var e=A.imgPreload=new Image;e.onload=function(){this.onload=this.onerror=null,A.coming.width=this.width/A.opts.pixelRatio,A.coming.height=this.height/A.opts.pixelRatio,A._afterLoad()},e.onerror=function(){this.onload=this.onerror=null,A._error("image")},e.src=A.coming.href,!0!==e.complete&&A.showLoading()},_loadAjax:function(){var i=A.coming;A.showLoading(),A.ajaxLoad=$.ajax($.extend({},i.ajax,{url:i.href,error:function(e,t){A.coming&&"abort"!==t?A._error("ajax",e):A.hideLoading()},success:function(e,t){"success"===t&&(i.content=e,A._afterLoad())}}))},_loadIframe:function(){var e=A.coming,t=$(e.tpl.iframe.replace(/\{rnd\}/g,(new Date).getTime())).attr("scrolling",l?"auto":e.iframe.scrolling).attr("src",e.href);$(e.wrap).bind("onReset",function(){try{$(this).find("iframe").hide().attr("src","//about:blank").end().empty()}catch(e){}}),e.iframe.preload&&(A.showLoading(),t.one("load",function(){$(this).data("ready",1),l||$(this).bind("load.fb",A.update),$(this).parents(".fancybox-wrap").width("100%").removeClass("fancybox-tmp").show(),A._afterLoad()})),e.content=t.appendTo(e.inner),e.iframe.preload||A._afterLoad()},_preloadImages:function(){var e,t,i=A.group,o=A.current,s=i.length,n=o.preload?Math.min(o.preload,s-1):0;for(t=1;t<=n;t+=1)"image"===(e=i[(o.index+t)%s]).type&&e.href&&((new Image).src=e.href)},_afterLoad:function(){var i,e,t,o,s,n=A.coming,r=A.current;if(A.hideLoading(),n&&!1!==A.isActive)if(!1===A.trigger("afterLoad",n,r))n.wrap.stop(!0).trigger("onReset").remove(),A.coming=null;else{switch(r&&(A.trigger("beforeChange",r),r.wrap.stop(!0).removeClass("fancybox-opened").find(".fancybox-item, .fancybox-nav").remove()),A.unbindEvents(),i=n.content,e=n.type,t=n.scrolling,$.extend(A,{wrap:n.wrap,skin:n.skin,outer:n.outer,inner:n.inner,current:n,previous:r}),o=n.href,e){case"inline":case"ajax":case"html":n.selector?i=$("<div>").html(i).find(n.selector):p(i)&&(i.data("fancybox-placeholder")||i.data("fancybox-placeholder",$('<div class="fancybox-placeholder"></div>').insertAfter(i).hide()),i=i.show().detach(),n.wrap.bind("onReset",function(){$(this).find(i).length&&i.hide().replaceAll(i.data("fancybox-placeholder")).data("fancybox-placeholder",!1)}));break;case"image":i=n.tpl.image.replace("{href}",o);break;case"swf":i='<object id="fancybox-swf" classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" width="100%" height="100%"><param name="movie" value="'+o+'"></param>',s="",$.each(n.swf,function(e,t){i+='<param name="'+e+'" value="'+t+'"></param>',s+=" "+e+'="'+t+'"'}),i+='<embed src="'+o+'" type="application/x-shockwave-flash" width="100%" height="100%"'+s+"></embed></object>"}(!p(i)||!i.parent().is(n.inner))&&n.inner.append(i),A.trigger("beforeShow"),n.inner.css("overflow","yes"===t?"scroll":"no"===t?"hidden":t),A._setDimension(),A.reposition(),A.isOpen=!1,A.coming=null,A.bindEvents(),A.isOpened?r.prevMethod&&A.transitions[r.prevMethod]():$(".fancybox-wrap").not(n.wrap).stop(!0).trigger("onReset").remove(),A.transitions[A.isOpened?n.nextMethod:n.openMethod](),A._preloadImages()}},_setDimension:function(){var e,t,i,o,s,n,r,a,l,d=A.getViewport(),c=0,p=!1,h=!1,u=(p=A.wrap,A.skin),f=A.inner,g=A.current,v=(h=g.width,g.height),y=g.minWidth,w=g.minHeight,m=g.maxWidth,k=g.maxHeight,b=g.scrolling,S=g.scrollOutside?g.scrollbarWidth:0,x=g.margin,T=H(x[1]+x[3]),C=H(x[0]+x[2]);if(p.add(u).add(f).width("auto").height("auto").removeClass("fancybox-tmp"),t=T+(x=H(u.outerWidth(!0)-u.width())),i=C+(e=H(u.outerHeight(!0)-u.height())),o=O(h)?(d.w-t)*H(h)/100:h,s=O(v)?(d.h-i)*H(v)/100:v,"iframe"===g.type){if(l=g.content,g.autoHeight&&1===l.data("ready"))try{l[0].contentWindow.document.location&&(f.width(o).height(9999),n=l.contents().find("body"),S&&n.css("overflow-x","hidden"),s=n.outerHeight(!0))}catch(e){}}else(g.autoWidth||g.autoHeight)&&(f.addClass("fancybox-tmp"),g.autoWidth||f.width(o),g.autoHeight||f.height(s),g.autoWidth&&(o=f.width()),g.autoHeight&&(s=f.height()),f.removeClass("fancybox-tmp"));if(h=H(o),v=H(s),a=o/s,y=H(O(y)?H(y,"w")-t:y),m=H(O(m)?H(m,"w")-t:m),w=H(O(w)?H(w,"h")-i:w),n=m,r=k=H(O(k)?H(k,"h")-i:k),g.fitToView&&(m=Math.min(d.w-t,m),k=Math.min(d.h-i,k)),t=d.w-T,C=d.h-C,g.aspectRatio?(m<h&&(v=H((h=m)/a)),k<v&&(h=H((v=k)*a)),h<y&&(v=H((h=y)/a)),v<w&&(h=H((v=w)*a))):(h=Math.max(y,Math.min(h,m)),g.autoHeight&&"iframe"!==g.type&&(f.width(h),v=f.height()),v=Math.max(w,Math.min(v,k))),g.fitToView)if(f.width(h).height(v),p.width(h+x),d=p.width(),T=p.height(),g.aspectRatio)for(;(t<d||C<T)&&y<h&&w<v&&!(19<c++);)v=Math.max(w,Math.min(k,v-10)),(h=H(v*a))<y&&(v=H((h=y)/a)),m<h&&(v=H((h=m)/a)),f.width(h).height(v),p.width(h+x),d=p.width(),T=p.height();else h=Math.max(y,Math.min(h,h-(d-t))),v=Math.max(w,Math.min(v,v-(T-C)));S&&"auto"===b&&v<s&&h+x+S<t&&(h+=S),f.width(h).height(v),p.width(h+x),d=p.width(),T=p.height(),p=(t<d||C<T)&&y<h&&w<v,h=g.aspectRatio?h<n&&v<r&&h<o&&v<s:(h<n||v<r)&&(h<o||v<s),$.extend(g,{dim:{width:P(d),height:P(T)},origWidth:o,origHeight:s,canShrink:p,canExpand:h,wPadding:x,hPadding:e,wrapSpace:T-u.outerHeight(!0),skinSpace:u.height()-v}),!l&&g.autoHeight&&w<v&&v<k&&!h&&f.height("auto")},_getPosition:function(e){var t=A.current,i=A.getViewport(),o=t.margin,s=A.wrap.width()+o[1]+o[3],n=A.wrap.height()+o[0]+o[2];o={position:"absolute",top:o[0],left:o[3]};return t.autoCenter&&t.fixed&&!e&&n<=i.h&&s<=i.w?o.position="fixed":t.locked||(o.top+=i.y,o.left+=i.x),o.top=P(Math.max(o.top,o.top+(i.h-n)*t.topRatio)),o.left=P(Math.max(o.left,o.left+(i.w-s)*t.leftRatio)),o},_afterZoomIn:function(){var t=A.current;t&&(A.isOpen=A.isOpened=!0,A.wrap.css("overflow","visible").addClass("fancybox-opened"),A.update(),(t.closeClick||t.nextClick&&1<A.group.length)&&A.inner.css("cursor","pointer").bind("click.fb",function(e){!$(e.target).is("a")&&!$(e.target).parent().is("a")&&(e.preventDefault(),A[t.closeClick?"close":"next"]())}),t.closeBtn&&$(t.tpl.closeBtn).appendTo(A.skin).bind("click.fb",function(e){e.preventDefault(),A.close()}),t.arrows&&1<A.group.length&&((t.loop||0<t.index)&&$(t.tpl.prev).appendTo(A.outer).bind("click.fb",A.prev),(t.loop||t.index<A.group.length-1)&&$(t.tpl.next).appendTo(A.outer).bind("click.fb",A.next)),A.trigger("afterShow"),t.loop||t.index!==t.group.length-1?A.opts.autoPlay&&!A.player.isActive&&(A.opts.autoPlay=!1,A.play()):A.play(!1))},_afterZoomOut:function(e){e=e||A.current,$(".fancybox-wrap").trigger("onReset").remove(),$.extend(A,{group:{},opts:{},router:!1,current:null,isActive:!1,isOpened:!1,isOpen:!1,isClosing:!1,wrap:null,skin:null,outer:null,inner:null}),A.trigger("afterClose",e)}}),A.transitions={getOrigPosition:function(){var e=A.current,t=e.element,i=e.orig,o={},s=50,n=50,r=e.hPadding,a=e.wPadding,l=A.getViewport();return!i&&e.isDom&&t.is(":visible")&&((i=t.find("img:first")).length||(i=t)),p(i)?(o=i.offset(),i.is("img")&&(s=i.outerWidth(),n=i.outerHeight())):(o.top=l.y+(l.h-n)*e.topRatio,o.left=l.x+(l.w-s)*e.leftRatio),("fixed"===A.wrap.css("position")||e.locked)&&(o.top-=l.y,o.left-=l.x),{top:P(o.top-r*e.topRatio),left:P(o.left-a*e.leftRatio),width:P(s+a),height:P(n+r)}},step:function(e,t){var i,o,s=t.prop,n=(o=A.current).wrapSpace,r=o.skinSpace;"width"!==s&&"height"!==s||(i=t.end===t.start?1:(e-t.start)/(t.end-t.start),A.isClosing&&(i=1-i),o=e-(o="width"===s?o.wPadding:o.hPadding),A.skin[s](H("width"===s?o:o-n*i)),A.inner[s](H("width"===s?o:o-n*i-r*i)))},zoomIn:function(){var e=A.current,t=e.pos,i=e.openEffect,o="elastic"===i,s=$.extend({opacity:1},t);delete s.position,o?(t=this.getOrigPosition(),e.openOpacity&&(t.opacity=.1)):"fade"===i&&(t.opacity=.1),A.wrap.css(t).animate(s,{duration:"none"===i?0:e.openSpeed,easing:e.openEasing,step:o?this.step:null,complete:A._afterZoomIn})},zoomOut:function(){var e=A.current,t=e.closeEffect,i="elastic"===t,o={opacity:.1};i&&(o=this.getOrigPosition(),e.closeOpacity&&(o.opacity=.1)),A.wrap.animate(o,{duration:"none"===t?0:e.closeSpeed,easing:e.closeEasing,step:i?this.step:null,complete:A._afterZoomOut})},changeIn:function(){var e,t=A.current,i=t.nextEffect,o=t.pos,s={opacity:1},n=A.direction;o.opacity=.1,"elastic"===i&&(s[e="down"===n||"up"===n?"top":"left"]="down"===n||"right"===n?(o[e]=P(H(o[e])-200),"+=200px"):(o[e]=P(H(o[e])+200),"-=200px")),"none"===i?A._afterZoomIn():A.wrap.css(o).animate(s,{duration:t.nextSpeed,easing:t.nextEasing,complete:A._afterZoomIn})},changeOut:function(){var e=A.previous,t=e.prevEffect,i={opacity:.1},o=A.direction;"elastic"===t&&(i["down"===o||"up"===o?"top":"left"]=("up"===o||"left"===o?"-":"+")+"=200px"),e.wrap.animate(i,{duration:"none"===t?0:e.prevSpeed,easing:e.prevEasing,complete:function(){$(this).trigger("onReset").remove()}})}},A.helpers.overlay={defaults:{closeClick:!0,speedOut:200,showEarly:!0,css:{},locked:!l,fixed:!0},overlay:null,fixed:!1,el:$("html"),create:function(e){e=$.extend({},this.defaults,e),this.overlay&&this.close(),this.overlay=$('<div class="fancybox-overlay"></div>').appendTo(A.coming?A.coming.parent:e.parent),this.fixed=!1,e.fixed&&A.defaults.fixed&&(this.overlay.addClass("fancybox-overlay-fixed"),this.fixed=!0)},open:function(e){var t=this;e=$.extend({},this.defaults,e),this.overlay?this.overlay.unbind(".overlay").width("auto").height("auto"):this.create(e),this.fixed||(n.bind("resize.overlay",$.proxy(this.update,this)),this.update()),e.closeClick&&this.overlay.bind("click.overlay",function(e){if($(e.target).hasClass("fancybox-overlay"))return A.isActive?A.close():t.close(),!1}),this.overlay.css(e.css).show()},close:function(){var e,t;n.unbind("resize.overlay"),this.el.hasClass("fancybox-lock")&&($(".fancybox-margin").removeClass("fancybox-margin"),e=n.scrollTop(),t=n.scrollLeft(),this.el.removeClass("fancybox-lock"),n.scrollTop(e).scrollLeft(t)),$(".fancybox-overlay").remove().hide(),$.extend(this,{overlay:null,fixed:!1})},update:function(){var e,t="100%";this.overlay.width(t).height("100%"),r?(e=Math.max(i.documentElement.offsetWidth,i.body.offsetWidth),d.width()>e&&(t=d.width())):d.width()>n.width()&&(t=d.width()),this.overlay.width(t).height(d.height())},onReady:function(e,t){var i=this.overlay;$(".fancybox-overlay").stop(!0,!0),i||this.create(e),e.locked&&this.fixed&&t.fixed&&(i||(this.margin=d.height()>n.height()&&$("html").css("margin-right").replace("px","")),t.locked=this.overlay.append(t.wrap),t.fixed=!1),!0===e.showEarly&&this.beforeShow.apply(this,arguments)},beforeShow:function(e,t){var i,o;t.locked&&(!1!==this.margin&&($("*").filter(function(){return"fixed"===$(this).css("position")&&!$(this).hasClass("fancybox-overlay")&&!$(this).hasClass("fancybox-wrap")}).addClass("fancybox-margin"),this.el.addClass("fancybox-margin")),i=n.scrollTop(),o=n.scrollLeft(),this.el.addClass("fancybox-lock"),n.scrollTop(i).scrollLeft(o)),this.open(e)},onUpdate:function(){this.fixed||this.update()},afterClose:function(e){this.overlay&&!A.coming&&this.overlay.fadeOut(e.speedOut,$.proxy(this.close,this))}},A.helpers.title={defaults:{type:"float",position:"bottom"},beforeShow:function(e){var t=A.current,i=t.title,o=e.type;if($.isFunction(i)&&(i=i.call(t.element,t)),h(i)&&""!==$.trim(i)){switch(t=$('<div class="fancybox-title fancybox-title-'+o+'-wrap">'+i+"</div>"),o){case"inside":o=A.skin;break;case"outside":o=A.wrap;break;case"over":o=A.inner;break;default:o=A.skin,t.appendTo("body"),r&&t.width(t.width()),t.wrapInner('<span class="child"></span>'),A.current.margin[2]+=Math.abs(H(t.css("margin-bottom")))}t["top"===e.position?"prependTo":"appendTo"](o)}}},$.fn.fancybox=function(n){var r,a=$(this),l=this.selector||"",e=function(e){var t,i,o=$(this).blur(),s=r;!e.ctrlKey&&!e.altKey&&!e.shiftKey&&!e.metaKey&&!o.is(".fancybox-wrap")&&(t=n.groupAttr||"data-fancybox-group",(i=o.attr(t))||(t="rel",i=o.get(0)[t]),i&&""!==i&&"nofollow"!==i&&(s=(o=(o=l.length?$(l):a).filter("["+t+'="'+i+'"]')).index(this)),n.index=s,!1!==A.open(o,n)&&e.preventDefault())};return r=(n=n||{}).index||0,l&&!1!==n.live?d.undelegate(l,"click.fb-start").delegate(l+":not('.fancybox-item, .fancybox-nav')","click.fb-start",e):a.unbind("click.fb-start").bind("click.fb-start",e),this.filter("[data-fancybox-start=1]").trigger("click"),this},d.ready(function(){var e,t;if($.scrollbarWidth===c&&($.scrollbarWidth=function(){var e=$('<div style="width:50px;height:50px;overflow:auto"><div/></div>').appendTo("body"),t=(t=e.children()).innerWidth()-t.height(99).innerWidth();return e.remove(),t}),$.support.fixedPosition===c){e=$.support;var i=20===(t=$('<div style="position:fixed;top:20px;"></div>').appendTo("body"))[0].offsetTop||15===t[0].offsetTop;t.remove(),e.fixedPosition=i}$.extend(A.defaults,{scrollbarWidth:$.scrollbarWidth(),fixed:$.support.fixedPosition,parent:$("body")}),e=$(o).width(),s.addClass("fancybox-lock-test"),t=$(o).width(),s.removeClass("fancybox-lock-test"),$("<style type='text/css'>.fancybox-margin{margin-right:"+(t-e)+"px;}</style>").appendTo("head")})}(window,document,jQuery),jQuery(function(){initAnchors()}),function(d,e){var s,n,r,c=d(window),a="onwheel"in document||9<=document.documentMode?"wheel":"mousewheel DOMMouseScroll";function o(e,t,i){var o;document.body&&(t="number"==typeof t?{duration:t}:t||{},s=s||d("html, body"),o=t.container||s,"number"==typeof e&&(e={top:e}),n&&r&&n.off(a,r),t.wheelBehavior&&"none"!==t.wheelBehavior&&(r=function(e){"stop"===t.wheelBehavior?(o.off(a,r),o.stop()):"ignore"===t.wheelBehavior&&e.preventDefault()},n=o.on(a,r)),o.stop().animate({scrollLeft:e.left,scrollTop:e.top},t.duration,function(){r&&o.off(a,r),d.isFunction(i)&&i()}))}function t(e){this.options=d.extend({anchorLinks:'a[href^="#"]',container:null,extraOffset:null,activeClasses:null,easing:"swing",animMode:"duration",animDuration:800,animSpeed:1500,anchorActiveClass:"anchor-active",sectionActiveClass:"section-active",wheelBehavior:"stop",useNativeAnchorScrolling:!1},e),this.init()}t.prototype={init:function(){this.initStructure(),this.attachEvents(),this.isInit=!0},initStructure:function(){var e=this;this.container=this.options.container?d(this.options.container):d("html,body"),this.scrollContainer=this.options.container?this.container:c,this.anchorLinks=jQuery(this.options.anchorLinks).filter(function(){return jQuery(e.getAnchorTarget(jQuery(this))).length})},getId:function(e){try{return"#"+e.replace(/^.*?(#|$)/,"")}catch(e){return null}},getAnchorTarget:function(e){var t=this.getId(d(e).attr("href"));return d(1<t.length?t:"html")},getTargetOffset:function(e){var t=e.offset().top;return this.options.container&&(t-=this.container.offset().top-this.container.prop("scrollTop")),"number"==typeof this.options.extraOffset?t-=this.options.extraOffset:"function"==typeof this.options.extraOffset&&(t-=this.options.extraOffset(e)),{top:t}},attachEvents:function(){var t=this;if(this.options.activeClasses&&this.anchorLinks.length){this.anchorData=[];for(var e=0;e<this.anchorLinks.length;e++){var i=jQuery(this.anchorLinks[e]),o=t.getAnchorTarget(i),s=null;d.each(t.anchorData,function(e,t){t.block[0]===o[0]&&(s=t)}),s?s.link=s.link.add(i):t.anchorData.push({link:i,block:o})}this.resizeHandler=function(){t.isInit&&t.recalculateOffsets()},this.scrollHandler=function(){t.refreshActiveClass()},this.recalculateOffsets(),this.scrollContainer.on("scroll",this.scrollHandler),c.on("resize load orientationchange refreshAnchor",this.resizeHandler)}this.clickHandler=function(e){t.onClick(e)},this.options.useNativeAnchorScrolling||this.anchorLinks.on("click",this.clickHandler)},recalculateOffsets:function(){var i=this;d.each(this.anchorData,function(e,t){t.offset=i.getTargetOffset(t.block),t.height=t.block.outerHeight()}),this.refreshActiveClass()},toggleActiveClass:function(e,t,i){e.toggleClass(this.options.anchorActiveClass,i),t.toggleClass(this.options.sectionActiveClass,i)},refreshActiveClass:function(){var s=this,n=!1,r=this.container.prop("scrollHeight"),a=this.scrollContainer.height(),l=this.options.container?this.container.prop("scrollTop"):c.scrollTop();this.options.customScrollHandler?this.options.customScrollHandler.call(this,l,this.anchorData):(this.anchorData.sort(function(e,t){return e.offset.top-t.offset.top}),d.each(this.anchorData,function(e){var t=s.anchorData.length-e-1,i=s.anchorData[t],o="parent"===s.options.activeClasses?i.link.parent():i.link;r-a<=l?t===s.anchorData.length-1?s.toggleActiveClass(o,i.block,!0):s.toggleActiveClass(o,i.block,!1):!n&&(l>=i.offset.top-1||0===t)?(n=!0,s.toggleActiveClass(o,i.block,!0)):s.toggleActiveClass(o,i.block,!1)}))},calculateScrollDuration:function(e){return"speed"===this.options.animMode?Math.abs(this.scrollContainer.scrollTop()-e.top)/this.options.animSpeed*1e3:this.options.animDuration},onClick:function(e){var t=this.getAnchorTarget(e.currentTarget),i=this.getTargetOffset(t);e.preventDefault(),o(i,{container:this.container,wheelBehavior:this.options.wheelBehavior,duration:this.calculateScrollDuration(i)}),this.makeCallback("onBeforeScroll",e.currentTarget)},makeCallback:function(e){if("function"==typeof this.options[e]){var t=Array.prototype.slice.call(arguments);t.shift(),this.options[e].apply(this,t)}},destroy:function(){var s=this;this.isInit=!1,this.options.activeClasses&&(c.off("resize load orientationchange refreshAnchor",this.resizeHandler),this.scrollContainer.off("scroll",this.scrollHandler),d.each(this.anchorData,function(e){var t=s.anchorData.length-e-1,i=s.anchorData[t],o="parent"===s.options.activeClasses?i.link.parent():i.link;s.toggleActiveClass(o,i.block,!1)})),this.anchorLinks.off("click",this.clickHandler)}},d.extend(t,{scrollTo:function(e,t,i){o(e,t,i)}}),e.SmoothScroll=t}(jQuery,this),$(function(){var e=$("body");$(window).scroll(function(){0<$(window).scrollTop()?e.addClass("scroll"):e.removeClass("scroll")})}),$(document).on("click","button.plus, button.minus",function(){var e=$(this).parent(".quantity").find(".qty"),t=parseFloat(e.val()),i=parseFloat(e.attr("max")),o=parseFloat(e.attr("min")),s=parseFloat(e.attr("step"));$(this).is(".plus")?i&&i<=t?e.val(i).change():e.val(t+s).change():o&&t<=o?e.val(o).change():1<t&&e.val(t-s).change()}),(new WOW).init(),$(function(){$(".menu .menu-item-has-children a").on("click",function(){$(this).parents(".menu-item-has-children ").toggleClass("active")}),$(".nav-opener").on("click",function(e){e.preventDefault(),$("body").toggleClass("nav-active")})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiaW5pdExpZ2h0Ym94IiwialF1ZXJ5IiwiZmFuY3lib3giLCJsb29wIiwiaGVscGVycyIsIm92ZXJsYXkiLCJjc3MiLCJiYWNrZ3JvdW5kIiwiYWZ0ZXJMb2FkIiwiY3VycmVudCIsInByZXZpb3VzIiwiaHJlZiIsImluZGV4T2YiLCJmaW5kIiwib2ZmIiwib24iLCJlIiwicHJldmVudERlZmF1bHQiLCJjbG9zZSIsImluaXRBbmNob3JzIiwiU21vb3RoU2Nyb2xsIiwiYW5jaG9yTGlua3MiLCJleHRyYU9mZnNldCIsIndoZWVsQmVoYXZpb3IiLCJhIiwiYiIsImMiLCJhcHBseSIsImFyZ3VtZW50cyIsInByb3RvdHlwZSIsImV4dGVuZCIsImQiLCJpc01vYmlsZSIsInRlc3QiLCJ0aGlzIiwiV2Vha01hcCIsImtleXMiLCJ2YWx1ZXMiLCJnZXQiLCJmIiwibGVuZ3RoIiwic2V0IiwiZyIsInB1c2giLCJXT1ciLCJzY3JvbGxDYWxsYmFjayIsInNjcm9sbEhhbmRsZXIiLCJzdGFydCIsInNjcm9sbGVkIiwiY29uZmlnIiwidXRpbCIsImRlZmF1bHRzIiwiYW5pbWF0aW9uTmFtZUNhY2hlIiwiYm94Q2xhc3MiLCJhbmltYXRlQ2xhc3MiLCJvZmZzZXQiLCJtb2JpbGUiLCJpbml0IiwiZWxlbWVudCIsIndpbmRvdyIsImRvY3VtZW50IiwiZG9jdW1lbnRFbGVtZW50IiwicmVhZHlTdGF0ZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJib3hlcyIsImdldEVsZW1lbnRzQnlDbGFzc05hbWUiLCJkaXNhYmxlZCIsInJlc2V0U3R5bGUiLCJhcHBseVN0eWxlIiwiaW50ZXJ2YWwiLCJzZXRJbnRlcnZhbCIsInN0b3AiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiY2xlYXJJbnRlcnZhbCIsInNob3ciLCJjbGFzc05hbWUiLCJnZXRBdHRyaWJ1dGUiLCJhbmltYXRlIiwiY3VzdG9tU3R5bGUiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJzZXRBdHRyaWJ1dGUiLCJjYWNoZUFuaW1hdGlvbk5hbWUiLCJzdHlsZSIsInZpc2liaWxpdHkiLCJ2ZW5kb3JTZXQiLCJhbmltYXRpb25EdXJhdGlvbiIsImFuaW1hdGlvbkRlbGF5IiwiYW5pbWF0aW9uSXRlcmF0aW9uQ291bnQiLCJhbmltYXRpb25OYW1lIiwiY2FjaGVkQW5pbWF0aW9uTmFtZSIsInZlbmRvcnMiLCJoIiwiY2hhckF0IiwidG9VcHBlckNhc2UiLCJzdWJzdHIiLCJjYWxsIiwidmVuZG9yQ1NTIiwiZ2V0Q29tcHV0ZWRTdHlsZSIsImdldFByb3BlcnR5Q1NTVmFsdWUiLCJjc3NUZXh0IiwiZ2V0UHJvcGVydHlWYWx1ZSIsImlzVmlzaWJsZSIsIm9mZnNldFRvcCIsInBhcmVudE5vZGUiLCJvZmZzZXRQYXJlbnQiLCJwYWdlWU9mZnNldCIsImNsaWVudEhlaWdodCIsIl91dGlsIiwibmF2aWdhdG9yIiwidXNlckFnZW50IiwiZmFjdG9yeSIsImRlZmluZSIsImFtZCIsImV4cG9ydHMiLCJtb2R1bGUiLCJyZXF1aXJlIiwiJCIsImluc3RhbmNlVWlkIiwiU2xpY2siLCJzZXR0aW5ncyIsImRhdGFTZXR0aW5ncyIsIl8iLCJhY2Nlc3NpYmlsaXR5IiwiYWRhcHRpdmVIZWlnaHQiLCJhcHBlbmRBcnJvd3MiLCJhcHBlbmREb3RzIiwiYXJyb3dzIiwiYXNOYXZGb3IiLCJwcmV2QXJyb3ciLCJuZXh0QXJyb3ciLCJhdXRvcGxheSIsImF1dG9wbGF5U3BlZWQiLCJjZW50ZXJNb2RlIiwiY2VudGVyUGFkZGluZyIsImNzc0Vhc2UiLCJjdXN0b21QYWdpbmciLCJzbGlkZXIiLCJpIiwidGV4dCIsImRvdHMiLCJkb3RzQ2xhc3MiLCJkcmFnZ2FibGUiLCJlYXNpbmciLCJlZGdlRnJpY3Rpb24iLCJmYWRlIiwiZm9jdXNPblNlbGVjdCIsImZvY3VzT25DaGFuZ2UiLCJpbmZpbml0ZSIsImluaXRpYWxTbGlkZSIsImxhenlMb2FkIiwibW9iaWxlRmlyc3QiLCJwYXVzZU9uSG92ZXIiLCJwYXVzZU9uRm9jdXMiLCJwYXVzZU9uRG90c0hvdmVyIiwicmVzcG9uZFRvIiwicmVzcG9uc2l2ZSIsInJvd3MiLCJydGwiLCJzbGlkZSIsInNsaWRlc1BlclJvdyIsInNsaWRlc1RvU2hvdyIsInNsaWRlc1RvU2Nyb2xsIiwic3BlZWQiLCJzd2lwZSIsInN3aXBlVG9TbGlkZSIsInRvdWNoTW92ZSIsInRvdWNoVGhyZXNob2xkIiwidXNlQ1NTIiwidXNlVHJhbnNmb3JtIiwidmFyaWFibGVXaWR0aCIsInZlcnRpY2FsIiwidmVydGljYWxTd2lwaW5nIiwid2FpdEZvckFuaW1hdGUiLCJ6SW5kZXgiLCJpbml0aWFscyIsImFuaW1hdGluZyIsImRyYWdnaW5nIiwiYXV0b1BsYXlUaW1lciIsImN1cnJlbnREaXJlY3Rpb24iLCJjdXJyZW50TGVmdCIsImN1cnJlbnRTbGlkZSIsImRpcmVjdGlvbiIsIiRkb3RzIiwibGlzdFdpZHRoIiwibGlzdEhlaWdodCIsImxvYWRJbmRleCIsIiRuZXh0QXJyb3ciLCIkcHJldkFycm93Iiwic2Nyb2xsaW5nIiwic2xpZGVDb3VudCIsInNsaWRlV2lkdGgiLCIkc2xpZGVUcmFjayIsIiRzbGlkZXMiLCJzbGlkaW5nIiwic2xpZGVPZmZzZXQiLCJzd2lwZUxlZnQiLCJzd2lwaW5nIiwiJGxpc3QiLCJ0b3VjaE9iamVjdCIsInRyYW5zZm9ybXNFbmFibGVkIiwidW5zbGlja2VkIiwiYWN0aXZlQnJlYWtwb2ludCIsImFuaW1UeXBlIiwiYW5pbVByb3AiLCJicmVha3BvaW50cyIsImJyZWFrcG9pbnRTZXR0aW5ncyIsImNzc1RyYW5zaXRpb25zIiwiZm9jdXNzZWQiLCJpbnRlcnJ1cHRlZCIsImhpZGRlbiIsInBhdXNlZCIsInBvc2l0aW9uUHJvcCIsInJvd0NvdW50Iiwic2hvdWxkQ2xpY2siLCIkc2xpZGVyIiwiJHNsaWRlc0NhY2hlIiwidHJhbnNmb3JtVHlwZSIsInRyYW5zaXRpb25UeXBlIiwidmlzaWJpbGl0eUNoYW5nZSIsIndpbmRvd1dpZHRoIiwid2luZG93VGltZXIiLCJkYXRhIiwib3B0aW9ucyIsIm9yaWdpbmFsU2V0dGluZ3MiLCJtb3pIaWRkZW4iLCJ3ZWJraXRIaWRkZW4iLCJhdXRvUGxheSIsInByb3h5IiwiYXV0b1BsYXlDbGVhciIsImF1dG9QbGF5SXRlcmF0b3IiLCJjaGFuZ2VTbGlkZSIsImNsaWNrSGFuZGxlciIsInNlbGVjdEhhbmRsZXIiLCJzZXRQb3NpdGlvbiIsInN3aXBlSGFuZGxlciIsImRyYWdIYW5kbGVyIiwia2V5SGFuZGxlciIsImh0bWxFeHByIiwicmVnaXN0ZXJCcmVha3BvaW50cyIsImFjdGl2YXRlQURBIiwiYXR0ciIsImFyaWEtaGlkZGVuIiwidGFiaW5kZXgiLCJhZGRTbGlkZSIsInNsaWNrQWRkIiwibWFya3VwIiwiaW5kZXgiLCJhZGRCZWZvcmUiLCJ1bmxvYWQiLCJhcHBlbmRUbyIsImluc2VydEJlZm9yZSIsImVxIiwiaW5zZXJ0QWZ0ZXIiLCJwcmVwZW5kVG8iLCJjaGlsZHJlbiIsImRldGFjaCIsImFwcGVuZCIsImVhY2giLCJyZWluaXQiLCJhbmltYXRlSGVpZ2h0IiwidGFyZ2V0SGVpZ2h0Iiwib3V0ZXJIZWlnaHQiLCJoZWlnaHQiLCJhbmltYXRlU2xpZGUiLCJ0YXJnZXRMZWZ0IiwiY2FsbGJhY2siLCJhbmltUHJvcHMiLCJsZWZ0IiwidG9wIiwiYW5pbVN0YXJ0IiwiZHVyYXRpb24iLCJzdGVwIiwibm93IiwiTWF0aCIsImNlaWwiLCJjb21wbGV0ZSIsImFwcGx5VHJhbnNpdGlvbiIsInNldFRpbWVvdXQiLCJkaXNhYmxlVHJhbnNpdGlvbiIsImdldE5hdlRhcmdldCIsIm5vdCIsInRhcmdldCIsInNsaWNrIiwic2xpZGVIYW5kbGVyIiwidHJhbnNpdGlvbiIsInNsaWRlVG8iLCJidWlsZEFycm93cyIsImFkZENsYXNzIiwicmVtb3ZlQ2xhc3MiLCJyZW1vdmVBdHRyIiwiYWRkIiwiYXJpYS1kaXNhYmxlZCIsImJ1aWxkRG90cyIsImRvdCIsImdldERvdENvdW50IiwiZmlyc3QiLCJidWlsZE91dCIsIndyYXBBbGwiLCJwYXJlbnQiLCJ3cmFwIiwic2V0dXBJbmZpbml0ZSIsInVwZGF0ZURvdHMiLCJzZXRTbGlkZUNsYXNzZXMiLCJidWlsZFJvd3MiLCJuZXdTbGlkZXMiLCJudW1PZlNsaWRlcyIsIm9yaWdpbmFsU2xpZGVzIiwic2xpZGVzUGVyU2VjdGlvbiIsImNyZWF0ZURvY3VtZW50RnJhZ21lbnQiLCJjcmVhdGVFbGVtZW50Iiwicm93IiwiYXBwZW5kQ2hpbGQiLCJlbXB0eSIsIndpZHRoIiwiZGlzcGxheSIsImNoZWNrUmVzcG9uc2l2ZSIsImluaXRpYWwiLCJmb3JjZVVwZGF0ZSIsImJyZWFrcG9pbnQiLCJ0YXJnZXRCcmVha3BvaW50IiwicmVzcG9uZFRvV2lkdGgiLCJ0cmlnZ2VyQnJlYWtwb2ludCIsInNsaWRlcldpZHRoIiwiaW5uZXJXaWR0aCIsIm1pbiIsImhhc093blByb3BlcnR5IiwidW5zbGljayIsInJlZnJlc2giLCJ0cmlnZ2VyIiwiZXZlbnQiLCJkb250QW5pbWF0ZSIsImluZGV4T2Zmc2V0IiwiJHRhcmdldCIsImN1cnJlbnRUYXJnZXQiLCJpcyIsImNsb3Nlc3QiLCJtZXNzYWdlIiwiY2hlY2tOYXZpZ2FibGUiLCJuYXZpZ2FibGVzIiwicHJldk5hdmlnYWJsZSIsImdldE5hdmlnYWJsZUluZGV4ZXMiLCJuIiwiY2xlYW5VcEV2ZW50cyIsImludGVycnVwdCIsImNsZWFuVXBTbGlkZUV2ZW50cyIsIm9yaWVudGF0aW9uQ2hhbmdlIiwicmVzaXplIiwiY2xlYW5VcFJvd3MiLCJzdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24iLCJzdG9wUHJvcGFnYXRpb24iLCJkZXN0cm95IiwicmVtb3ZlIiwiZmFkZVNsaWRlIiwic2xpZGVJbmRleCIsIm9wYWNpdHkiLCJmYWRlU2xpZGVPdXQiLCJmaWx0ZXJTbGlkZXMiLCJzbGlja0ZpbHRlciIsImZpbHRlciIsImZvY3VzSGFuZGxlciIsIiRzZiIsImdldEN1cnJlbnQiLCJzbGlja0N1cnJlbnRTbGlkZSIsImJyZWFrUG9pbnQiLCJjb3VudGVyIiwicGFnZXJRdHkiLCJnZXRMZWZ0IiwidmVydGljYWxIZWlnaHQiLCJ0YXJnZXRTbGlkZSIsImNvZWYiLCJ2ZXJ0aWNhbE9mZnNldCIsImZsb29yIiwib2Zmc2V0TGVmdCIsIm91dGVyV2lkdGgiLCJnZXRPcHRpb24iLCJzbGlja0dldE9wdGlvbiIsIm9wdGlvbiIsIm1heCIsImluZGV4ZXMiLCJnZXRTbGljayIsImdldFNsaWRlQ291bnQiLCJzd2lwZWRTbGlkZSIsImNlbnRlck9mZnNldCIsImFicyIsImdvVG8iLCJzbGlja0dvVG8iLCJwYXJzZUludCIsImNyZWF0aW9uIiwiaGFzQ2xhc3MiLCJzZXRQcm9wcyIsInN0YXJ0TG9hZCIsImxvYWRTbGlkZXIiLCJpbml0aWFsaXplRXZlbnRzIiwidXBkYXRlQXJyb3dzIiwiaW5pdEFEQSIsIm51bURvdEdyb3VwcyIsInRhYkNvbnRyb2xJbmRleGVzIiwidmFsIiwic2xpZGVDb250cm9sSW5kZXgiLCJyb2xlIiwiaWQiLCJhcmlhQnV0dG9uQ29udHJvbCIsImFyaWEtZGVzY3JpYmVkYnkiLCJtYXBwZWRTbGlkZUluZGV4IiwiYXJpYS1jb250cm9scyIsImFyaWEtbGFiZWwiLCJhcmlhLXNlbGVjdGVkIiwiZW5kIiwiaW5pdEFycm93RXZlbnRzIiwiaW5pdERvdEV2ZW50cyIsImluaXRTbGlkZUV2ZW50cyIsImFjdGlvbiIsImluaXRVSSIsInRhZ05hbWUiLCJtYXRjaCIsImtleUNvZGUiLCJsb2FkUmFuZ2UiLCJyYW5nZVN0YXJ0IiwicmFuZ2VFbmQiLCJsb2FkSW1hZ2VzIiwiaW1hZ2VzU2NvcGUiLCJpbWFnZSIsImltYWdlU291cmNlIiwiaW1hZ2VTcmNTZXQiLCJpbWFnZVNpemVzIiwiaW1hZ2VUb0xvYWQiLCJvbmxvYWQiLCJvbmVycm9yIiwic3JjIiwic2xpY2UiLCJwcmV2U2xpZGUiLCJuZXh0U2xpZGUiLCJwcm9ncmVzc2l2ZUxhenlMb2FkIiwibmV4dCIsInNsaWNrTmV4dCIsInBhdXNlIiwic2xpY2tQYXVzZSIsInBsYXkiLCJzbGlja1BsYXkiLCJwb3N0U2xpZGUiLCJmb2N1cyIsInByZXYiLCJzbGlja1ByZXYiLCJ0cnlDb3VudCIsIiRpbWdzVG9Mb2FkIiwiaW5pdGlhbGl6aW5nIiwibGFzdFZpc2libGVJbmRleCIsImN1cnJlbnRCcmVha3BvaW50IiwibCIsInJlc3BvbnNpdmVTZXR0aW5ncyIsInR5cGUiLCJzcGxpY2UiLCJzb3J0IiwiY2xlYXJUaW1lb3V0Iiwid2luZG93RGVsYXkiLCJyZW1vdmVTbGlkZSIsInNsaWNrUmVtb3ZlIiwicmVtb3ZlQmVmb3JlIiwicmVtb3ZlQWxsIiwic2V0Q1NTIiwicG9zaXRpb24iLCJ4IiwieSIsInBvc2l0aW9uUHJvcHMiLCJzZXREaW1lbnNpb25zIiwicGFkZGluZyIsInNldEZhZGUiLCJyaWdodCIsInNldEhlaWdodCIsInNldE9wdGlvbiIsInNsaWNrU2V0T3B0aW9uIiwiaXRlbSIsInZhbHVlIiwib3B0IiwiYm9keVN0eWxlIiwiYm9keSIsInVuZGVmaW5lZCIsIldlYmtpdFRyYW5zaXRpb24iLCJNb3pUcmFuc2l0aW9uIiwibXNUcmFuc2l0aW9uIiwiT1RyYW5zZm9ybSIsInBlcnNwZWN0aXZlUHJvcGVydHkiLCJ3ZWJraXRQZXJzcGVjdGl2ZSIsIk1velRyYW5zZm9ybSIsIk1velBlcnNwZWN0aXZlIiwid2Via2l0VHJhbnNmb3JtIiwibXNUcmFuc2Zvcm0iLCJ0cmFuc2Zvcm0iLCJhbGxTbGlkZXMiLCJyZW1haW5kZXIiLCJldmVuQ29lZiIsImluZmluaXRlQ291bnQiLCJjbG9uZSIsInRvZ2dsZSIsInRhcmdldEVsZW1lbnQiLCJwYXJlbnRzIiwic3luYyIsImFuaW1TbGlkZSIsIm9sZFNsaWRlIiwic2xpZGVMZWZ0IiwibmF2VGFyZ2V0IiwiaGlkZSIsInN3aXBlRGlyZWN0aW9uIiwieERpc3QiLCJ5RGlzdCIsInIiLCJzd2lwZUFuZ2xlIiwic3RhcnRYIiwiY3VyWCIsInN0YXJ0WSIsImN1clkiLCJhdGFuMiIsInJvdW5kIiwiUEkiLCJzd2lwZUVuZCIsInN3aXBlTGVuZ3RoIiwiZWRnZUhpdCIsIm1pblN3aXBlIiwiZmluZ2VyQ291bnQiLCJvcmlnaW5hbEV2ZW50IiwidG91Y2hlcyIsInN3aXBlU3RhcnQiLCJzd2lwZU1vdmUiLCJjdXJMZWZ0IiwicG9zaXRpb25PZmZzZXQiLCJ2ZXJ0aWNhbFN3aXBlTGVuZ3RoIiwicGFnZVgiLCJjbGllbnRYIiwicGFnZVkiLCJjbGllbnRZIiwic3FydCIsInBvdyIsInVuZmlsdGVyU2xpZGVzIiwic2xpY2tVbmZpbHRlciIsImZyb21CcmVha3BvaW50IiwiZm4iLCJyZXQiLCJhcmdzIiwiQXJyYXkiLCJhcnJvdyIsIkciLCJ2IiwiSiIsInAiLCJvcGVuIiwiSSIsIkIiLCJzIiwiY3JlYXRlVG91Y2giLCJ0IiwicSIsIkUiLCJnZXRWaWV3cG9ydCIsInciLCJ2ZXJzaW9uIiwibWFyZ2luIiwibWluV2lkdGgiLCJtaW5IZWlnaHQiLCJtYXhXaWR0aCIsIm1heEhlaWdodCIsInBpeGVsUmF0aW8iLCJhdXRvU2l6ZSIsImF1dG9IZWlnaHQiLCJhdXRvV2lkdGgiLCJhdXRvUmVzaXplIiwiYXV0b0NlbnRlciIsImZpdFRvVmlldyIsImFzcGVjdFJhdGlvIiwidG9wUmF0aW8iLCJsZWZ0UmF0aW8iLCJ3cmFwQ1NTIiwiY2xvc2VCdG4iLCJjbG9zZUNsaWNrIiwibmV4dENsaWNrIiwibW91c2VXaGVlbCIsInBsYXlTcGVlZCIsInByZWxvYWQiLCJtb2RhbCIsImFqYXgiLCJkYXRhVHlwZSIsImhlYWRlcnMiLCJYLWZhbmN5Qm94IiwiaWZyYW1lIiwic3dmIiwid21vZGUiLCJhbGxvd2Z1bGxzY3JlZW4iLCJhbGxvd3NjcmlwdGFjY2VzcyIsIjEzIiwiMzQiLCIzOSIsIjQwIiwiOCIsIjMzIiwiMzciLCIzOCIsInNjcm9sbE91dHNpZGUiLCJjb250ZW50IiwidGl0bGUiLCJ0cGwiLCJlcnJvciIsIm9wZW5FZmZlY3QiLCJvcGVuU3BlZWQiLCJvcGVuRWFzaW5nIiwib3Blbk9wYWNpdHkiLCJvcGVuTWV0aG9kIiwiY2xvc2VFZmZlY3QiLCJjbG9zZVNwZWVkIiwiY2xvc2VFYXNpbmciLCJjbG9zZU9wYWNpdHkiLCJjbG9zZU1ldGhvZCIsIm5leHRFZmZlY3QiLCJuZXh0U3BlZWQiLCJuZXh0RWFzaW5nIiwibmV4dE1ldGhvZCIsInByZXZFZmZlY3QiLCJwcmV2U3BlZWQiLCJwcmV2RWFzaW5nIiwicHJldk1ldGhvZCIsIm9uQ2FuY2VsIiwibm9vcCIsImJlZm9yZUxvYWQiLCJiZWZvcmVTaG93IiwiYWZ0ZXJTaG93IiwiYmVmb3JlQ2hhbmdlIiwiYmVmb3JlQ2xvc2UiLCJhZnRlckNsb3NlIiwiZ3JvdXAiLCJvcHRzIiwiY29taW5nIiwiaXNBY3RpdmUiLCJpc09wZW4iLCJpc09wZW5lZCIsInNraW4iLCJvdXRlciIsImlubmVyIiwicGxheWVyIiwidGltZXIiLCJhamF4TG9hZCIsImltZ1ByZWxvYWQiLCJ0cmFuc2l0aW9ucyIsImlzUGxhaW5PYmplY3QiLCJpc0FycmF5IiwiaiIsIm0iLCJrIiwibm9kZVR5cGUiLCJpc0RvbSIsIm1ldGFkYXRhIiwicHJvcCIsImlzSW1hZ2UiLCJpc1NXRiIsInNwbGl0Iiwic2hpZnQiLCJyZXBsYWNlIiwic2VsZWN0b3IiLCJfc3RhcnQiLCJjYW5jZWwiLCJoaWRlTG9hZGluZyIsImFib3J0IiwiX2FmdGVyWm9vbU91dCIsInVuYmluZEV2ZW50cyIsImlzQ2xvc2luZyIsInVuYmluZCIsImJpbmQiLCJvbkNhbmNlbC5wbGF5ZXIgYmVmb3JlQ2xvc2UucGxheWVyIiwib25VcGRhdGUucGxheWVyIiwiYmVmb3JlTG9hZC5wbGF5ZXIiLCJqdW1wdG8iLCJyb3V0ZXIiLCJyZXBvc2l0aW9uIiwiX2dldFBvc2l0aW9uIiwicG9zIiwiZGltIiwidXBkYXRlIiwiX3NldERpbWVuc2lvbiIsImNhblNocmluayIsInNob3dMb2FkaW5nIiwiY2xpY2siLCJ3aGljaCIsImZpeGVkIiwibG9ja2VkIiwic2Nyb2xsTGVmdCIsInNjcm9sbFRvcCIsImNsaWVudFdpZHRoIiwiaW5uZXJIZWlnaHQiLCJiaW5kRXZlbnRzIiwic3JjRWxlbWVudCIsImN0cmxLZXkiLCJhbHRLZXkiLCJzaGlmdEtleSIsIm1ldGFLZXkiLCJpbkFycmF5IiwibW91c2V3aGVlbCIsIm92ZXJmbG93Iiwic2Nyb2xsV2lkdGgiLCJzY3JvbGxIZWlnaHQiLCJpc0Z1bmN0aW9uIiwiX2Vycm9yIiwiX2xvYWRJbWFnZSIsIl9sb2FkQWpheCIsIl9sb2FkSWZyYW1lIiwiX2FmdGVyTG9hZCIsImhhc0Vycm9yIiwiSW1hZ2UiLCJ1cmwiLCJzdWNjZXNzIiwiRGF0ZSIsImdldFRpbWUiLCJvbmUiLCJfcHJlbG9hZEltYWdlcyIsImh0bWwiLCJyZXBsYWNlQWxsIiwieiIsIkMiLCJBIiwiRiIsIkQiLCJIIiwidSIsInNjcm9sbGJhcldpZHRoIiwiY29udGVudFdpbmRvdyIsImxvY2F0aW9uIiwiY29udGVudHMiLCJvcmlnV2lkdGgiLCJvcmlnSGVpZ2h0IiwiY2FuRXhwYW5kIiwid1BhZGRpbmciLCJoUGFkZGluZyIsIndyYXBTcGFjZSIsInNraW5TcGFjZSIsIl9hZnRlclpvb21JbiIsImdldE9yaWdQb3NpdGlvbiIsIm9yaWciLCJ6b29tSW4iLCJ6b29tT3V0IiwiY2hhbmdlSW4iLCJjaGFuZ2VPdXQiLCJzcGVlZE91dCIsInNob3dFYXJseSIsImVsIiwiY3JlYXRlIiwib2Zmc2V0V2lkdGgiLCJvblJlYWR5Iiwib25VcGRhdGUiLCJmYWRlT3V0IiwidHJpbSIsIndyYXBJbm5lciIsImJsdXIiLCJncm91cEF0dHIiLCJsaXZlIiwidW5kZWxlZ2F0ZSIsImRlbGVnYXRlIiwicmVhZHkiLCJzdXBwb3J0IiwiZml4ZWRQb3NpdGlvbiIsInBhZ2UiLCJhY3RpdmVCbG9jayIsImFjdGl2ZVdoZWVsSGFuZGxlciIsIndpbiIsIndoZWVsRXZlbnRzIiwiZG9jdW1lbnRNb2RlIiwic2Nyb2xsVG8iLCJzY3JvbGxCbG9jayIsImNvbnRhaW5lciIsImFjdGl2ZUNsYXNzZXMiLCJhbmltTW9kZSIsImFuaW1EdXJhdGlvbiIsImFuaW1TcGVlZCIsImFuY2hvckFjdGl2ZUNsYXNzIiwic2VjdGlvbkFjdGl2ZUNsYXNzIiwidXNlTmF0aXZlQW5jaG9yU2Nyb2xsaW5nIiwiaW5pdFN0cnVjdHVyZSIsImF0dGFjaEV2ZW50cyIsImlzSW5pdCIsInNlbGYiLCJzY3JvbGxDb250YWluZXIiLCJnZXRBbmNob3JUYXJnZXQiLCJnZXRJZCIsInN0ciIsImVyciIsImxpbmsiLCJ0YXJnZXRJZCIsImdldFRhcmdldE9mZnNldCIsImJsb2NrIiwiYmxvY2tPZmZzZXQiLCJhbmNob3JEYXRhIiwidGFyZ2V0QmxvY2siLCJhbmNob3JEYXRhSXRlbSIsInJlc2l6ZUhhbmRsZXIiLCJyZWNhbGN1bGF0ZU9mZnNldHMiLCJyZWZyZXNoQWN0aXZlQ2xhc3MiLCJvbkNsaWNrIiwidG9nZ2xlQWN0aXZlQ2xhc3MiLCJhbmNob3IiLCJzdGF0ZSIsInRvZ2dsZUNsYXNzIiwiZm91bmRGbGFnIiwiY29udGFpbmVySGVpZ2h0Iiwidmlld1BvcnRIZWlnaHQiLCJjdXN0b21TY3JvbGxIYW5kbGVyIiwicmV2ZXJzZUluZGV4IiwiYW5jaG9yRWxlbWVudCIsImNhbGN1bGF0ZVNjcm9sbER1cmF0aW9uIiwidGFyZ2V0T2Zmc2V0IiwibWFrZUNhbGxiYWNrIiwibmFtZSIsImJsb2NrT3JPZmZzZXQiLCJkdXJhdGlvbk9yT3B0aW9ucyIsImhlYWRlciIsInNjcm9sbCIsInF0eSIsInBhcnNlRmxvYXQiLCJjaGFuZ2UiXSwibWFwcGluZ3MiOiJBQTYvRkEsU0FBU0EsZUFDUEMsT0FBTyxrQ0FBa0NDLFNBQVMsQ0FDaERDLE1BQU0sRUFDTkMsUUFBUyxDQUNQQyxRQUFTLENBQ1BDLElBQUssQ0FDSEMsV0FBWSx5QkFJbEJDLFVBQVcsU0FBVUMsRUFBU0MsR0FFTSxJQUE5QkQsRUFBUUUsS0FBS0MsUUFBUSxNQUN2QlgsT0FBT1EsRUFBUUUsTUFDWkUsS0FBSyxXQUNMQyxJQUFJLFlBQ0pDLEdBQUcsV0FBWSxTQUFVQyxHQUN4QkEsRUFBRUMsaUJBQ0ZoQixPQUFPQyxTQUFTZ0IsYUFtc0M1QixTQUFTQyxjQUNSLElBQUlDLGFBQWEsQ0FFaEJD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QUFTNkMsRUFBZUMsRUFBbUI5aEIsTUFLN0N4SixFQUFRN0YsYUFBZUEsRUE1UnZCLENBNlJDbkIsT0FBUWlDLE1BQ1ZrRixFQUFFLFdBRUUsSUFBSW9yQixFQUFTcHJCLEVBQUUsUUFDZkEsRUFBRXpELFFBQVE4dUIsT0FBTyxXQUdBLEVBRkFyckIsRUFBRXpELFFBQVErbUIsWUFHbkI4SCxFQUFPemdCLFNBQVMsVUFFaEJ5Z0IsRUFBT3hnQixZQUFZLGNBSS9CNUssRUFBRXhELFVBQVU3QyxHQUFHLFFBQVMsNEJBQTZCLFdBQ25ELElBQUkyeEIsRUFBTXRyQixFQUFFbEYsTUFBTXdRLE9BQU8sYUFBYTdSLEtBQUssUUFDdkNnWSxFQUFNOFosV0FBV0QsRUFBSTdaLE9BQ3JCcEIsRUFBTWtiLFdBQVdELEVBQUkxakIsS0FBSyxRQUMxQm9GLEVBQU11ZSxXQUFXRCxFQUFJMWpCLEtBQUssUUFDMUIrQixFQUFPNGhCLFdBQVdELEVBQUkxakIsS0FBSyxTQUUzQjVILEVBQUVsRixNQUFNNFMsR0FBRyxTQUNUMkMsR0FBT0EsR0FBT29CLEVBQ2hCNlosRUFBSTdaLElBQUlwQixHQUFLbWIsU0FFYkYsRUFBSTdaLElBQUlBLEVBQU05SCxHQUFNNmhCLFNBR2xCeGUsR0FBY3lFLEdBQVB6RSxFQUNUc2UsRUFBSTdaLElBQUl6RSxHQUFLd2UsU0FDRSxFQUFOL1osR0FDVDZaLEVBQUk3WixJQUFJQSxFQUFNOUgsR0FBTTZoQixZQUsxQixJQUFJaHdCLEtBQU1hLE9BRVYyRCxFQUFFLFdBRUFBLEVBQUUsbUNBQW1DckcsR0FBRyxRQUFTLFdBQy9DcUcsRUFBRWxGLE1BQU02YyxRQUFRLDRCQUE0QjRTLFlBQVksWUFJMUR2cUIsRUFBRSxlQUFlckcsR0FBRyxRQUFTLFNBQVVDLEdBQ3JDQSxFQUFFQyxpQkFDRm1HLEVBQUUsUUFBUXVxQixZQUFZIiwiZmlsZSI6Im1haW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKXt2YXIgYSxiLGM9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gYS5hcHBseShiLGFyZ3VtZW50cyl9fTthPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gYSgpe31yZXR1cm4gYS5wcm90b3R5cGUuZXh0ZW5kPWZ1bmN0aW9uKGEsYil7dmFyIGMsZDtmb3IoYyBpbiBhKWQ9YVtjXSxudWxsIT1kJiYoYltjXT1kKTtyZXR1cm4gYn0sYS5wcm90b3R5cGUuaXNNb2JpbGU9ZnVuY3Rpb24oYSl7cmV0dXJuL0FuZHJvaWR8d2ViT1N8aVBob25lfGlQYWR8aVBvZHxCbGFja0JlcnJ5fElFTW9iaWxlfE9wZXJhIE1pbmkvaS50ZXN0KGEpfSxhfSgpLGI9dGhpcy5XZWFrTWFwfHwoYj1mdW5jdGlvbigpe2Z1bmN0aW9uIGEoKXt0aGlzLmtleXM9W10sdGhpcy52YWx1ZXM9W119cmV0dXJuIGEucHJvdG90eXBlLmdldD1mdW5jdGlvbihhKXt2YXIgYixjLGQsZSxmO2ZvcihmPXRoaXMua2V5cyxiPWQ9MCxlPWYubGVuZ3RoO2U+ZDtiPSsrZClpZihjPWZbYl0sYz09PWEpcmV0dXJuIHRoaXMudmFsdWVzW2JdfSxhLnByb3RvdHlwZS5zZXQ9ZnVuY3Rpb24oYSxiKXt2YXIgYyxkLGUsZixnO2ZvcihnPXRoaXMua2V5cyxjPWU9MCxmPWcubGVuZ3RoO2Y+ZTtjPSsrZSlpZihkPWdbY10sZD09PWEpcmV0dXJuIHZvaWQodGhpcy52YWx1ZXNbY109Yik7cmV0dXJuIHRoaXMua2V5cy5wdXNoKGEpLHRoaXMudmFsdWVzLnB1c2goYil9LGF9KCkpLHRoaXMuV09XPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZChhKXtudWxsPT1hJiYoYT17fSksdGhpcy5zY3JvbGxDYWxsYmFjaz1jKHRoaXMuc2Nyb2xsQ2FsbGJhY2ssdGhpcyksdGhpcy5zY3JvbGxIYW5kbGVyPWModGhpcy5zY3JvbGxIYW5kbGVyLHRoaXMpLHRoaXMuc3RhcnQ9Yyh0aGlzLnN0YXJ0LHRoaXMpLHRoaXMuc2Nyb2xsZWQ9ITAsdGhpcy5jb25maWc9dGhpcy51dGlsKCkuZXh0ZW5kKGEsdGhpcy5kZWZhdWx0cyksdGhpcy5hbmltYXRpb25OYW1lQ2FjaGU9bmV3IGJ9cmV0dXJuIGQucHJvdG90eXBlLmRlZmF1bHRzPXtib3hDbGFzczpcIndvd1wiLGFuaW1hdGVDbGFzczpcImFuaW1hdGVkXCIsb2Zmc2V0OjAsbW9iaWxlOiEwfSxkLnByb3RvdHlwZS5pbml0PWZ1bmN0aW9uKCl7dmFyIGE7cmV0dXJuIHRoaXMuZWxlbWVudD13aW5kb3cuZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LFwiaW50ZXJhY3RpdmVcIj09PShhPWRvY3VtZW50LnJlYWR5U3RhdGUpfHxcImNvbXBsZXRlXCI9PT1hP3RoaXMuc3RhcnQoKTpkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwiRE9NQ29udGVudExvYWRlZFwiLHRoaXMuc3RhcnQpfSxkLnByb3RvdHlwZS5zdGFydD1mdW5jdGlvbigpe3ZhciBhLGIsYyxkO2lmKHRoaXMuYm94ZXM9dGhpcy5lbGVtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUodGhpcy5jb25maWcuYm94Q2xhc3MpLHRoaXMuYm94ZXMubGVuZ3RoKXtpZih0aGlzLmRpc2FibGVkKCkpcmV0dXJuIHRoaXMucmVzZXRTdHlsZSgpO2ZvcihkPXRoaXMuYm94ZXMsYj0wLGM9ZC5sZW5ndGg7Yz5iO2IrKylhPWRbYl0sdGhpcy5hcHBseVN0eWxlKGEsITApO3JldHVybiB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcInNjcm9sbFwiLHRoaXMuc2Nyb2xsSGFuZGxlciwhMSksd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJyZXNpemVcIix0aGlzLnNjcm9sbEhhbmRsZXIsITEpLHRoaXMuaW50ZXJ2YWw9c2V0SW50ZXJ2YWwodGhpcy5zY3JvbGxDYWxsYmFjayw1MCl9fSxkLnByb3RvdHlwZS5zdG9wPWZ1bmN0aW9uKCl7cmV0dXJuIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwic2Nyb2xsXCIsdGhpcy5zY3JvbGxIYW5kbGVyLCExKSx3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInJlc2l6ZVwiLHRoaXMuc2Nyb2xsSGFuZGxlciwhMSksbnVsbCE9dGhpcy5pbnRlcnZhbD9jbGVhckludGVydmFsKHRoaXMuaW50ZXJ2YWwpOnZvaWQgMH0sZC5wcm90b3R5cGUuc2hvdz1mdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5hcHBseVN0eWxlKGEpLGEuY2xhc3NOYW1lPVwiXCIrYS5jbGFzc05hbWUrXCIgXCIrdGhpcy5jb25maWcuYW5pbWF0ZUNsYXNzfSxkLnByb3RvdHlwZS5hcHBseVN0eWxlPWZ1bmN0aW9uKGEsYil7dmFyIGMsZCxlO3JldHVybiBkPWEuZ2V0QXR0cmlidXRlKFwiZGF0YS13b3ctZHVyYXRpb25cIiksYz1hLmdldEF0dHJpYnV0ZShcImRhdGEtd293LWRlbGF5XCIpLGU9YS5nZXRBdHRyaWJ1dGUoXCJkYXRhLXdvdy1pdGVyYXRpb25cIiksdGhpcy5hbmltYXRlKGZ1bmN0aW9uKGYpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiBmLmN1c3RvbVN0eWxlKGEsYixkLGMsZSl9fSh0aGlzKSl9LGQucHJvdG90eXBlLmFuaW1hdGU9ZnVuY3Rpb24oKXtyZXR1cm5cInJlcXVlc3RBbmltYXRpb25GcmFtZVwiaW4gd2luZG93P2Z1bmN0aW9uKGEpe3JldHVybiB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKGEpfTpmdW5jdGlvbihhKXtyZXR1cm4gYSgpfX0oKSxkLnByb3RvdHlwZS5yZXNldFN0eWxlPWZ1bmN0aW9uKCl7dmFyIGEsYixjLGQsZTtmb3IoZD10aGlzLmJveGVzLGU9W10sYj0wLGM9ZC5sZW5ndGg7Yz5iO2IrKylhPWRbYl0sZS5wdXNoKGEuc2V0QXR0cmlidXRlKFwic3R5bGVcIixcInZpc2liaWxpdHk6IHZpc2libGU7XCIpKTtyZXR1cm4gZX0sZC5wcm90b3R5cGUuY3VzdG9tU3R5bGU9ZnVuY3Rpb24oYSxiLGMsZCxlKXtyZXR1cm4gYiYmdGhpcy5jYWNoZUFuaW1hdGlvbk5hbWUoYSksYS5zdHlsZS52aXNpYmlsaXR5PWI/XCJoaWRkZW5cIjpcInZpc2libGVcIixjJiZ0aGlzLnZlbmRvclNldChhLnN0eWxlLHthbmltYXRpb25EdXJhdGlvbjpjfSksZCYmdGhpcy52ZW5kb3JTZXQoYS5zdHlsZSx7YW5pbWF0aW9uRGVsYXk6ZH0pLGUmJnRoaXMudmVuZG9yU2V0KGEuc3R5bGUse2FuaW1hdGlvbkl0ZXJhdGlvbkNvdW50OmV9KSx0aGlzLnZlbmRvclNldChhLnN0eWxlLHthbmltYXRpb25OYW1lOmI/XCJub25lXCI6dGhpcy5jYWNoZWRBbmltYXRpb25OYW1lKGEpfSksYX0sZC5wcm90b3R5cGUudmVuZG9ycz1bXCJtb3pcIixcIndlYmtpdFwiXSxkLnByb3RvdHlwZS52ZW5kb3JTZXQ9ZnVuY3Rpb24oYSxiKXt2YXIgYyxkLGUsZjtmPVtdO2ZvcihjIGluIGIpZD1iW2NdLGFbXCJcIitjXT1kLGYucHVzaChmdW5jdGlvbigpe3ZhciBiLGYsZyxoO2ZvcihnPXRoaXMudmVuZG9ycyxoPVtdLGI9MCxmPWcubGVuZ3RoO2Y+YjtiKyspZT1nW2JdLGgucHVzaChhW1wiXCIrZStjLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpK2Muc3Vic3RyKDEpXT1kKTtyZXR1cm4gaH0uY2FsbCh0aGlzKSk7cmV0dXJuIGZ9LGQucHJvdG90eXBlLnZlbmRvckNTUz1mdW5jdGlvbihhLGIpe3ZhciBjLGQsZSxmLGcsaDtmb3IoZD13aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShhKSxjPWQuZ2V0UHJvcGVydHlDU1NWYWx1ZShiKSxoPXRoaXMudmVuZG9ycyxmPTAsZz1oLmxlbmd0aDtnPmY7ZisrKWU9aFtmXSxjPWN8fGQuZ2V0UHJvcGVydHlDU1NWYWx1ZShcIi1cIitlK1wiLVwiK2IpO3JldHVybiBjfSxkLnByb3RvdHlwZS5hbmltYXRpb25OYW1lPWZ1bmN0aW9uKGEpe3ZhciBiO3RyeXtiPXRoaXMudmVuZG9yQ1NTKGEsXCJhbmltYXRpb24tbmFtZVwiKS5jc3NUZXh0fWNhdGNoKGMpe2I9d2luZG93LmdldENvbXB1dGVkU3R5bGUoYSkuZ2V0UHJvcGVydHlWYWx1ZShcImFuaW1hdGlvbi1uYW1lXCIpfXJldHVyblwibm9uZVwiPT09Yj9cIlwiOmJ9LGQucHJvdG90eXBlLmNhY2hlQW5pbWF0aW9uTmFtZT1mdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5hbmltYXRpb25OYW1lQ2FjaGUuc2V0KGEsdGhpcy5hbmltYXRpb25OYW1lKGEpKX0sZC5wcm90b3R5cGUuY2FjaGVkQW5pbWF0aW9uTmFtZT1mdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5hbmltYXRpb25OYW1lQ2FjaGUuZ2V0KGEpfSxkLnByb3RvdHlwZS5zY3JvbGxIYW5kbGVyPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuc2Nyb2xsZWQ9ITB9LGQucHJvdG90eXBlLnNjcm9sbENhbGxiYWNrPWZ1bmN0aW9uKCl7dmFyIGE7cmV0dXJuIHRoaXMuc2Nyb2xsZWQmJih0aGlzLnNjcm9sbGVkPSExLHRoaXMuYm94ZXM9ZnVuY3Rpb24oKXt2YXIgYixjLGQsZTtmb3IoZD10aGlzLmJveGVzLGU9W10sYj0wLGM9ZC5sZW5ndGg7Yz5iO2IrKylhPWRbYl0sYSYmKHRoaXMuaXNWaXNpYmxlKGEpP3RoaXMuc2hvdyhhKTplLnB1c2goYSkpO3JldHVybiBlfS5jYWxsKHRoaXMpLCF0aGlzLmJveGVzLmxlbmd0aCk/dGhpcy5zdG9wKCk6dm9pZCAwfSxkLnByb3RvdHlwZS5vZmZzZXRUb3A9ZnVuY3Rpb24oYSl7Zm9yKHZhciBiO3ZvaWQgMD09PWEub2Zmc2V0VG9wOylhPWEucGFyZW50Tm9kZTtmb3IoYj1hLm9mZnNldFRvcDthPWEub2Zmc2V0UGFyZW50OyliKz1hLm9mZnNldFRvcDtyZXR1cm4gYn0sZC5wcm90b3R5cGUuaXNWaXNpYmxlPWZ1bmN0aW9uKGEpe3ZhciBiLGMsZCxlLGY7cmV0dXJuIGM9YS5nZXRBdHRyaWJ1dGUoXCJkYXRhLXdvdy1vZmZzZXRcIil8fHRoaXMuY29uZmlnLm9mZnNldCxmPXdpbmRvdy5wYWdlWU9mZnNldCxlPWYrdGhpcy5lbGVtZW50LmNsaWVudEhlaWdodC1jLGQ9dGhpcy5vZmZzZXRUb3AoYSksYj1kK2EuY2xpZW50SGVpZ2h0LGU+PWQmJmI+PWZ9LGQucHJvdG90eXBlLnV0aWw9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdXRpbHx8KHRoaXMuX3V0aWw9bmV3IGEpfSxkLnByb3RvdHlwZS5kaXNhYmxlZD1mdW5jdGlvbigpe3JldHVybiF0aGlzLmNvbmZpZy5tb2JpbGUmJnRoaXMudXRpbCgpLmlzTW9iaWxlKG5hdmlnYXRvci51c2VyQWdlbnQpfSxkfSgpfSkuY2FsbCh0aGlzKTtcbi8qXG4gICAgIF8gXyAgICAgIF8gICAgICAgX1xuIF9fX3wgKF8pIF9fX3wgfCBfXyAgKF8pX19fXG4vIF9ffCB8IHwvIF9ffCB8LyAvICB8IC8gX198XG5cXF9fIFxcIHwgfCAoX198ICAgPCBfIHwgXFxfXyBcXFxufF9fXy9ffF98XFxfX198X3xcXF8oXykvIHxfX18vXG4gICAgICAgICAgICAgICAgICAgfF9fL1xuXG4gVmVyc2lvbjogMS44LjBcbiAgQXV0aG9yOiBLZW4gV2hlZWxlclxuIFdlYnNpdGU6IGh0dHA6Ly9rZW53aGVlbGVyLmdpdGh1Yi5pb1xuICAgIERvY3M6IGh0dHA6Ly9rZW53aGVlbGVyLmdpdGh1Yi5pby9zbGlja1xuICAgIFJlcG86IGh0dHA6Ly9naXRodWIuY29tL2tlbndoZWVsZXIvc2xpY2tcbiAgSXNzdWVzOiBodHRwOi8vZ2l0aHViLmNvbS9rZW53aGVlbGVyL3NsaWNrL2lzc3Vlc1xuXG4gKi9cbi8qIGdsb2JhbCB3aW5kb3csIGRvY3VtZW50LCBkZWZpbmUsIGpRdWVyeSwgc2V0SW50ZXJ2YWwsIGNsZWFySW50ZXJ2YWwgKi9cbihmdW5jdGlvbiAoZmFjdG9yeSkge1xuICBcInVzZSBzdHJpY3RcIjtcbiAgaWYgKHR5cGVvZiBkZWZpbmUgPT09IFwiZnVuY3Rpb25cIiAmJiBkZWZpbmUuYW1kKSB7XG4gICAgZGVmaW5lKFtcImpxdWVyeVwiXSwgZmFjdG9yeSk7XG4gIH0gZWxzZSBpZiAodHlwZW9mIGV4cG9ydHMgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkocmVxdWlyZShcImpxdWVyeVwiKSk7XG4gIH0gZWxzZSB7XG4gICAgZmFjdG9yeShqUXVlcnkpO1xuICB9XG59KShmdW5jdGlvbiAoJCkge1xuICBcInVzZSBzdHJpY3RcIjtcbiAgdmFyIFNsaWNrID0gd2luZG93LlNsaWNrIHx8IHt9O1xuXG4gIFNsaWNrID0gKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgaW5zdGFuY2VVaWQgPSAwO1xuXG4gICAgZnVuY3Rpb24gU2xpY2soZWxlbWVudCwgc2V0dGluZ3MpIHtcbiAgICAgIHZhciBfID0gdGhpcyxcbiAgICAgICAgZGF0YVNldHRpbmdzO1xuXG4gICAgICBfLmRlZmF1bHRzID0ge1xuICAgICAgICBhY2Nlc3NpYmlsaXR5OiB0cnVlLFxuICAgICAgICBhZGFwdGl2ZUhlaWdodDogZmFsc2UsXG4gICAgICAgIGFwcGVuZEFycm93czogJChlbGVtZW50KSxcbiAgICAgICAgYXBwZW5kRG90czogJChlbGVtZW50KSxcbiAgICAgICAgYXJyb3dzOiB0cnVlLFxuICAgICAgICBhc05hdkZvcjogbnVsbCxcbiAgICAgICAgcHJldkFycm93OlxuICAgICAgICAgICc8YnV0dG9uIGNsYXNzPVwic2xpY2stcHJldlwiIGFyaWEtbGFiZWw9XCJQcmV2aW91c1wiIHR5cGU9XCJidXR0b25cIj48L2J1dHRvbj4nLFxuICAgICAgICBuZXh0QXJyb3c6XG4gICAgICAgICAgJzxidXR0b24gY2xhc3M9XCJzbGljay1uZXh0XCIgYXJpYS1sYWJlbD1cIk5leHRcIiB0eXBlPVwiYnV0dG9uXCI+PC9idXR0b24+JyxcbiAgICAgICAgYXV0b3BsYXk6IGZhbHNlLFxuICAgICAgICBhdXRvcGxheVNwZWVkOiAzMDAwLFxuICAgICAgICBjZW50ZXJNb2RlOiBmYWxzZSxcbiAgICAgICAgY2VudGVyUGFkZGluZzogXCI1MHB4XCIsXG4gICAgICAgIGNzc0Vhc2U6IFwiZWFzZVwiLFxuICAgICAgICBjdXN0b21QYWdpbmc6IGZ1bmN0aW9uIChzbGlkZXIsIGkpIHtcbiAgICAgICAgICByZXR1cm4gJCgnPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgLz4nKS50ZXh0KGkgKyAxKTtcbiAgICAgICAgfSxcbiAgICAgICAgZG90czogZmFsc2UsXG4gICAgICAgIGRvdHNDbGFzczogXCJzbGljay1kb3RzXCIsXG4gICAgICAgIGRyYWdnYWJsZTogdHJ1ZSxcbiAgICAgICAgZWFzaW5nOiBcImxpbmVhclwiLFxuICAgICAgICBlZGdlRnJpY3Rpb246IDAuMzUsXG4gICAgICAgIGZhZGU6IGZhbHNlLFxuICAgICAgICBmb2N1c09uU2VsZWN0OiBmYWxzZSxcbiAgICAgICAgZm9jdXNPbkNoYW5nZTogZmFsc2UsXG4gICAgICAgIGluZmluaXRlOiB0cnVlLFxuICAgICAgICBpbml0aWFsU2xpZGU6IDAsXG4gICAgICAgIGxhenlMb2FkOiBcIm9uZGVtYW5kXCIsXG4gICAgICAgIG1vYmlsZUZpcnN0OiBmYWxzZSxcbiAgICAgICAgcGF1c2VPbkhvdmVyOiB0cnVlLFxuICAgICAgICBwYXVzZU9uRm9jdXM6IHRydWUsXG4gICAgICAgIHBhdXNlT25Eb3RzSG92ZXI6IGZhbHNlLFxuICAgICAgICByZXNwb25kVG86IFwid2luZG93XCIsXG4gICAgICAgIHJlc3BvbnNpdmU6IG51bGwsXG4gICAgICAgIHJvd3M6IDEsXG4gICAgICAgIHJ0bDogZmFsc2UsXG4gICAgICAgIHNsaWRlOiBcIlwiLFxuICAgICAgICBzbGlkZXNQZXJSb3c6IDEsXG4gICAgICAgIHNsaWRlc1RvU2hvdzogMSxcbiAgICAgICAgc2xpZGVzVG9TY3JvbGw6IDEsXG4gICAgICAgIHNwZWVkOiA1MDAsXG4gICAgICAgIHN3aXBlOiB0cnVlLFxuICAgICAgICBzd2lwZVRvU2xpZGU6IGZhbHNlLFxuICAgICAgICB0b3VjaE1vdmU6IHRydWUsXG4gICAgICAgIHRvdWNoVGhyZXNob2xkOiA1LFxuICAgICAgICB1c2VDU1M6IHRydWUsXG4gICAgICAgIHVzZVRyYW5zZm9ybTogdHJ1ZSxcbiAgICAgICAgdmFyaWFibGVXaWR0aDogZmFsc2UsXG4gICAgICAgIHZlcnRpY2FsOiBmYWxzZSxcbiAgICAgICAgdmVydGljYWxTd2lwaW5nOiBmYWxzZSxcbiAgICAgICAgd2FpdEZvckFuaW1hdGU6IHRydWUsXG4gICAgICAgIHpJbmRleDogMTAwMCxcbiAgICAgIH07XG5cbiAgICAgIF8uaW5pdGlhbHMgPSB7XG4gICAgICAgIGFuaW1hdGluZzogZmFsc2UsXG4gICAgICAgIGRyYWdnaW5nOiBmYWxzZSxcbiAgICAgICAgYXV0b1BsYXlUaW1lcjogbnVsbCxcbiAgICAgICAgY3VycmVudERpcmVjdGlvbjogMCxcbiAgICAgICAgY3VycmVudExlZnQ6IG51bGwsXG4gICAgICAgIGN1cnJlbnRTbGlkZTogMCxcbiAgICAgICAgZGlyZWN0aW9uOiAxLFxuICAgICAgICAkZG90czogbnVsbCxcbiAgICAgICAgbGlzdFdpZHRoOiBudWxsLFxuICAgICAgICBsaXN0SGVpZ2h0OiBudWxsLFxuICAgICAgICBsb2FkSW5kZXg6IDAsXG4gICAgICAgICRuZXh0QXJyb3c6IG51bGwsXG4gICAgICAgICRwcmV2QXJyb3c6IG51bGwsXG4gICAgICAgIHNjcm9sbGluZzogZmFsc2UsXG4gICAgICAgIHNsaWRlQ291bnQ6IG51bGwsXG4gICAgICAgIHNsaWRlV2lkdGg6IG51bGwsXG4gICAgICAgICRzbGlkZVRyYWNrOiBudWxsLFxuICAgICAgICAkc2xpZGVzOiBudWxsLFxuICAgICAgICBzbGlkaW5nOiBmYWxzZSxcbiAgICAgICAgc2xpZGVPZmZzZXQ6IDAsXG4gICAgICAgIHN3aXBlTGVmdDogbnVsbCxcbiAgICAgICAgc3dpcGluZzogZmFsc2UsXG4gICAgICAgICRsaXN0OiBudWxsLFxuICAgICAgICB0b3VjaE9iamVjdDoge30sXG4gICAgICAgIHRyYW5zZm9ybXNFbmFibGVkOiBmYWxzZSxcbiAgICAgICAgdW5zbGlja2VkOiBmYWxzZSxcbiAgICAgIH07XG5cbiAgICAgICQuZXh0ZW5kKF8sIF8uaW5pdGlhbHMpO1xuXG4gICAgICBfLmFjdGl2ZUJyZWFrcG9pbnQgPSBudWxsO1xuICAgICAgXy5hbmltVHlwZSA9IG51bGw7XG4gICAgICBfLmFuaW1Qcm9wID0gbnVsbDtcbiAgICAgIF8uYnJlYWtwb2ludHMgPSBbXTtcbiAgICAgIF8uYnJlYWtwb2ludFNldHRpbmdzID0gW107XG4gICAgICBfLmNzc1RyYW5zaXRpb25zID0gZmFsc2U7XG4gICAgICBfLmZvY3Vzc2VkID0gZmFsc2U7XG4gICAgICBfLmludGVycnVwdGVkID0gZmFsc2U7XG4gICAgICBfLmhpZGRlbiA9IFwiaGlkZGVuXCI7XG4gICAgICBfLnBhdXNlZCA9IHRydWU7XG4gICAgICBfLnBvc2l0aW9uUHJvcCA9IG51bGw7XG4gICAgICBfLnJlc3BvbmRUbyA9IG51bGw7XG4gICAgICBfLnJvd0NvdW50ID0gMTtcbiAgICAgIF8uc2hvdWxkQ2xpY2sgPSB0cnVlO1xuICAgICAgXy4kc2xpZGVyID0gJChlbGVtZW50KTtcbiAgICAgIF8uJHNsaWRlc0NhY2hlID0gbnVsbDtcbiAgICAgIF8udHJhbnNmb3JtVHlwZSA9IG51bGw7XG4gICAgICBfLnRyYW5zaXRpb25UeXBlID0gbnVsbDtcbiAgICAgIF8udmlzaWJpbGl0eUNoYW5nZSA9IFwidmlzaWJpbGl0eWNoYW5nZVwiO1xuICAgICAgXy53aW5kb3dXaWR0aCA9IDA7XG4gICAgICBfLndpbmRvd1RpbWVyID0gbnVsbDtcblxuICAgICAgZGF0YVNldHRpbmdzID0gJChlbGVtZW50KS5kYXRhKFwic2xpY2tcIikgfHwge307XG5cbiAgICAgIF8ub3B0aW9ucyA9ICQuZXh0ZW5kKHt9LCBfLmRlZmF1bHRzLCBzZXR0aW5ncywgZGF0YVNldHRpbmdzKTtcblxuICAgICAgXy5jdXJyZW50U2xpZGUgPSBfLm9wdGlvbnMuaW5pdGlhbFNsaWRlO1xuXG4gICAgICBfLm9yaWdpbmFsU2V0dGluZ3MgPSBfLm9wdGlvbnM7XG5cbiAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQubW96SGlkZGVuICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIF8uaGlkZGVuID0gXCJtb3pIaWRkZW5cIjtcbiAgICAgICAgXy52aXNpYmlsaXR5Q2hhbmdlID0gXCJtb3p2aXNpYmlsaXR5Y2hhbmdlXCI7XG4gICAgICB9IGVsc2UgaWYgKHR5cGVvZiBkb2N1bWVudC53ZWJraXRIaWRkZW4gIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgXy5oaWRkZW4gPSBcIndlYmtpdEhpZGRlblwiO1xuICAgICAgICBfLnZpc2liaWxpdHlDaGFuZ2UgPSBcIndlYmtpdHZpc2liaWxpdHljaGFuZ2VcIjtcbiAgICAgIH1cblxuICAgICAgXy5hdXRvUGxheSA9ICQucHJveHkoXy5hdXRvUGxheSwgXyk7XG4gICAgICBfLmF1dG9QbGF5Q2xlYXIgPSAkLnByb3h5KF8uYXV0b1BsYXlDbGVhciwgXyk7XG4gICAgICBfLmF1dG9QbGF5SXRlcmF0b3IgPSAkLnByb3h5KF8uYXV0b1BsYXlJdGVyYXRvciwgXyk7XG4gICAgICBfLmNoYW5nZVNsaWRlID0gJC5wcm94eShfLmNoYW5nZVNsaWRlLCBfKTtcbiAgICAgIF8uY2xpY2tIYW5kbGVyID0gJC5wcm94eShfLmNsaWNrSGFuZGxlciwgXyk7XG4gICAgICBfLnNlbGVjdEhhbmRsZXIgPSAkLnByb3h5KF8uc2VsZWN0SGFuZGxlciwgXyk7XG4gICAgICBfLnNldFBvc2l0aW9uID0gJC5wcm94eShfLnNldFBvc2l0aW9uLCBfKTtcbiAgICAgIF8uc3dpcGVIYW5kbGVyID0gJC5wcm94eShfLnN3aXBlSGFuZGxlciwgXyk7XG4gICAgICBfLmRyYWdIYW5kbGVyID0gJC5wcm94eShfLmRyYWdIYW5kbGVyLCBfKTtcbiAgICAgIF8ua2V5SGFuZGxlciA9ICQucHJveHkoXy5rZXlIYW5kbGVyLCBfKTtcblxuICAgICAgXy5pbnN0YW5jZVVpZCA9IGluc3RhbmNlVWlkKys7XG5cbiAgICAgIC8vIEEgc2ltcGxlIHdheSB0byBjaGVjayBmb3IgSFRNTCBzdHJpbmdzXG4gICAgICAvLyBTdHJpY3QgSFRNTCByZWNvZ25pdGlvbiAobXVzdCBzdGFydCB3aXRoIDwpXG4gICAgICAvLyBFeHRyYWN0ZWQgZnJvbSBqUXVlcnkgdjEuMTEgc291cmNlXG4gICAgICBfLmh0bWxFeHByID0gL14oPzpcXHMqKDxbXFx3XFxXXSs+KVtePl0qKSQvO1xuXG4gICAgICBfLnJlZ2lzdGVyQnJlYWtwb2ludHMoKTtcbiAgICAgIF8uaW5pdCh0cnVlKTtcbiAgICB9XG5cbiAgICByZXR1cm4gU2xpY2s7XG4gIH0pKCk7XG5cbiAgU2xpY2sucHJvdG90eXBlLmFjdGl2YXRlQURBID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBfID0gdGhpcztcblxuICAgIF8uJHNsaWRlVHJhY2tcbiAgICAgIC5maW5kKFwiLnNsaWNrLWFjdGl2ZVwiKVxuICAgICAgLmF0dHIoe1xuICAgICAgICBcImFyaWEtaGlkZGVuXCI6IFwiZmFsc2VcIixcbiAgICAgIH0pXG4gICAgICAuZmluZChcImEsIGlucHV0LCBidXR0b24sIHNlbGVjdFwiKVxuICAgICAgLmF0dHIoe1xuICAgICAgICB0YWJpbmRleDogXCIwXCIsXG4gICAgICB9KTtcbiAgfTtcblxuICBTbGljay5wcm90b3R5cGUuYWRkU2xpZGUgPSBTbGljay5wcm90b3R5cGUuc2xpY2tBZGQgPSBmdW5jdGlvbiAoXG4gICAgbWFya3VwLFxuICAgIGluZGV4LFxuICAgIGFkZEJlZm9yZVxuICApIHtcbiAgICB2YXIgXyA9IHRoaXM7XG5cbiAgICBpZiAodHlwZW9mIGluZGV4ID09PSBcImJvb2xlYW5cIikge1xuICAgICAgYWRkQmVmb3JlID0gaW5kZXg7XG4gICAgICBpbmRleCA9IG51bGw7XG4gICAgfSBlbHNlIGlmIChpbmRleCA8IDAgfHwgaW5kZXggPj0gXy5zbGlkZUNvdW50KSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgXy51bmxvYWQoKTtcblxuICAgIGlmICh0eXBlb2YgaW5kZXggPT09IFwibnVtYmVyXCIpIHtcbiAgICAgIGlmIChpbmRleCA9PT0gMCAmJiBfLiRzbGlkZXMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICQobWFya3VwKS5hcHBlbmRUbyhfLiRzbGlkZVRyYWNrKTtcbiAgICAgIH0gZWxzZSBpZiAoYWRkQmVmb3JlKSB7XG4gICAgICAgICQobWFya3VwKS5pbnNlcnRCZWZvcmUoXy4kc2xpZGVzLmVxKGluZGV4KSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAkKG1hcmt1cCkuaW5zZXJ0QWZ0ZXIoXy4kc2xpZGVzLmVxKGluZGV4KSk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChhZGRCZWZvcmUgPT09IHRydWUpIHtcbiAgICAgICAgJChtYXJrdXApLnByZXBlbmRUbyhfLiRzbGlkZVRyYWNrKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgICQobWFya3VwKS5hcHBlbmRUbyhfLiRzbGlkZVRyYWNrKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBfLiRzbGlkZXMgPSBfLiRzbGlkZVRyYWNrLmNoaWxkcmVuKHRoaXMub3B0aW9ucy5zbGlkZSk7XG5cbiAgICBfLiRzbGlkZVRyYWNrLmNoaWxkcmVuKHRoaXMub3B0aW9ucy5zbGlkZSkuZGV0YWNoKCk7XG5cbiAgICBfLiRzbGlkZVRyYWNrLmFwcGVuZChfLiRzbGlkZXMpO1xuXG4gICAgXy4kc2xpZGVzLmVhY2goZnVuY3Rpb24gKGluZGV4LCBlbGVtZW50KSB7XG4gICAgICAkKGVsZW1lbnQpLmF0dHIoXCJkYXRhLXNsaWNrLWluZGV4XCIsIGluZGV4KTtcbiAgICB9KTtcblxuICAgIF8uJHNsaWRlc0NhY2hlID0gXy4kc2xpZGVzO1xuXG4gICAgXy5yZWluaXQoKTtcbiAgfTtcblxuICBTbGljay5wcm90b3R5cGUuYW5pbWF0ZUhlaWdodCA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgXyA9IHRoaXM7XG4gICAgaWYgKFxuICAgICAgXy5vcHRpb25zLnNsaWRlc1RvU2hvdyA9PT0gMSAmJlxuICAgICAgXy5vcHRpb25zLmFkYXB0aXZlSGVpZ2h0ID09PSB0cnVlICYmXG4gICAgICBfLm9wdGlvbnMudmVydGljYWwgPT09IGZhbHNlXG4gICAgKSB7XG4gICAgICB2YXIgdGFyZ2V0SGVpZ2h0ID0gXy4kc2xpZGVzLmVxKF8uY3VycmVudFNsaWRlKS5vdXRlckhlaWdodCh0cnVlKTtcbiAgICAgIF8uJGxpc3QuYW5pbWF0ZShcbiAgICAgICAge1xuICAgICAgICAgIGhlaWdodDogdGFyZ2V0SGVpZ2h0LFxuICAgICAgICB9LFxuICAgICAgICBfLm9wdGlvbnMuc3BlZWRcbiAgICAgICk7XG4gICAgfVxuICB9O1xuXG4gIFNsaWNrLnByb3RvdHlwZS5hbmltYXRlU2xpZGUgPSBmdW5jdGlvbiAodGFyZ2V0TGVmdCwgY2FsbGJhY2spIHtcbiAgICB2YXIgYW5pbVByb3BzID0ge30sXG4gICAgICBfID0gdGhpcztcblxuICAgIF8uYW5pbWF0ZUhlaWdodCgpO1xuXG4gICAgaWYgKF8ub3B0aW9ucy5ydGwgPT09IHRydWUgJiYgXy5vcHRpb25zLnZlcnRpY2FsID09PSBmYWxzZSkge1xuICAgICAgdGFyZ2V0TGVmdCA9IC10YXJnZXRMZWZ0O1xuICAgIH1cbiAgICBpZiAoXy50cmFuc2Zvcm1zRW5hYmxlZCA9PT0gZmFsc2UpIHtcbiAgICAgIGlmIChfLm9wdGlvbnMudmVydGljYWwgPT09IGZhbHNlKSB7XG4gICAgICAgIF8uJHNsaWRlVHJhY2suYW5pbWF0ZShcbiAgICAgICAgICB7XG4gICAgICAgICAgICBsZWZ0OiB0YXJnZXRMZWZ0LFxuICAgICAgICAgIH0sXG4gICAgICAgICAgXy5vcHRpb25zLnNwZWVkLFxuICAgICAgICAgIF8ub3B0aW9ucy5lYXNpbmcsXG4gICAgICAgICAgY2FsbGJhY2tcbiAgICAgICAgKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIF8uJHNsaWRlVHJhY2suYW5pbWF0ZShcbiAgICAgICAgICB7XG4gICAgICAgICAgICB0b3A6IHRhcmdldExlZnQsXG4gICAgICAgICAgfSxcbiAgICAgICAgICBfLm9wdGlvbnMuc3BlZWQsXG4gICAgICAgICAgXy5vcHRpb25zLmVhc2luZyxcbiAgICAgICAgICBjYWxsYmFja1xuICAgICAgICApO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBpZiAoXy5jc3NUcmFuc2l0aW9ucyA9PT0gZmFsc2UpIHtcbiAgICAgICAgaWYgKF8ub3B0aW9ucy5ydGwgPT09IHRydWUpIHtcbiAgICAgICAgICBfLmN1cnJlbnRMZWZ0ID0gLV8uY3VycmVudExlZnQ7XG4gICAgICAgIH1cbiAgICAgICAgJCh7XG4gICAgICAgICAgYW5pbVN0YXJ0OiBfLmN1cnJlbnRMZWZ0LFxuICAgICAgICB9KS5hbmltYXRlKFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIGFuaW1TdGFydDogdGFyZ2V0TGVmdCxcbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIGR1cmF0aW9uOiBfLm9wdGlvbnMuc3BlZWQsXG4gICAgICAgICAgICBlYXNpbmc6IF8ub3B0aW9ucy5lYXNpbmcsXG4gICAgICAgICAgICBzdGVwOiBmdW5jdGlvbiAobm93KSB7XG4gICAgICAgICAgICAgIG5vdyA9IE1hdGguY2VpbChub3cpO1xuICAgICAgICAgICAgICBpZiAoXy5vcHRpb25zLnZlcnRpY2FsID09PSBmYWxzZSkge1xuICAgICAgICAgICAgICAgIGFuaW1Qcm9wc1tfLmFuaW1UeXBlXSA9IFwidHJhbnNsYXRlKFwiICsgbm93ICsgXCJweCwgMHB4KVwiO1xuICAgICAgICAgICAgICAgIF8uJHNsaWRlVHJhY2suY3NzKGFuaW1Qcm9wcyk7XG4gICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgYW5pbVByb3BzW18uYW5pbVR5cGVdID0gXCJ0cmFuc2xhdGUoMHB4LFwiICsgbm93ICsgXCJweClcIjtcbiAgICAgICAgICAgICAgICBfLiRzbGlkZVRyYWNrLmNzcyhhbmltUHJvcHMpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY29tcGxldGU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgaWYgKGNhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgY2FsbGJhY2suY2FsbCgpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgIH1cbiAgICAgICAgKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIF8uYXBwbHlUcmFuc2l0aW9uKCk7XG4gICAgICAgIHRhcmdldExlZnQgPSBNYXRoLmNlaWwodGFyZ2V0TGVmdCk7XG5cbiAgICAgICAgaWYgKF8ub3B0aW9ucy52ZXJ0aWNhbCA9PT0gZmFsc2UpIHtcbiAgICAgICAgICBhbmltUHJvcHNbXy5hbmltVHlwZV0gPSBcInRyYW5zbGF0ZTNkKFwiICsgdGFyZ2V0TGVmdCArIFwicHgsIDBweCwgMHB4KVwiO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGFuaW1Qcm9wc1tfLmFuaW1UeXBlXSA9IFwidHJhbnNsYXRlM2QoMHB4LFwiICsgdGFyZ2V0TGVmdCArIFwicHgsIDBweClcIjtcbiAgICAgICAgfVxuICAgICAgICBfLiRzbGlkZVRyYWNrLmNzcyhhbmltUHJvcHMpO1xuXG4gICAgICAgIGlmIChjYWxsYmFjaykge1xuICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgXy5kaXNhYmxlVHJhbnNpdGlvbigpO1xuXG4gICAgICAgICAgICBjYWxsYmFjay5jYWxsKCk7XG4gICAgICAgICAgfSwgXy5vcHRpb25zLnNwZWVkKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfTtcblxuICBTbGljay5wcm90b3R5cGUuZ2V0TmF2VGFyZ2V0ID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBfID0gdGhpcyxcbiAgICAgIGFzTmF2Rm9yID0gXy5vcHRpb25zLmFzTmF2Rm9yO1xuXG4gICAgaWYgKGFzTmF2Rm9yICYmIGFzTmF2Rm9yICE9PSBudWxsKSB7XG4gICAgICBhc05hdkZvciA9ICQoYXNOYXZGb3IpLm5vdChfLiRzbGlkZXIpO1xuICAgIH1cblxuICAgIHJldHVybiBhc05hdkZvcjtcbiAgfTtcblxuICBTbGljay5wcm90b3R5cGUuYXNOYXZGb3IgPSBmdW5jdGlvbiAoaW5kZXgpIHtcbiAgICB2YXIgXyA9IHRoaXMsXG4gICAgICBhc05hdkZvciA9IF8uZ2V0TmF2VGFyZ2V0KCk7XG5cbiAgICBpZiAoYXNOYXZGb3IgIT09IG51bGwgJiYgdHlwZW9mIGFzTmF2Rm9yID09PSBcIm9iamVjdFwiKSB7XG4gICAgICBhc05hdkZvci5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHRhcmdldCA9ICQodGhpcykuc2xpY2soXCJnZXRTbGlja1wiKTtcbiAgICAgICAgaWYgKCF0YXJnZXQudW5zbGlja2VkKSB7XG4gICAgICAgICAgdGFyZ2V0LnNsaWRlSGFuZGxlcihpbmRleCwgdHJ1ZSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcblxuICBTbGljay5wcm90b3R5cGUuYXBwbHlUcmFuc2l0aW9uID0gZnVuY3Rpb24gKHNsaWRlKSB7XG4gICAgdmFyIF8gPSB0aGlzLFxuICAgICAgdHJhbnNpdGlvbiA9IHt9O1xuXG4gICAgaWYgKF8ub3B0aW9ucy5mYWRlID09PSBmYWxzZSkge1xuICAgICAgdHJhbnNpdGlvbltfLnRyYW5zaXRpb25UeXBlXSA9XG4gICAgICAgIF8udHJhbnNmb3JtVHlwZSArIFwiIFwiICsgXy5vcHRpb25zLnNwZWVkICsgXCJtcyBcIiArIF8ub3B0aW9ucy5jc3NFYXNlO1xuICAgIH0gZWxzZSB7XG4gICAgICB0cmFuc2l0aW9uW18udHJhbnNpdGlvblR5cGVdID1cbiAgICAgICAgXCJvcGFjaXR5IFwiICsgXy5vcHRpb25zLnNwZWVkICsgXCJtcyBcIiArIF8ub3B0aW9ucy5jc3NFYXNlO1xuICAgIH1cblxuICAgIGlmIChfLm9wdGlvbnMuZmFkZSA9PT0gZmFsc2UpIHtcbiAgICAgIF8uJHNsaWRlVHJhY2suY3NzKHRyYW5zaXRpb24pO1xuICAgIH0gZWxzZSB7XG4gICAgICBfLiRzbGlkZXMuZXEoc2xpZGUpLmNzcyh0cmFuc2l0aW9uKTtcbiAgICB9XG4gIH07XG5cbiAgU2xpY2sucHJvdG90eXBlLmF1dG9QbGF5ID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBfID0gdGhpcztcblxuICAgIF8uYXV0b1BsYXlDbGVhcigpO1xuXG4gICAgaWYgKF8uc2xpZGVDb3VudCA+IF8ub3B0aW9ucy5zbGlkZXNUb1Nob3cpIHtcbiAgICAgIF8uYXV0b1BsYXlUaW1lciA9IHNldEludGVydmFsKFxuICAgICAgICBfLmF1dG9QbGF5SXRlcmF0b3IsXG4gICAgICAgIF8ub3B0aW9ucy5hdXRvcGxheVNwZWVkXG4gICAgICApO1xuICAgIH1cbiAgfTtcblxuICBTbGljay5wcm90b3R5cGUuYXV0b1BsYXlDbGVhciA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgXyA9IHRoaXM7XG5cbiAgICBpZiAoXy5hdXRvUGxheVRpbWVyKSB7XG4gICAgICBjbGVhckludGVydmFsKF8uYXV0b1BsYXlUaW1lcik7XG4gICAgfVxuICB9O1xuXG4gIFNsaWNrLnByb3RvdHlwZS5hdXRvUGxheUl0ZXJhdG9yID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBfID0gdGhpcyxcbiAgICAgIHNsaWRlVG8gPSBfLmN1cnJlbnRTbGlkZSArIF8ub3B0aW9ucy5zbGlkZXNUb1Njcm9sbDtcblxuICAgIGlmICghXy5wYXVzZWQgJiYgIV8uaW50ZXJydXB0ZWQgJiYgIV8uZm9jdXNzZWQpIHtcbiAgICAgIGlmIChfLm9wdGlvbnMuaW5maW5pdGUgPT09IGZhbHNlKSB7XG4gICAgICAgIGlmIChfLmRpcmVjdGlvbiA9PT0gMSAmJiBfLmN1cnJlbnRTbGlkZSArIDEgPT09IF8uc2xpZGVDb3VudCAtIDEpIHtcbiAgICAgICAgICBfLmRpcmVjdGlvbiA9IDA7XG4gICAgICAgIH0gZWxzZSBpZiAoXy5kaXJlY3Rpb24gPT09IDApIHtcbiAgICAgICAgICBzbGlkZVRvID0gXy5jdXJyZW50U2xpZGUgLSBfLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGw7XG5cbiAgICAgICAgICBpZiAoXy5jdXJyZW50U2xpZGUgLSAxID09PSAwKSB7XG4gICAgICAgICAgICBfLmRpcmVjdGlvbiA9IDE7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIF8uc2xpZGVIYW5kbGVyKHNsaWRlVG8pO1xuICAgIH1cbiAgfTtcblxuICBTbGljay5wcm90b3R5cGUuYnVpbGRBcnJvd3MgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIF8gPSB0aGlzO1xuXG4gICAgaWYgKF8ub3B0aW9ucy5hcnJvd3MgPT09IHRydWUpIHtcbiAgICAgIF8uJHByZXZBcnJvdyA9ICQoXy5vcHRpb25zLnByZXZBcnJvdykuYWRkQ2xhc3MoXCJzbGljay1hcnJvd1wiKTtcbiAgICAgIF8uJG5leHRBcnJvdyA9ICQoXy5vcHRpb25zLm5leHRBcnJvdykuYWRkQ2xhc3MoXCJzbGljay1hcnJvd1wiKTtcblxuICAgICAgaWYgKF8uc2xpZGVDb3VudCA+IF8ub3B0aW9ucy5zbGlkZXNUb1Nob3cpIHtcbiAgICAgICAgXy4kcHJldkFycm93XG4gICAgICAgICAgLnJlbW92ZUNsYXNzKFwic2xpY2staGlkZGVuXCIpXG4gICAgICAgICAgLnJlbW92ZUF0dHIoXCJhcmlhLWhpZGRlbiB0YWJpbmRleFwiKTtcbiAgICAgICAgXy4kbmV4dEFycm93XG4gICAgICAgICAgLnJlbW92ZUNsYXNzKFwic2xpY2staGlkZGVuXCIpXG4gICAgICAgICAgLnJlbW92ZUF0dHIoXCJhcmlhLWhpZGRlbiB0YWJpbmRleFwiKTtcblxuICAgICAgICBpZiAoXy5odG1sRXhwci50ZXN0KF8ub3B0aW9ucy5wcmV2QXJyb3cpKSB7XG4gICAgICAgICAgXy4kcHJldkFycm93LnByZXBlbmRUbyhfLm9wdGlvbnMuYXBwZW5kQXJyb3dzKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChfLmh0bWxFeHByLnRlc3QoXy5vcHRpb25zLm5leHRBcnJvdykpIHtcbiAgICAgICAgICBfLiRuZXh0QXJyb3cuYXBwZW5kVG8oXy5vcHRpb25zLmFwcGVuZEFycm93cyk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoXy5vcHRpb25zLmluZmluaXRlICE9PSB0cnVlKSB7XG4gICAgICAgICAgXy4kcHJldkFycm93LmFkZENsYXNzKFwic2xpY2stZGlzYWJsZWRcIikuYXR0cihcImFyaWEtZGlzYWJsZWRcIiwgXCJ0cnVlXCIpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBfLiRwcmV2QXJyb3dcbiAgICAgICAgICAuYWRkKF8uJG5leHRBcnJvdylcblxuICAgICAgICAgIC5hZGRDbGFzcyhcInNsaWNrLWhpZGRlblwiKVxuICAgICAgICAgIC5hdHRyKHtcbiAgICAgICAgICAgIFwiYXJpYS1kaXNhYmxlZFwiOiBcInRydWVcIixcbiAgICAgICAgICAgIHRhYmluZGV4OiBcIi0xXCIsXG4gICAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG4gIFNsaWNrLnByb3RvdHlwZS5idWlsZERvdHMgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIF8gPSB0aGlzLFxuICAgICAgaSxcbiAgICAgIGRvdDtcblxuICAgIGlmIChfLm9wdGlvbnMuZG90cyA9PT0gdHJ1ZSAmJiBfLnNsaWRlQ291bnQgPiBfLm9wdGlvbnMuc2xpZGVzVG9TaG93KSB7XG4gICAgICBfLiRzbGlkZXIuYWRkQ2xhc3MoXCJzbGljay1kb3R0ZWRcIik7XG5cbiAgICAgIGRvdCA9ICQoXCI8dWwgLz5cIikuYWRkQ2xhc3MoXy5vcHRpb25zLmRvdHNDbGFzcyk7XG5cbiAgICAgIGZvciAoaSA9IDA7IGkgPD0gXy5nZXREb3RDb3VudCgpOyBpICs9IDEpIHtcbiAgICAgICAgZG90LmFwcGVuZCgkKFwiPGxpIC8+XCIpLmFwcGVuZChfLm9wdGlvbnMuY3VzdG9tUGFnaW5nLmNhbGwodGhpcywgXywgaSkpKTtcbiAgICAgIH1cblxuICAgICAgXy4kZG90cyA9IGRvdC5hcHBlbmRUbyhfLm9wdGlvbnMuYXBwZW5kRG90cyk7XG5cbiAgICAgIF8uJGRvdHMuZmluZChcImxpXCIpLmZpcnN0KCkuYWRkQ2xhc3MoXCJzbGljay1hY3RpdmVcIik7XG4gICAgfVxuICB9O1xuXG4gIFNsaWNrLnByb3RvdHlwZS5idWlsZE91dCA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgXyA9IHRoaXM7XG5cbiAgICBfLiRzbGlkZXMgPSBfLiRzbGlkZXJcbiAgICAgIC5jaGlsZHJlbihfLm9wdGlvbnMuc2xpZGUgKyBcIjpub3QoLnNsaWNrLWNsb25lZClcIilcbiAgICAgIC5hZGRDbGFzcyhcInNsaWNrLXNsaWRlXCIpO1xuXG4gICAgXy5zbGlkZUNvdW50ID0gXy4kc2xpZGVzLmxlbmd0aDtcblxuICAgIF8uJHNsaWRlcy5lYWNoKGZ1bmN0aW9uIChpbmRleCwgZWxlbWVudCkge1xuICAgICAgJChlbGVtZW50KVxuICAgICAgICAuYXR0cihcImRhdGEtc2xpY2staW5kZXhcIiwgaW5kZXgpXG4gICAgICAgIC5kYXRhKFwib3JpZ2luYWxTdHlsaW5nXCIsICQoZWxlbWVudCkuYXR0cihcInN0eWxlXCIpIHx8IFwiXCIpO1xuICAgIH0pO1xuXG4gICAgXy4kc2xpZGVyLmFkZENsYXNzKFwic2xpY2stc2xpZGVyXCIpO1xuXG4gICAgXy4kc2xpZGVUcmFjayA9XG4gICAgICBfLnNsaWRlQ291bnQgPT09IDBcbiAgICAgICAgPyAkKCc8ZGl2IGNsYXNzPVwic2xpY2stdHJhY2tcIi8+JykuYXBwZW5kVG8oXy4kc2xpZGVyKVxuICAgICAgICA6IF8uJHNsaWRlcy53cmFwQWxsKCc8ZGl2IGNsYXNzPVwic2xpY2stdHJhY2tcIi8+JykucGFyZW50KCk7XG5cbiAgICBfLiRsaXN0ID0gXy4kc2xpZGVUcmFjay53cmFwKCc8ZGl2IGNsYXNzPVwic2xpY2stbGlzdFwiLz4nKS5wYXJlbnQoKTtcbiAgICBfLiRzbGlkZVRyYWNrLmNzcyhcIm9wYWNpdHlcIiwgMCk7XG5cbiAgICBpZiAoXy5vcHRpb25zLmNlbnRlck1vZGUgPT09IHRydWUgfHwgXy5vcHRpb25zLnN3aXBlVG9TbGlkZSA9PT0gdHJ1ZSkge1xuICAgICAgXy5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsID0gMTtcbiAgICB9XG5cbiAgICAkKFwiaW1nW2RhdGEtbGF6eV1cIiwgXy4kc2xpZGVyKS5ub3QoXCJbc3JjXVwiKS5hZGRDbGFzcyhcInNsaWNrLWxvYWRpbmdcIik7XG5cbiAgICBfLnNldHVwSW5maW5pdGUoKTtcblxuICAgIF8uYnVpbGRBcnJvd3MoKTtcblxuICAgIF8uYnVpbGREb3RzKCk7XG5cbiAgICBfLnVwZGF0ZURvdHMoKTtcblxuICAgIF8uc2V0U2xpZGVDbGFzc2VzKHR5cGVvZiBfLmN1cnJlbnRTbGlkZSA9PT0gXCJudW1iZXJcIiA/IF8uY3VycmVudFNsaWRlIDogMCk7XG5cbiAgICBpZiAoXy5vcHRpb25zLmRyYWdnYWJsZSA9PT0gdHJ1ZSkge1xuICAgICAgXy4kbGlzdC5hZGRDbGFzcyhcImRyYWdnYWJsZVwiKTtcbiAgICB9XG4gIH07XG5cbiAgU2xpY2sucHJvdG90eXBlLmJ1aWxkUm93cyA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgXyA9IHRoaXMsXG4gICAgICBhLFxuICAgICAgYixcbiAgICAgIGMsXG4gICAgICBuZXdTbGlkZXMsXG4gICAgICBudW1PZlNsaWRlcyxcbiAgICAgIG9yaWdpbmFsU2xpZGVzLFxuICAgICAgc2xpZGVzUGVyU2VjdGlvbjtcblxuICAgIG5ld1NsaWRlcyA9IGRvY3VtZW50LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKTtcbiAgICBvcmlnaW5hbFNsaWRlcyA9IF8uJHNsaWRlci5jaGlsZHJlbigpO1xuXG4gICAgaWYgKF8ub3B0aW9ucy5yb3dzID4gMCkge1xuICAgICAgc2xpZGVzUGVyU2VjdGlvbiA9IF8ub3B0aW9ucy5zbGlkZXNQZXJSb3cgKiBfLm9wdGlvbnMucm93cztcbiAgICAgIG51bU9mU2xpZGVzID0gTWF0aC5jZWlsKG9yaWdpbmFsU2xpZGVzLmxlbmd0aCAvIHNsaWRlc1BlclNlY3Rpb24pO1xuXG4gICAgICBmb3IgKGEgPSAwOyBhIDwgbnVtT2ZTbGlkZXM7IGErKykge1xuICAgICAgICB2YXIgc2xpZGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgICBmb3IgKGIgPSAwOyBiIDwgXy5vcHRpb25zLnJvd3M7IGIrKykge1xuICAgICAgICAgIHZhciByb3cgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgICAgIGZvciAoYyA9IDA7IGMgPCBfLm9wdGlvbnMuc2xpZGVzUGVyUm93OyBjKyspIHtcbiAgICAgICAgICAgIHZhciB0YXJnZXQgPVxuICAgICAgICAgICAgICBhICogc2xpZGVzUGVyU2VjdGlvbiArIChiICogXy5vcHRpb25zLnNsaWRlc1BlclJvdyArIGMpO1xuICAgICAgICAgICAgaWYgKG9yaWdpbmFsU2xpZGVzLmdldCh0YXJnZXQpKSB7XG4gICAgICAgICAgICAgIHJvdy5hcHBlbmRDaGlsZChvcmlnaW5hbFNsaWRlcy5nZXQodGFyZ2V0KSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIHNsaWRlLmFwcGVuZENoaWxkKHJvdyk7XG4gICAgICAgIH1cbiAgICAgICAgbmV3U2xpZGVzLmFwcGVuZENoaWxkKHNsaWRlKTtcbiAgICAgIH1cblxuICAgICAgXy4kc2xpZGVyLmVtcHR5KCkuYXBwZW5kKG5ld1NsaWRlcyk7XG4gICAgICBfLiRzbGlkZXJcbiAgICAgICAgLmNoaWxkcmVuKClcbiAgICAgICAgLmNoaWxkcmVuKClcbiAgICAgICAgLmNoaWxkcmVuKClcbiAgICAgICAgLmNzcyh7XG4gICAgICAgICAgd2lkdGg6IDEwMCAvIF8ub3B0aW9ucy5zbGlkZXNQZXJSb3cgKyBcIiVcIixcbiAgICAgICAgICBkaXNwbGF5OiBcImlubGluZS1ibG9ja1wiLFxuICAgICAgICB9KTtcbiAgICB9XG4gIH07XG5cbiAgU2xpY2sucHJvdG90eXBlLmNoZWNrUmVzcG9uc2l2ZSA9IGZ1bmN0aW9uIChpbml0aWFsLCBmb3JjZVVwZGF0ZSkge1xuICAgIHZhciBfID0gdGhpcyxcbiAgICAgIGJyZWFrcG9pbnQsXG4gICAgICB0YXJnZXRCcmVha3BvaW50LFxuICAgICAgcmVzcG9uZFRvV2lkdGgsXG4gICAgICB0cmlnZ2VyQnJlYWtwb2ludCA9IGZhbHNlO1xuICAgIHZhciBzbGlkZXJXaWR0aCA9IF8uJHNsaWRlci53aWR0aCgpO1xuICAgIHZhciB3aW5kb3dXaWR0aCA9IHdpbmRvdy5pbm5lcldpZHRoIHx8ICQod2luZG93KS53aWR0aCgpO1xuXG4gICAgaWYgKF8ucmVzcG9uZFRvID09PSBcIndpbmRvd1wiKSB7XG4gICAgICByZXNwb25kVG9XaWR0aCA9IHdpbmRvd1dpZHRoO1xuICAgIH0gZWxzZSBpZiAoXy5yZXNwb25kVG8gPT09IFwic2xpZGVyXCIpIHtcbiAgICAgIHJlc3BvbmRUb1dpZHRoID0gc2xpZGVyV2lkdGg7XG4gICAgfSBlbHNlIGlmIChfLnJlc3BvbmRUbyA9PT0gXCJtaW5cIikge1xuICAgICAgcmVzcG9uZFRvV2lkdGggPSBNYXRoLm1pbih3aW5kb3dXaWR0aCwgc2xpZGVyV2lkdGgpO1xuICAgIH1cblxuICAgIGlmIChcbiAgICAgIF8ub3B0aW9ucy5yZXNwb25zaXZlICYmXG4gICAgICBfLm9wdGlvbnMucmVzcG9uc2l2ZS5sZW5ndGggJiZcbiAgICAgIF8ub3B0aW9ucy5yZXNwb25zaXZlICE9PSBudWxsXG4gICAgKSB7XG4gICAgICB0YXJnZXRCcmVha3BvaW50ID0gbnVsbDtcblxuICAgICAgZm9yIChicmVha3BvaW50IGluIF8uYnJlYWtwb2ludHMpIHtcbiAgICAgICAgaWYgKF8uYnJlYWtwb2ludHMuaGFzT3duUHJvcGVydHkoYnJlYWtwb2ludCkpIHtcbiAgICAgICAgICBpZiAoXy5vcmlnaW5hbFNldHRpbmdzLm1vYmlsZUZpcnN0ID09PSBmYWxzZSkge1xuICAgICAgICAgICAgaWYgKHJlc3BvbmRUb1dpZHRoIDwgXy5icmVha3BvaW50c1ticmVha3BvaW50XSkge1xuICAgICAgICAgICAgICB0YXJnZXRCcmVha3BvaW50ID0gXy5icmVha3BvaW50c1ticmVha3BvaW50XTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaWYgKHJlc3BvbmRUb1dpZHRoID4gXy5icmVha3BvaW50c1ticmVha3BvaW50XSkge1xuICAgICAgICAgICAgICB0YXJnZXRCcmVha3BvaW50ID0gXy5icmVha3BvaW50c1ticmVha3BvaW50XTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKHRhcmdldEJyZWFrcG9pbnQgIT09IG51bGwpIHtcbiAgICAgICAgaWYgKF8uYWN0aXZlQnJlYWtwb2ludCAhPT0gbnVsbCkge1xuICAgICAgICAgIGlmICh0YXJnZXRCcmVha3BvaW50ICE9PSBfLmFjdGl2ZUJyZWFrcG9pbnQgfHwgZm9yY2VVcGRhdGUpIHtcbiAgICAgICAgICAgIF8uYWN0aXZlQnJlYWtwb2ludCA9IHRhcmdldEJyZWFrcG9pbnQ7XG4gICAgICAgICAgICBpZiAoXy5icmVha3BvaW50U2V0dGluZ3NbdGFyZ2V0QnJlYWtwb2ludF0gPT09IFwidW5zbGlja1wiKSB7XG4gICAgICAgICAgICAgIF8udW5zbGljayh0YXJnZXRCcmVha3BvaW50KTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIF8ub3B0aW9ucyA9ICQuZXh0ZW5kKFxuICAgICAgICAgICAgICAgIHt9LFxuICAgICAgICAgICAgICAgIF8ub3JpZ2luYWxTZXR0aW5ncyxcbiAgICAgICAgICAgICAgICBfLmJyZWFrcG9pbnRTZXR0aW5nc1t0YXJnZXRCcmVha3BvaW50XVxuICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICBpZiAoaW5pdGlhbCA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgICAgIF8uY3VycmVudFNsaWRlID0gXy5vcHRpb25zLmluaXRpYWxTbGlkZTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBfLnJlZnJlc2goaW5pdGlhbCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0cmlnZ2VyQnJlYWtwb2ludCA9IHRhcmdldEJyZWFrcG9pbnQ7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIF8uYWN0aXZlQnJlYWtwb2ludCA9IHRhcmdldEJyZWFrcG9pbnQ7XG4gICAgICAgICAgaWYgKF8uYnJlYWtwb2ludFNldHRpbmdzW3RhcmdldEJyZWFrcG9pbnRdID09PSBcInVuc2xpY2tcIikge1xuICAgICAgICAgICAgXy51bnNsaWNrKHRhcmdldEJyZWFrcG9pbnQpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBfLm9wdGlvbnMgPSAkLmV4dGVuZChcbiAgICAgICAgICAgICAge30sXG4gICAgICAgICAgICAgIF8ub3JpZ2luYWxTZXR0aW5ncyxcbiAgICAgICAgICAgICAgXy5icmVha3BvaW50U2V0dGluZ3NbdGFyZ2V0QnJlYWtwb2ludF1cbiAgICAgICAgICAgICk7XG4gICAgICAgICAgICBpZiAoaW5pdGlhbCA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgICBfLmN1cnJlbnRTbGlkZSA9IF8ub3B0aW9ucy5pbml0aWFsU2xpZGU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBfLnJlZnJlc2goaW5pdGlhbCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHRyaWdnZXJCcmVha3BvaW50ID0gdGFyZ2V0QnJlYWtwb2ludDtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKF8uYWN0aXZlQnJlYWtwb2ludCAhPT0gbnVsbCkge1xuICAgICAgICAgIF8uYWN0aXZlQnJlYWtwb2ludCA9IG51bGw7XG4gICAgICAgICAgXy5vcHRpb25zID0gXy5vcmlnaW5hbFNldHRpbmdzO1xuICAgICAgICAgIGlmIChpbml0aWFsID09PSB0cnVlKSB7XG4gICAgICAgICAgICBfLmN1cnJlbnRTbGlkZSA9IF8ub3B0aW9ucy5pbml0aWFsU2xpZGU7XG4gICAgICAgICAgfVxuICAgICAgICAgIF8ucmVmcmVzaChpbml0aWFsKTtcbiAgICAgICAgICB0cmlnZ2VyQnJlYWtwb2ludCA9IHRhcmdldEJyZWFrcG9pbnQ7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLy8gb25seSB0cmlnZ2VyIGJyZWFrcG9pbnRzIGR1cmluZyBhbiBhY3R1YWwgYnJlYWsuIG5vdCBvbiBpbml0aWFsaXplLlxuICAgICAgaWYgKCFpbml0aWFsICYmIHRyaWdnZXJCcmVha3BvaW50ICE9PSBmYWxzZSkge1xuICAgICAgICBfLiRzbGlkZXIudHJpZ2dlcihcImJyZWFrcG9pbnRcIiwgW18sIHRyaWdnZXJCcmVha3BvaW50XSk7XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG4gIFNsaWNrLnByb3RvdHlwZS5jaGFuZ2VTbGlkZSA9IGZ1bmN0aW9uIChldmVudCwgZG9udEFuaW1hdGUpIHtcbiAgICB2YXIgXyA9IHRoaXMsXG4gICAgICAkdGFyZ2V0ID0gJChldmVudC5jdXJyZW50VGFyZ2V0KSxcbiAgICAgIGluZGV4T2Zmc2V0LFxuICAgICAgc2xpZGVPZmZzZXQsXG4gICAgICB1bmV2ZW5PZmZzZXQ7XG5cbiAgICAvLyBJZiB0YXJnZXQgaXMgYSBsaW5rLCBwcmV2ZW50IGRlZmF1bHQgYWN0aW9uLlxuICAgIGlmICgkdGFyZ2V0LmlzKFwiYVwiKSkge1xuICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICB9XG5cbiAgICAvLyBJZiB0YXJnZXQgaXMgbm90IHRoZSA8bGk+IGVsZW1lbnQgKGllOiBhIGNoaWxkKSwgZmluZCB0aGUgPGxpPi5cbiAgICBpZiAoISR0YXJnZXQuaXMoXCJsaVwiKSkge1xuICAgICAgJHRhcmdldCA9ICR0YXJnZXQuY2xvc2VzdChcImxpXCIpO1xuICAgIH1cblxuICAgIHVuZXZlbk9mZnNldCA9IF8uc2xpZGVDb3VudCAlIF8ub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCAhPT0gMDtcbiAgICBpbmRleE9mZnNldCA9IHVuZXZlbk9mZnNldFxuICAgICAgPyAwXG4gICAgICA6IChfLnNsaWRlQ291bnQgLSBfLmN1cnJlbnRTbGlkZSkgJSBfLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGw7XG5cbiAgICBzd2l0Y2ggKGV2ZW50LmRhdGEubWVzc2FnZSkge1xuICAgICAgY2FzZSBcInByZXZpb3VzXCI6XG4gICAgICAgIHNsaWRlT2Zmc2V0ID1cbiAgICAgICAgICBpbmRleE9mZnNldCA9PT0gMFxuICAgICAgICAgICAgPyBfLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGxcbiAgICAgICAgICAgIDogXy5vcHRpb25zLnNsaWRlc1RvU2hvdyAtIGluZGV4T2Zmc2V0O1xuICAgICAgICBpZiAoXy5zbGlkZUNvdW50ID4gXy5vcHRpb25zLnNsaWRlc1RvU2hvdykge1xuICAgICAgICAgIF8uc2xpZGVIYW5kbGVyKF8uY3VycmVudFNsaWRlIC0gc2xpZGVPZmZzZXQsIGZhbHNlLCBkb250QW5pbWF0ZSk7XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgXCJuZXh0XCI6XG4gICAgICAgIHNsaWRlT2Zmc2V0ID1cbiAgICAgICAgICBpbmRleE9mZnNldCA9PT0gMCA/IF8ub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCA6IGluZGV4T2Zmc2V0O1xuICAgICAgICBpZiAoXy5zbGlkZUNvdW50ID4gXy5vcHRpb25zLnNsaWRlc1RvU2hvdykge1xuICAgICAgICAgIF8uc2xpZGVIYW5kbGVyKF8uY3VycmVudFNsaWRlICsgc2xpZGVPZmZzZXQsIGZhbHNlLCBkb250QW5pbWF0ZSk7XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgXCJpbmRleFwiOlxuICAgICAgICB2YXIgaW5kZXggPVxuICAgICAgICAgIGV2ZW50LmRhdGEuaW5kZXggPT09IDBcbiAgICAgICAgICAgID8gMFxuICAgICAgICAgICAgOiBldmVudC5kYXRhLmluZGV4IHx8ICR0YXJnZXQuaW5kZXgoKSAqIF8ub3B0aW9ucy5zbGlkZXNUb1Njcm9sbDtcblxuICAgICAgICBfLnNsaWRlSGFuZGxlcihfLmNoZWNrTmF2aWdhYmxlKGluZGV4KSwgZmFsc2UsIGRvbnRBbmltYXRlKTtcbiAgICAgICAgJHRhcmdldC5jaGlsZHJlbigpLnRyaWdnZXIoXCJmb2N1c1wiKTtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gIH07XG5cbiAgU2xpY2sucHJvdG90eXBlLmNoZWNrTmF2aWdhYmxlID0gZnVuY3Rpb24gKGluZGV4KSB7XG4gICAgdmFyIF8gPSB0aGlzLFxuICAgICAgbmF2aWdhYmxlcyxcbiAgICAgIHByZXZOYXZpZ2FibGU7XG5cbiAgICBuYXZpZ2FibGVzID0gXy5nZXROYXZpZ2FibGVJbmRleGVzKCk7XG4gICAgcHJldk5hdmlnYWJsZSA9IDA7XG4gICAgaWYgKGluZGV4ID4gbmF2aWdhYmxlc1tuYXZpZ2FibGVzLmxlbmd0aCAtIDFdKSB7XG4gICAgICBpbmRleCA9IG5hdmlnYWJsZXNbbmF2aWdhYmxlcy5sZW5ndGggLSAxXTtcbiAgICB9IGVsc2Uge1xuICAgICAgZm9yICh2YXIgbiBpbiBuYXZpZ2FibGVzKSB7XG4gICAgICAgIGlmIChpbmRleCA8IG5hdmlnYWJsZXNbbl0pIHtcbiAgICAgICAgICBpbmRleCA9IHByZXZOYXZpZ2FibGU7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgcHJldk5hdmlnYWJsZSA9IG5hdmlnYWJsZXNbbl07XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIGluZGV4O1xuICB9O1xuXG4gIFNsaWNrLnByb3RvdHlwZS5jbGVhblVwRXZlbnRzID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBfID0gdGhpcztcblxuICAgIGlmIChfLm9wdGlvbnMuZG90cyAmJiBfLiRkb3RzICE9PSBudWxsKSB7XG4gICAgICAkKFwibGlcIiwgXy4kZG90cylcbiAgICAgICAgLm9mZihcImNsaWNrLnNsaWNrXCIsIF8uY2hhbmdlU2xpZGUpXG4gICAgICAgIC5vZmYoXCJtb3VzZWVudGVyLnNsaWNrXCIsICQucHJveHkoXy5pbnRlcnJ1cHQsIF8sIHRydWUpKVxuICAgICAgICAub2ZmKFwibW91c2VsZWF2ZS5zbGlja1wiLCAkLnByb3h5KF8uaW50ZXJydXB0LCBfLCBmYWxzZSkpO1xuXG4gICAgICBpZiAoXy5vcHRpb25zLmFjY2Vzc2liaWxpdHkgPT09IHRydWUpIHtcbiAgICAgICAgXy4kZG90cy5vZmYoXCJrZXlkb3duLnNsaWNrXCIsIF8ua2V5SGFuZGxlcik7XG4gICAgICB9XG4gICAgfVxuXG4gICAgXy4kc2xpZGVyLm9mZihcImZvY3VzLnNsaWNrIGJsdXIuc2xpY2tcIik7XG5cbiAgICBpZiAoXy5vcHRpb25zLmFycm93cyA9PT0gdHJ1ZSAmJiBfLnNsaWRlQ291bnQgPiBfLm9wdGlvbnMuc2xpZGVzVG9TaG93KSB7XG4gICAgICBfLiRwcmV2QXJyb3cgJiYgXy4kcHJldkFycm93Lm9mZihcImNsaWNrLnNsaWNrXCIsIF8uY2hhbmdlU2xpZGUpO1xuICAgICAgXy4kbmV4dEFycm93ICYmIF8uJG5leHRBcnJvdy5vZmYoXCJjbGljay5zbGlja1wiLCBfLmNoYW5nZVNsaWRlKTtcblxuICAgICAgaWYgKF8ub3B0aW9ucy5hY2Nlc3NpYmlsaXR5ID09PSB0cnVlKSB7XG4gICAgICAgIF8uJHByZXZBcnJvdyAmJiBfLiRwcmV2QXJyb3cub2ZmKFwia2V5ZG93bi5zbGlja1wiLCBfLmtleUhhbmRsZXIpO1xuICAgICAgICBfLiRuZXh0QXJyb3cgJiYgXy4kbmV4dEFycm93Lm9mZihcImtleWRvd24uc2xpY2tcIiwgXy5rZXlIYW5kbGVyKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBfLiRsaXN0Lm9mZihcInRvdWNoc3RhcnQuc2xpY2sgbW91c2Vkb3duLnNsaWNrXCIsIF8uc3dpcGVIYW5kbGVyKTtcbiAgICBfLiRsaXN0Lm9mZihcInRvdWNobW92ZS5zbGljayBtb3VzZW1vdmUuc2xpY2tcIiwgXy5zd2lwZUhhbmRsZXIpO1xuICAgIF8uJGxpc3Qub2ZmKFwidG91Y2hlbmQuc2xpY2sgbW91c2V1cC5zbGlja1wiLCBfLnN3aXBlSGFuZGxlcik7XG4gICAgXy4kbGlzdC5vZmYoXCJ0b3VjaGNhbmNlbC5zbGljayBtb3VzZWxlYXZlLnNsaWNrXCIsIF8uc3dpcGVIYW5kbGVyKTtcblxuICAgIF8uJGxpc3Qub2ZmKFwiY2xpY2suc2xpY2tcIiwgXy5jbGlja0hhbmRsZXIpO1xuXG4gICAgJChkb2N1bWVudCkub2ZmKF8udmlzaWJpbGl0eUNoYW5nZSwgXy52aXNpYmlsaXR5KTtcblxuICAgIF8uY2xlYW5VcFNsaWRlRXZlbnRzKCk7XG5cbiAgICBpZiAoXy5vcHRpb25zLmFjY2Vzc2liaWxpdHkgPT09IHRydWUpIHtcbiAgICAgIF8uJGxpc3Qub2ZmKFwia2V5ZG93bi5zbGlja1wiLCBfLmtleUhhbmRsZXIpO1xuICAgIH1cblxuICAgIGlmIChfLm9wdGlvbnMuZm9jdXNPblNlbGVjdCA9PT0gdHJ1ZSkge1xuICAgICAgJChfLiRzbGlkZVRyYWNrKS5jaGlsZHJlbigpLm9mZihcImNsaWNrLnNsaWNrXCIsIF8uc2VsZWN0SGFuZGxlcik7XG4gICAgfVxuXG4gICAgJCh3aW5kb3cpLm9mZihcbiAgICAgIFwib3JpZW50YXRpb25jaGFuZ2Uuc2xpY2suc2xpY2stXCIgKyBfLmluc3RhbmNlVWlkLFxuICAgICAgXy5vcmllbnRhdGlvbkNoYW5nZVxuICAgICk7XG5cbiAgICAkKHdpbmRvdykub2ZmKFwicmVzaXplLnNsaWNrLnNsaWNrLVwiICsgXy5pbnN0YW5jZVVpZCwgXy5yZXNpemUpO1xuXG4gICAgJChcIltkcmFnZ2FibGUhPXRydWVdXCIsIF8uJHNsaWRlVHJhY2spLm9mZihcImRyYWdzdGFydFwiLCBfLnByZXZlbnREZWZhdWx0KTtcblxuICAgICQod2luZG93KS5vZmYoXCJsb2FkLnNsaWNrLnNsaWNrLVwiICsgXy5pbnN0YW5jZVVpZCwgXy5zZXRQb3NpdGlvbik7XG4gIH07XG5cbiAgU2xpY2sucHJvdG90eXBlLmNsZWFuVXBTbGlkZUV2ZW50cyA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgXyA9IHRoaXM7XG5cbiAgICBfLiRsaXN0Lm9mZihcIm1vdXNlZW50ZXIuc2xpY2tcIiwgJC5wcm94eShfLmludGVycnVwdCwgXywgdHJ1ZSkpO1xuICAgIF8uJGxpc3Qub2ZmKFwibW91c2VsZWF2ZS5zbGlja1wiLCAkLnByb3h5KF8uaW50ZXJydXB0LCBfLCBmYWxzZSkpO1xuICB9O1xuXG4gIFNsaWNrLnByb3RvdHlwZS5jbGVhblVwUm93cyA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgXyA9IHRoaXMsXG4gICAgICBvcmlnaW5hbFNsaWRlcztcblxuICAgIGlmIChfLm9wdGlvbnMucm93cyA+IDApIHtcbiAgICAgIG9yaWdpbmFsU2xpZGVzID0gXy4kc2xpZGVzLmNoaWxkcmVuKCkuY2hpbGRyZW4oKTtcbiAgICAgIG9yaWdpbmFsU2xpZGVzLnJlbW92ZUF0dHIoXCJzdHlsZVwiKTtcbiAgICAgIF8uJHNsaWRlci5lbXB0eSgpLmFwcGVuZChvcmlnaW5hbFNsaWRlcyk7XG4gICAgfVxuICB9O1xuXG4gIFNsaWNrLnByb3RvdHlwZS5jbGlja0hhbmRsZXIgPSBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICB2YXIgXyA9IHRoaXM7XG5cbiAgICBpZiAoXy5zaG91bGRDbGljayA9PT0gZmFsc2UpIHtcbiAgICAgIGV2ZW50LnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpO1xuICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIH1cbiAgfTtcblxuICBTbGljay5wcm90b3R5cGUuZGVzdHJveSA9IGZ1bmN0aW9uIChyZWZyZXNoKSB7XG4gICAgdmFyIF8gPSB0aGlzO1xuXG4gICAgXy5hdXRvUGxheUNsZWFyKCk7XG5cbiAgICBfLnRvdWNoT2JqZWN0ID0ge307XG5cbiAgICBfLmNsZWFuVXBFdmVudHMoKTtcblxuICAgICQoXCIuc2xpY2stY2xvbmVkXCIsIF8uJHNsaWRlcikuZGV0YWNoKCk7XG5cbiAgICBpZiAoXy4kZG90cykge1xuICAgICAgXy4kZG90cy5yZW1vdmUoKTtcbiAgICB9XG5cbiAgICBpZiAoXy4kcHJldkFycm93ICYmIF8uJHByZXZBcnJvdy5sZW5ndGgpIHtcbiAgICAgIF8uJHByZXZBcnJvd1xuICAgICAgICAucmVtb3ZlQ2xhc3MoXCJzbGljay1kaXNhYmxlZCBzbGljay1hcnJvdyBzbGljay1oaWRkZW5cIilcbiAgICAgICAgLnJlbW92ZUF0dHIoXCJhcmlhLWhpZGRlbiBhcmlhLWRpc2FibGVkIHRhYmluZGV4XCIpXG4gICAgICAgIC5jc3MoXCJkaXNwbGF5XCIsIFwiXCIpO1xuXG4gICAgICBpZiAoXy5odG1sRXhwci50ZXN0KF8ub3B0aW9ucy5wcmV2QXJyb3cpKSB7XG4gICAgICAgIF8uJHByZXZBcnJvdy5yZW1vdmUoKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoXy4kbmV4dEFycm93ICYmIF8uJG5leHRBcnJvdy5sZW5ndGgpIHtcbiAgICAgIF8uJG5leHRBcnJvd1xuICAgICAgICAucmVtb3ZlQ2xhc3MoXCJzbGljay1kaXNhYmxlZCBzbGljay1hcnJvdyBzbGljay1oaWRkZW5cIilcbiAgICAgICAgLnJlbW92ZUF0dHIoXCJhcmlhLWhpZGRlbiBhcmlhLWRpc2FibGVkIHRhYmluZGV4XCIpXG4gICAgICAgIC5jc3MoXCJkaXNwbGF5XCIsIFwiXCIpO1xuXG4gICAgICBpZiAoXy5odG1sRXhwci50ZXN0KF8ub3B0aW9ucy5uZXh0QXJyb3cpKSB7XG4gICAgICAgIF8uJG5leHRBcnJvdy5yZW1vdmUoKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoXy4kc2xpZGVzKSB7XG4gICAgICBfLiRzbGlkZXNcbiAgICAgICAgLnJlbW92ZUNsYXNzKFxuICAgICAgICAgIFwic2xpY2stc2xpZGUgc2xpY2stYWN0aXZlIHNsaWNrLWNlbnRlciBzbGljay12aXNpYmxlIHNsaWNrLWN1cnJlbnRcIlxuICAgICAgICApXG4gICAgICAgIC5yZW1vdmVBdHRyKFwiYXJpYS1oaWRkZW5cIilcbiAgICAgICAgLnJlbW92ZUF0dHIoXCJkYXRhLXNsaWNrLWluZGV4XCIpXG4gICAgICAgIC5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAkKHRoaXMpLmF0dHIoXCJzdHlsZVwiLCAkKHRoaXMpLmRhdGEoXCJvcmlnaW5hbFN0eWxpbmdcIikpO1xuICAgICAgICB9KTtcblxuICAgICAgXy4kc2xpZGVUcmFjay5jaGlsZHJlbih0aGlzLm9wdGlvbnMuc2xpZGUpLmRldGFjaCgpO1xuXG4gICAgICBfLiRzbGlkZVRyYWNrLmRldGFjaCgpO1xuXG4gICAgICBfLiRsaXN0LmRldGFjaCgpO1xuXG4gICAgICBfLiRzbGlkZXIuYXBwZW5kKF8uJHNsaWRlcyk7XG4gICAgfVxuXG4gICAgXy5jbGVhblVwUm93cygpO1xuXG4gICAgXy4kc2xpZGVyLnJlbW92ZUNsYXNzKFwic2xpY2stc2xpZGVyXCIpO1xuICAgIF8uJHNsaWRlci5yZW1vdmVDbGFzcyhcInNsaWNrLWluaXRpYWxpemVkXCIpO1xuICAgIF8uJHNsaWRlci5yZW1vdmVDbGFzcyhcInNsaWNrLWRvdHRlZFwiKTtcblxuICAgIF8udW5zbGlja2VkID0gdHJ1ZTtcblxuICAgIGlmICghcmVmcmVzaCkge1xuICAgICAgXy4kc2xpZGVyLnRyaWdnZXIoXCJkZXN0cm95XCIsIFtfXSk7XG4gICAgfVxuICB9O1xuXG4gIFNsaWNrLnByb3RvdHlwZS5kaXNhYmxlVHJhbnNpdGlvbiA9IGZ1bmN0aW9uIChzbGlkZSkge1xuICAgIHZhciBfID0gdGhpcyxcbiAgICAgIHRyYW5zaXRpb24gPSB7fTtcblxuICAgIHRyYW5zaXRpb25bXy50cmFuc2l0aW9uVHlwZV0gPSBcIlwiO1xuXG4gICAgaWYgKF8ub3B0aW9ucy5mYWRlID09PSBmYWxzZSkge1xuICAgICAgXy4kc2xpZGVUcmFjay5jc3ModHJhbnNpdGlvbik7XG4gICAgfSBlbHNlIHtcbiAgICAgIF8uJHNsaWRlcy5lcShzbGlkZSkuY3NzKHRyYW5zaXRpb24pO1xuICAgIH1cbiAgfTtcblxuICBTbGljay5wcm90b3R5cGUuZmFkZVNsaWRlID0gZnVuY3Rpb24gKHNsaWRlSW5kZXgsIGNhbGxiYWNrKSB7XG4gICAgdmFyIF8gPSB0aGlzO1xuXG4gICAgaWYgKF8uY3NzVHJhbnNpdGlvbnMgPT09IGZhbHNlKSB7XG4gICAgICBfLiRzbGlkZXMuZXEoc2xpZGVJbmRleCkuY3NzKHtcbiAgICAgICAgekluZGV4OiBfLm9wdGlvbnMuekluZGV4LFxuICAgICAgfSk7XG5cbiAgICAgIF8uJHNsaWRlcy5lcShzbGlkZUluZGV4KS5hbmltYXRlKFxuICAgICAgICB7XG4gICAgICAgICAgb3BhY2l0eTogMSxcbiAgICAgICAgfSxcbiAgICAgICAgXy5vcHRpb25zLnNwZWVkLFxuICAgICAgICBfLm9wdGlvbnMuZWFzaW5nLFxuICAgICAgICBjYWxsYmFja1xuICAgICAgKTtcbiAgICB9IGVsc2Uge1xuICAgICAgXy5hcHBseVRyYW5zaXRpb24oc2xpZGVJbmRleCk7XG5cbiAgICAgIF8uJHNsaWRlcy5lcShzbGlkZUluZGV4KS5jc3Moe1xuICAgICAgICBvcGFjaXR5OiAxLFxuICAgICAgICB6SW5kZXg6IF8ub3B0aW9ucy56SW5kZXgsXG4gICAgICB9KTtcblxuICAgICAgaWYgKGNhbGxiYWNrKSB7XG4gICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgIF8uZGlzYWJsZVRyYW5zaXRpb24oc2xpZGVJbmRleCk7XG5cbiAgICAgICAgICBjYWxsYmFjay5jYWxsKCk7XG4gICAgICAgIH0sIF8ub3B0aW9ucy5zcGVlZCk7XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG4gIFNsaWNrLnByb3RvdHlwZS5mYWRlU2xpZGVPdXQgPSBmdW5jdGlvbiAoc2xpZGVJbmRleCkge1xuICAgIHZhciBfID0gdGhpcztcblxuICAgIGlmIChfLmNzc1RyYW5zaXRpb25zID09PSBmYWxzZSkge1xuICAgICAgXy4kc2xpZGVzLmVxKHNsaWRlSW5kZXgpLmFuaW1hdGUoXG4gICAgICAgIHtcbiAgICAgICAgICBvcGFjaXR5OiAwLFxuICAgICAgICAgIHpJbmRleDogXy5vcHRpb25zLnpJbmRleCAtIDIsXG4gICAgICAgIH0sXG4gICAgICAgIF8ub3B0aW9ucy5zcGVlZCxcbiAgICAgICAgXy5vcHRpb25zLmVhc2luZ1xuICAgICAgKTtcbiAgICB9IGVsc2Uge1xuICAgICAgXy5hcHBseVRyYW5zaXRpb24oc2xpZGVJbmRleCk7XG5cbiAgICAgIF8uJHNsaWRlcy5lcShzbGlkZUluZGV4KS5jc3Moe1xuICAgICAgICBvcGFjaXR5OiAwLFxuICAgICAgICB6SW5kZXg6IF8ub3B0aW9ucy56SW5kZXggLSAyLFxuICAgICAgfSk7XG4gICAgfVxuICB9O1xuXG4gIFNsaWNrLnByb3RvdHlwZS5maWx0ZXJTbGlkZXMgPSBTbGljay5wcm90b3R5cGUuc2xpY2tGaWx0ZXIgPSBmdW5jdGlvbiAoXG4gICAgZmlsdGVyXG4gICkge1xuICAgIHZhciBfID0gdGhpcztcblxuICAgIGlmIChmaWx0ZXIgIT09IG51bGwpIHtcbiAgICAgIF8uJHNsaWRlc0NhY2hlID0gXy4kc2xpZGVzO1xuXG4gICAgICBfLnVubG9hZCgpO1xuXG4gICAgICBfLiRzbGlkZVRyYWNrLmNoaWxkcmVuKHRoaXMub3B0aW9ucy5zbGlkZSkuZGV0YWNoKCk7XG5cbiAgICAgIF8uJHNsaWRlc0NhY2hlLmZpbHRlcihmaWx0ZXIpLmFwcGVuZFRvKF8uJHNsaWRlVHJhY2spO1xuXG4gICAgICBfLnJlaW5pdCgpO1xuICAgIH1cbiAgfTtcblxuICBTbGljay5wcm90b3R5cGUuZm9jdXNIYW5kbGVyID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBfID0gdGhpcztcblxuICAgIF8uJHNsaWRlclxuICAgICAgLm9mZihcImZvY3VzLnNsaWNrIGJsdXIuc2xpY2tcIilcbiAgICAgIC5vbihcImZvY3VzLnNsaWNrIGJsdXIuc2xpY2tcIiwgXCIqXCIsIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICBldmVudC5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKTtcbiAgICAgICAgdmFyICRzZiA9ICQodGhpcyk7XG5cbiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgaWYgKF8ub3B0aW9ucy5wYXVzZU9uRm9jdXMpIHtcbiAgICAgICAgICAgIF8uZm9jdXNzZWQgPSAkc2YuaXMoXCI6Zm9jdXNcIik7XG4gICAgICAgICAgICBfLmF1dG9QbGF5KCk7XG4gICAgICAgICAgfVxuICAgICAgICB9LCAwKTtcbiAgICAgIH0pO1xuICB9O1xuXG4gIFNsaWNrLnByb3RvdHlwZS5nZXRDdXJyZW50ID0gU2xpY2sucHJvdG90eXBlLnNsaWNrQ3VycmVudFNsaWRlID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBfID0gdGhpcztcbiAgICByZXR1cm4gXy5jdXJyZW50U2xpZGU7XG4gIH07XG5cbiAgU2xpY2sucHJvdG90eXBlLmdldERvdENvdW50ID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBfID0gdGhpcztcblxuICAgIHZhciBicmVha1BvaW50ID0gMDtcbiAgICB2YXIgY291bnRlciA9IDA7XG4gICAgdmFyIHBhZ2VyUXR5ID0gMDtcblxuICAgIGlmIChfLm9wdGlvbnMuaW5maW5pdGUgPT09IHRydWUpIHtcbiAgICAgIGlmIChfLnNsaWRlQ291bnQgPD0gXy5vcHRpb25zLnNsaWRlc1RvU2hvdykge1xuICAgICAgICArK3BhZ2VyUXR5O1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgd2hpbGUgKGJyZWFrUG9pbnQgPCBfLnNsaWRlQ291bnQpIHtcbiAgICAgICAgICArK3BhZ2VyUXR5O1xuICAgICAgICAgIGJyZWFrUG9pbnQgPSBjb3VudGVyICsgXy5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsO1xuICAgICAgICAgIGNvdW50ZXIgKz1cbiAgICAgICAgICAgIF8ub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCA8PSBfLm9wdGlvbnMuc2xpZGVzVG9TaG93XG4gICAgICAgICAgICAgID8gXy5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsXG4gICAgICAgICAgICAgIDogXy5vcHRpb25zLnNsaWRlc1RvU2hvdztcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0gZWxzZSBpZiAoXy5vcHRpb25zLmNlbnRlck1vZGUgPT09IHRydWUpIHtcbiAgICAgIHBhZ2VyUXR5ID0gXy5zbGlkZUNvdW50O1xuICAgIH0gZWxzZSBpZiAoIV8ub3B0aW9ucy5hc05hdkZvcikge1xuICAgICAgcGFnZXJRdHkgPVxuICAgICAgICAxICtcbiAgICAgICAgTWF0aC5jZWlsKFxuICAgICAgICAgIChfLnNsaWRlQ291bnQgLSBfLm9wdGlvbnMuc2xpZGVzVG9TaG93KSAvIF8ub3B0aW9ucy5zbGlkZXNUb1Njcm9sbFxuICAgICAgICApO1xuICAgIH0gZWxzZSB7XG4gICAgICB3aGlsZSAoYnJlYWtQb2ludCA8IF8uc2xpZGVDb3VudCkge1xuICAgICAgICArK3BhZ2VyUXR5O1xuICAgICAgICBicmVha1BvaW50ID0gY291bnRlciArIF8ub3B0aW9ucy5zbGlkZXNUb1Njcm9sbDtcbiAgICAgICAgY291bnRlciArPVxuICAgICAgICAgIF8ub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCA8PSBfLm9wdGlvbnMuc2xpZGVzVG9TaG93XG4gICAgICAgICAgICA/IF8ub3B0aW9ucy5zbGlkZXNUb1Njcm9sbFxuICAgICAgICAgICAgOiBfLm9wdGlvbnMuc2xpZGVzVG9TaG93O1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBwYWdlclF0eSAtIDE7XG4gIH07XG5cbiAgU2xpY2sucHJvdG90eXBlLmdldExlZnQgPSBmdW5jdGlvbiAoc2xpZGVJbmRleCkge1xuICAgIHZhciBfID0gdGhpcyxcbiAgICAgIHRhcmdldExlZnQsXG4gICAgICB2ZXJ0aWNhbEhlaWdodCxcbiAgICAgIHZlcnRpY2FsT2Zmc2V0ID0gMCxcbiAgICAgIHRhcmdldFNsaWRlLFxuICAgICAgY29lZjtcblxuICAgIF8uc2xpZGVPZmZzZXQgPSAwO1xuICAgIHZlcnRpY2FsSGVpZ2h0ID0gXy4kc2xpZGVzLmZpcnN0KCkub3V0ZXJIZWlnaHQodHJ1ZSk7XG5cbiAgICBpZiAoXy5vcHRpb25zLmluZmluaXRlID09PSB0cnVlKSB7XG4gICAgICBpZiAoXy5zbGlkZUNvdW50ID4gXy5vcHRpb25zLnNsaWRlc1RvU2hvdykge1xuICAgICAgICBfLnNsaWRlT2Zmc2V0ID0gXy5zbGlkZVdpZHRoICogXy5vcHRpb25zLnNsaWRlc1RvU2hvdyAqIC0xO1xuICAgICAgICBjb2VmID0gLTE7XG5cbiAgICAgICAgaWYgKF8ub3B0aW9ucy52ZXJ0aWNhbCA9PT0gdHJ1ZSAmJiBfLm9wdGlvbnMuY2VudGVyTW9kZSA9PT0gdHJ1ZSkge1xuICAgICAgICAgIGlmIChfLm9wdGlvbnMuc2xpZGVzVG9TaG93ID09PSAyKSB7XG4gICAgICAgICAgICBjb2VmID0gLTEuNTtcbiAgICAgICAgICB9IGVsc2UgaWYgKF8ub3B0aW9ucy5zbGlkZXNUb1Nob3cgPT09IDEpIHtcbiAgICAgICAgICAgIGNvZWYgPSAtMjtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgdmVydGljYWxPZmZzZXQgPSB2ZXJ0aWNhbEhlaWdodCAqIF8ub3B0aW9ucy5zbGlkZXNUb1Nob3cgKiBjb2VmO1xuICAgICAgfVxuICAgICAgaWYgKF8uc2xpZGVDb3VudCAlIF8ub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCAhPT0gMCkge1xuICAgICAgICBpZiAoXG4gICAgICAgICAgc2xpZGVJbmRleCArIF8ub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCA+IF8uc2xpZGVDb3VudCAmJlxuICAgICAgICAgIF8uc2xpZGVDb3VudCA+IF8ub3B0aW9ucy5zbGlkZXNUb1Nob3dcbiAgICAgICAgKSB7XG4gICAgICAgICAgaWYgKHNsaWRlSW5kZXggPiBfLnNsaWRlQ291bnQpIHtcbiAgICAgICAgICAgIF8uc2xpZGVPZmZzZXQgPVxuICAgICAgICAgICAgICAoXy5vcHRpb25zLnNsaWRlc1RvU2hvdyAtIChzbGlkZUluZGV4IC0gXy5zbGlkZUNvdW50KSkgKlxuICAgICAgICAgICAgICBfLnNsaWRlV2lkdGggKlxuICAgICAgICAgICAgICAtMTtcbiAgICAgICAgICAgIHZlcnRpY2FsT2Zmc2V0ID1cbiAgICAgICAgICAgICAgKF8ub3B0aW9ucy5zbGlkZXNUb1Nob3cgLSAoc2xpZGVJbmRleCAtIF8uc2xpZGVDb3VudCkpICpcbiAgICAgICAgICAgICAgdmVydGljYWxIZWlnaHQgKlxuICAgICAgICAgICAgICAtMTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgXy5zbGlkZU9mZnNldCA9XG4gICAgICAgICAgICAgIChfLnNsaWRlQ291bnQgJSBfLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGwpICogXy5zbGlkZVdpZHRoICogLTE7XG4gICAgICAgICAgICB2ZXJ0aWNhbE9mZnNldCA9XG4gICAgICAgICAgICAgIChfLnNsaWRlQ291bnQgJSBfLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGwpICogdmVydGljYWxIZWlnaHQgKiAtMTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKHNsaWRlSW5kZXggKyBfLm9wdGlvbnMuc2xpZGVzVG9TaG93ID4gXy5zbGlkZUNvdW50KSB7XG4gICAgICAgIF8uc2xpZGVPZmZzZXQgPVxuICAgICAgICAgIChzbGlkZUluZGV4ICsgXy5vcHRpb25zLnNsaWRlc1RvU2hvdyAtIF8uc2xpZGVDb3VudCkgKiBfLnNsaWRlV2lkdGg7XG4gICAgICAgIHZlcnRpY2FsT2Zmc2V0ID1cbiAgICAgICAgICAoc2xpZGVJbmRleCArIF8ub3B0aW9ucy5zbGlkZXNUb1Nob3cgLSBfLnNsaWRlQ291bnQpICogdmVydGljYWxIZWlnaHQ7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKF8uc2xpZGVDb3VudCA8PSBfLm9wdGlvbnMuc2xpZGVzVG9TaG93KSB7XG4gICAgICBfLnNsaWRlT2Zmc2V0ID0gMDtcbiAgICAgIHZlcnRpY2FsT2Zmc2V0ID0gMDtcbiAgICB9XG5cbiAgICBpZiAoXG4gICAgICBfLm9wdGlvbnMuY2VudGVyTW9kZSA9PT0gdHJ1ZSAmJlxuICAgICAgXy5zbGlkZUNvdW50IDw9IF8ub3B0aW9ucy5zbGlkZXNUb1Nob3dcbiAgICApIHtcbiAgICAgIF8uc2xpZGVPZmZzZXQgPVxuICAgICAgICAoXy5zbGlkZVdpZHRoICogTWF0aC5mbG9vcihfLm9wdGlvbnMuc2xpZGVzVG9TaG93KSkgLyAyIC1cbiAgICAgICAgKF8uc2xpZGVXaWR0aCAqIF8uc2xpZGVDb3VudCkgLyAyO1xuICAgIH0gZWxzZSBpZiAoXy5vcHRpb25zLmNlbnRlck1vZGUgPT09IHRydWUgJiYgXy5vcHRpb25zLmluZmluaXRlID09PSB0cnVlKSB7XG4gICAgICBfLnNsaWRlT2Zmc2V0ICs9XG4gICAgICAgIF8uc2xpZGVXaWR0aCAqIE1hdGguZmxvb3IoXy5vcHRpb25zLnNsaWRlc1RvU2hvdyAvIDIpIC0gXy5zbGlkZVdpZHRoO1xuICAgIH0gZWxzZSBpZiAoXy5vcHRpb25zLmNlbnRlck1vZGUgPT09IHRydWUpIHtcbiAgICAgIF8uc2xpZGVPZmZzZXQgPSAwO1xuICAgICAgXy5zbGlkZU9mZnNldCArPSBfLnNsaWRlV2lkdGggKiBNYXRoLmZsb29yKF8ub3B0aW9ucy5zbGlkZXNUb1Nob3cgLyAyKTtcbiAgICB9XG5cbiAgICBpZiAoXy5vcHRpb25zLnZlcnRpY2FsID09PSBmYWxzZSkge1xuICAgICAgdGFyZ2V0TGVmdCA9IHNsaWRlSW5kZXggKiBfLnNsaWRlV2lkdGggKiAtMSArIF8uc2xpZGVPZmZzZXQ7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRhcmdldExlZnQgPSBzbGlkZUluZGV4ICogdmVydGljYWxIZWlnaHQgKiAtMSArIHZlcnRpY2FsT2Zmc2V0O1xuICAgIH1cblxuICAgIGlmIChfLm9wdGlvbnMudmFyaWFibGVXaWR0aCA9PT0gdHJ1ZSkge1xuICAgICAgaWYgKFxuICAgICAgICBfLnNsaWRlQ291bnQgPD0gXy5vcHRpb25zLnNsaWRlc1RvU2hvdyB8fFxuICAgICAgICBfLm9wdGlvbnMuaW5maW5pdGUgPT09IGZhbHNlXG4gICAgICApIHtcbiAgICAgICAgdGFyZ2V0U2xpZGUgPSBfLiRzbGlkZVRyYWNrLmNoaWxkcmVuKFwiLnNsaWNrLXNsaWRlXCIpLmVxKHNsaWRlSW5kZXgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGFyZ2V0U2xpZGUgPSBfLiRzbGlkZVRyYWNrXG4gICAgICAgICAgLmNoaWxkcmVuKFwiLnNsaWNrLXNsaWRlXCIpXG4gICAgICAgICAgLmVxKHNsaWRlSW5kZXggKyBfLm9wdGlvbnMuc2xpZGVzVG9TaG93KTtcbiAgICAgIH1cblxuICAgICAgaWYgKF8ub3B0aW9ucy5ydGwgPT09IHRydWUpIHtcbiAgICAgICAgaWYgKHRhcmdldFNsaWRlWzBdKSB7XG4gICAgICAgICAgdGFyZ2V0TGVmdCA9XG4gICAgICAgICAgICAoXy4kc2xpZGVUcmFjay53aWR0aCgpIC1cbiAgICAgICAgICAgICAgdGFyZ2V0U2xpZGVbMF0ub2Zmc2V0TGVmdCAtXG4gICAgICAgICAgICAgIHRhcmdldFNsaWRlLndpZHRoKCkpICpcbiAgICAgICAgICAgIC0xO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRhcmdldExlZnQgPSAwO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0YXJnZXRMZWZ0ID0gdGFyZ2V0U2xpZGVbMF0gPyB0YXJnZXRTbGlkZVswXS5vZmZzZXRMZWZ0ICogLTEgOiAwO1xuICAgICAgfVxuXG4gICAgICBpZiAoXy5vcHRpb25zLmNlbnRlck1vZGUgPT09IHRydWUpIHtcbiAgICAgICAgaWYgKFxuICAgICAgICAgIF8uc2xpZGVDb3VudCA8PSBfLm9wdGlvbnMuc2xpZGVzVG9TaG93IHx8XG4gICAgICAgICAgXy5vcHRpb25zLmluZmluaXRlID09PSBmYWxzZVxuICAgICAgICApIHtcbiAgICAgICAgICB0YXJnZXRTbGlkZSA9IF8uJHNsaWRlVHJhY2suY2hpbGRyZW4oXCIuc2xpY2stc2xpZGVcIikuZXEoc2xpZGVJbmRleCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGFyZ2V0U2xpZGUgPSBfLiRzbGlkZVRyYWNrXG4gICAgICAgICAgICAuY2hpbGRyZW4oXCIuc2xpY2stc2xpZGVcIilcbiAgICAgICAgICAgIC5lcShzbGlkZUluZGV4ICsgXy5vcHRpb25zLnNsaWRlc1RvU2hvdyArIDEpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKF8ub3B0aW9ucy5ydGwgPT09IHRydWUpIHtcbiAgICAgICAgICBpZiAodGFyZ2V0U2xpZGVbMF0pIHtcbiAgICAgICAgICAgIHRhcmdldExlZnQgPVxuICAgICAgICAgICAgICAoXy4kc2xpZGVUcmFjay53aWR0aCgpIC1cbiAgICAgICAgICAgICAgICB0YXJnZXRTbGlkZVswXS5vZmZzZXRMZWZ0IC1cbiAgICAgICAgICAgICAgICB0YXJnZXRTbGlkZS53aWR0aCgpKSAqXG4gICAgICAgICAgICAgIC0xO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0YXJnZXRMZWZ0ID0gMDtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGFyZ2V0TGVmdCA9IHRhcmdldFNsaWRlWzBdID8gdGFyZ2V0U2xpZGVbMF0ub2Zmc2V0TGVmdCAqIC0xIDogMDtcbiAgICAgICAgfVxuXG4gICAgICAgIHRhcmdldExlZnQgKz0gKF8uJGxpc3Qud2lkdGgoKSAtIHRhcmdldFNsaWRlLm91dGVyV2lkdGgoKSkgLyAyO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB0YXJnZXRMZWZ0O1xuICB9O1xuXG4gIFNsaWNrLnByb3RvdHlwZS5nZXRPcHRpb24gPSBTbGljay5wcm90b3R5cGUuc2xpY2tHZXRPcHRpb24gPSBmdW5jdGlvbiAoXG4gICAgb3B0aW9uXG4gICkge1xuICAgIHZhciBfID0gdGhpcztcblxuICAgIHJldHVybiBfLm9wdGlvbnNbb3B0aW9uXTtcbiAgfTtcblxuICBTbGljay5wcm90b3R5cGUuZ2V0TmF2aWdhYmxlSW5kZXhlcyA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgXyA9IHRoaXMsXG4gICAgICBicmVha1BvaW50ID0gMCxcbiAgICAgIGNvdW50ZXIgPSAwLFxuICAgICAgaW5kZXhlcyA9IFtdLFxuICAgICAgbWF4O1xuXG4gICAgaWYgKF8ub3B0aW9ucy5pbmZpbml0ZSA9PT0gZmFsc2UpIHtcbiAgICAgIG1heCA9IF8uc2xpZGVDb3VudDtcbiAgICB9IGVsc2Uge1xuICAgICAgYnJlYWtQb2ludCA9IF8ub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCAqIC0xO1xuICAgICAgY291bnRlciA9IF8ub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCAqIC0xO1xuICAgICAgbWF4ID0gXy5zbGlkZUNvdW50ICogMjtcbiAgICB9XG5cbiAgICB3aGlsZSAoYnJlYWtQb2ludCA8IG1heCkge1xuICAgICAgaW5kZXhlcy5wdXNoKGJyZWFrUG9pbnQpO1xuICAgICAgYnJlYWtQb2ludCA9IGNvdW50ZXIgKyBfLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGw7XG4gICAgICBjb3VudGVyICs9XG4gICAgICAgIF8ub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCA8PSBfLm9wdGlvbnMuc2xpZGVzVG9TaG93XG4gICAgICAgICAgPyBfLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGxcbiAgICAgICAgICA6IF8ub3B0aW9ucy5zbGlkZXNUb1Nob3c7XG4gICAgfVxuXG4gICAgcmV0dXJuIGluZGV4ZXM7XG4gIH07XG5cbiAgU2xpY2sucHJvdG90eXBlLmdldFNsaWNrID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB0aGlzO1xuICB9O1xuXG4gIFNsaWNrLnByb3RvdHlwZS5nZXRTbGlkZUNvdW50ID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBfID0gdGhpcyxcbiAgICAgIHNsaWRlc1RyYXZlcnNlZCxcbiAgICAgIHN3aXBlZFNsaWRlLFxuICAgICAgY2VudGVyT2Zmc2V0O1xuXG4gICAgY2VudGVyT2Zmc2V0ID1cbiAgICAgIF8ub3B0aW9ucy5jZW50ZXJNb2RlID09PSB0cnVlXG4gICAgICAgID8gXy5zbGlkZVdpZHRoICogTWF0aC5mbG9vcihfLm9wdGlvbnMuc2xpZGVzVG9TaG93IC8gMilcbiAgICAgICAgOiAwO1xuXG4gICAgaWYgKF8ub3B0aW9ucy5zd2lwZVRvU2xpZGUgPT09IHRydWUpIHtcbiAgICAgIF8uJHNsaWRlVHJhY2suZmluZChcIi5zbGljay1zbGlkZVwiKS5lYWNoKGZ1bmN0aW9uIChpbmRleCwgc2xpZGUpIHtcbiAgICAgICAgaWYgKFxuICAgICAgICAgIHNsaWRlLm9mZnNldExlZnQgLSBjZW50ZXJPZmZzZXQgKyAkKHNsaWRlKS5vdXRlcldpZHRoKCkgLyAyID5cbiAgICAgICAgICBfLnN3aXBlTGVmdCAqIC0xXG4gICAgICAgICkge1xuICAgICAgICAgIHN3aXBlZFNsaWRlID0gc2xpZGU7XG4gICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICB9KTtcblxuICAgICAgc2xpZGVzVHJhdmVyc2VkID1cbiAgICAgICAgTWF0aC5hYnMoJChzd2lwZWRTbGlkZSkuYXR0cihcImRhdGEtc2xpY2staW5kZXhcIikgLSBfLmN1cnJlbnRTbGlkZSkgfHwgMTtcblxuICAgICAgcmV0dXJuIHNsaWRlc1RyYXZlcnNlZDtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIF8ub3B0aW9ucy5zbGlkZXNUb1Njcm9sbDtcbiAgICB9XG4gIH07XG5cbiAgU2xpY2sucHJvdG90eXBlLmdvVG8gPSBTbGljay5wcm90b3R5cGUuc2xpY2tHb1RvID0gZnVuY3Rpb24gKFxuICAgIHNsaWRlLFxuICAgIGRvbnRBbmltYXRlXG4gICkge1xuICAgIHZhciBfID0gdGhpcztcblxuICAgIF8uY2hhbmdlU2xpZGUoXG4gICAgICB7XG4gICAgICAgIGRhdGE6IHtcbiAgICAgICAgICBtZXNzYWdlOiBcImluZGV4XCIsXG4gICAgICAgICAgaW5kZXg6IHBhcnNlSW50KHNsaWRlKSxcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgICBkb250QW5pbWF0ZVxuICAgICk7XG4gIH07XG5cbiAgU2xpY2sucHJvdG90eXBlLmluaXQgPSBmdW5jdGlvbiAoY3JlYXRpb24pIHtcbiAgICB2YXIgXyA9IHRoaXM7XG5cbiAgICBpZiAoISQoXy4kc2xpZGVyKS5oYXNDbGFzcyhcInNsaWNrLWluaXRpYWxpemVkXCIpKSB7XG4gICAgICAkKF8uJHNsaWRlcikuYWRkQ2xhc3MoXCJzbGljay1pbml0aWFsaXplZFwiKTtcblxuICAgICAgXy5idWlsZFJvd3MoKTtcbiAgICAgIF8uYnVpbGRPdXQoKTtcbiAgICAgIF8uc2V0UHJvcHMoKTtcbiAgICAgIF8uc3RhcnRMb2FkKCk7XG4gICAgICBfLmxvYWRTbGlkZXIoKTtcbiAgICAgIF8uaW5pdGlhbGl6ZUV2ZW50cygpO1xuICAgICAgXy51cGRhdGVBcnJvd3MoKTtcbiAgICAgIF8udXBkYXRlRG90cygpO1xuICAgICAgXy5jaGVja1Jlc3BvbnNpdmUodHJ1ZSk7XG4gICAgICBfLmZvY3VzSGFuZGxlcigpO1xuICAgIH1cblxuICAgIGlmIChjcmVhdGlvbikge1xuICAgICAgXy4kc2xpZGVyLnRyaWdnZXIoXCJpbml0XCIsIFtfXSk7XG4gICAgfVxuXG4gICAgaWYgKF8ub3B0aW9ucy5hY2Nlc3NpYmlsaXR5ID09PSB0cnVlKSB7XG4gICAgICBfLmluaXRBREEoKTtcbiAgICB9XG5cbiAgICBpZiAoXy5vcHRpb25zLmF1dG9wbGF5KSB7XG4gICAgICBfLnBhdXNlZCA9IGZhbHNlO1xuICAgICAgXy5hdXRvUGxheSgpO1xuICAgIH1cbiAgfTtcblxuICBTbGljay5wcm90b3R5cGUuaW5pdEFEQSA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgXyA9IHRoaXMsXG4gICAgICBudW1Eb3RHcm91cHMgPSBNYXRoLmNlaWwoXy5zbGlkZUNvdW50IC8gXy5vcHRpb25zLnNsaWRlc1RvU2hvdyksXG4gICAgICB0YWJDb250cm9sSW5kZXhlcyA9IF8uZ2V0TmF2aWdhYmxlSW5kZXhlcygpLmZpbHRlcihmdW5jdGlvbiAodmFsKSB7XG4gICAgICAgIHJldHVybiB2YWwgPj0gMCAmJiB2YWwgPCBfLnNsaWRlQ291bnQ7XG4gICAgICB9KTtcblxuICAgIF8uJHNsaWRlc1xuICAgICAgLmFkZChfLiRzbGlkZVRyYWNrLmZpbmQoXCIuc2xpY2stY2xvbmVkXCIpKVxuICAgICAgLmF0dHIoe1xuICAgICAgICBcImFyaWEtaGlkZGVuXCI6IFwidHJ1ZVwiLFxuICAgICAgICB0YWJpbmRleDogXCItMVwiLFxuICAgICAgfSlcbiAgICAgIC5maW5kKFwiYSwgaW5wdXQsIGJ1dHRvbiwgc2VsZWN0XCIpXG4gICAgICAuYXR0cih7XG4gICAgICAgIHRhYmluZGV4OiBcIi0xXCIsXG4gICAgICB9KTtcblxuICAgIGlmIChfLiRkb3RzICE9PSBudWxsKSB7XG4gICAgICBfLiRzbGlkZXMubm90KF8uJHNsaWRlVHJhY2suZmluZChcIi5zbGljay1jbG9uZWRcIikpLmVhY2goZnVuY3Rpb24gKGkpIHtcbiAgICAgICAgdmFyIHNsaWRlQ29udHJvbEluZGV4ID0gdGFiQ29udHJvbEluZGV4ZXMuaW5kZXhPZihpKTtcblxuICAgICAgICAkKHRoaXMpLmF0dHIoe1xuICAgICAgICAgIHJvbGU6IFwidGFicGFuZWxcIixcbiAgICAgICAgICBpZDogXCJzbGljay1zbGlkZVwiICsgXy5pbnN0YW5jZVVpZCArIGksXG4gICAgICAgICAgdGFiaW5kZXg6IC0xLFxuICAgICAgICB9KTtcblxuICAgICAgICBpZiAoc2xpZGVDb250cm9sSW5kZXggIT09IC0xKSB7XG4gICAgICAgICAgdmFyIGFyaWFCdXR0b25Db250cm9sID1cbiAgICAgICAgICAgIFwic2xpY2stc2xpZGUtY29udHJvbFwiICsgXy5pbnN0YW5jZVVpZCArIHNsaWRlQ29udHJvbEluZGV4O1xuICAgICAgICAgIGlmICgkKFwiI1wiICsgYXJpYUJ1dHRvbkNvbnRyb2wpLmxlbmd0aCkge1xuICAgICAgICAgICAgJCh0aGlzKS5hdHRyKHtcbiAgICAgICAgICAgICAgXCJhcmlhLWRlc2NyaWJlZGJ5XCI6IGFyaWFCdXR0b25Db250cm9sLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9KTtcblxuICAgICAgXy4kZG90c1xuICAgICAgICAuYXR0cihcInJvbGVcIiwgXCJ0YWJsaXN0XCIpXG4gICAgICAgIC5maW5kKFwibGlcIilcbiAgICAgICAgLmVhY2goZnVuY3Rpb24gKGkpIHtcbiAgICAgICAgICB2YXIgbWFwcGVkU2xpZGVJbmRleCA9IHRhYkNvbnRyb2xJbmRleGVzW2ldO1xuXG4gICAgICAgICAgJCh0aGlzKS5hdHRyKHtcbiAgICAgICAgICAgIHJvbGU6IFwicHJlc2VudGF0aW9uXCIsXG4gICAgICAgICAgfSk7XG5cbiAgICAgICAgICAkKHRoaXMpXG4gICAgICAgICAgICAuZmluZChcImJ1dHRvblwiKVxuICAgICAgICAgICAgLmZpcnN0KClcbiAgICAgICAgICAgIC5hdHRyKHtcbiAgICAgICAgICAgICAgcm9sZTogXCJ0YWJcIixcbiAgICAgICAgICAgICAgaWQ6IFwic2xpY2stc2xpZGUtY29udHJvbFwiICsgXy5pbnN0YW5jZVVpZCArIGksXG4gICAgICAgICAgICAgIFwiYXJpYS1jb250cm9sc1wiOiBcInNsaWNrLXNsaWRlXCIgKyBfLmluc3RhbmNlVWlkICsgbWFwcGVkU2xpZGVJbmRleCxcbiAgICAgICAgICAgICAgXCJhcmlhLWxhYmVsXCI6IGkgKyAxICsgXCIgb2YgXCIgKyBudW1Eb3RHcm91cHMsXG4gICAgICAgICAgICAgIFwiYXJpYS1zZWxlY3RlZFwiOiBudWxsLFxuICAgICAgICAgICAgICB0YWJpbmRleDogXCItMVwiLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pXG4gICAgICAgIC5lcShfLmN1cnJlbnRTbGlkZSlcbiAgICAgICAgLmZpbmQoXCJidXR0b25cIilcbiAgICAgICAgLmF0dHIoe1xuICAgICAgICAgIFwiYXJpYS1zZWxlY3RlZFwiOiBcInRydWVcIixcbiAgICAgICAgICB0YWJpbmRleDogXCIwXCIsXG4gICAgICAgIH0pXG4gICAgICAgIC5lbmQoKTtcbiAgICB9XG5cbiAgICBmb3IgKFxuICAgICAgdmFyIGkgPSBfLmN1cnJlbnRTbGlkZSwgbWF4ID0gaSArIF8ub3B0aW9ucy5zbGlkZXNUb1Nob3c7XG4gICAgICBpIDwgbWF4O1xuICAgICAgaSsrXG4gICAgKSB7XG4gICAgICBpZiAoXy5vcHRpb25zLmZvY3VzT25DaGFuZ2UpIHtcbiAgICAgICAgXy4kc2xpZGVzLmVxKGkpLmF0dHIoeyB0YWJpbmRleDogXCIwXCIgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBfLiRzbGlkZXMuZXEoaSkucmVtb3ZlQXR0cihcInRhYmluZGV4XCIpO1xuICAgICAgfVxuICAgIH1cblxuICAgIF8uYWN0aXZhdGVBREEoKTtcbiAgfTtcblxuICBTbGljay5wcm90b3R5cGUuaW5pdEFycm93RXZlbnRzID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBfID0gdGhpcztcblxuICAgIGlmIChfLm9wdGlvbnMuYXJyb3dzID09PSB0cnVlICYmIF8uc2xpZGVDb3VudCA+IF8ub3B0aW9ucy5zbGlkZXNUb1Nob3cpIHtcbiAgICAgIF8uJHByZXZBcnJvdy5vZmYoXCJjbGljay5zbGlja1wiKS5vbihcbiAgICAgICAgXCJjbGljay5zbGlja1wiLFxuICAgICAgICB7XG4gICAgICAgICAgbWVzc2FnZTogXCJwcmV2aW91c1wiLFxuICAgICAgICB9LFxuICAgICAgICBfLmNoYW5nZVNsaWRlXG4gICAgICApO1xuICAgICAgXy4kbmV4dEFycm93Lm9mZihcImNsaWNrLnNsaWNrXCIpLm9uKFxuICAgICAgICBcImNsaWNrLnNsaWNrXCIsXG4gICAgICAgIHtcbiAgICAgICAgICBtZXNzYWdlOiBcIm5leHRcIixcbiAgICAgICAgfSxcbiAgICAgICAgXy5jaGFuZ2VTbGlkZVxuICAgICAgKTtcblxuICAgICAgaWYgKF8ub3B0aW9ucy5hY2Nlc3NpYmlsaXR5ID09PSB0cnVlKSB7XG4gICAgICAgIF8uJHByZXZBcnJvdy5vbihcImtleWRvd24uc2xpY2tcIiwgXy5rZXlIYW5kbGVyKTtcbiAgICAgICAgXy4kbmV4dEFycm93Lm9uKFwia2V5ZG93bi5zbGlja1wiLCBfLmtleUhhbmRsZXIpO1xuICAgICAgfVxuICAgIH1cbiAgfTtcblxuICBTbGljay5wcm90b3R5cGUuaW5pdERvdEV2ZW50cyA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgXyA9IHRoaXM7XG5cbiAgICBpZiAoXy5vcHRpb25zLmRvdHMgPT09IHRydWUgJiYgXy5zbGlkZUNvdW50ID4gXy5vcHRpb25zLnNsaWRlc1RvU2hvdykge1xuICAgICAgJChcImxpXCIsIF8uJGRvdHMpLm9uKFxuICAgICAgICBcImNsaWNrLnNsaWNrXCIsXG4gICAgICAgIHtcbiAgICAgICAgICBtZXNzYWdlOiBcImluZGV4XCIsXG4gICAgICAgIH0sXG4gICAgICAgIF8uY2hhbmdlU2xpZGVcbiAgICAgICk7XG5cbiAgICAgIGlmIChfLm9wdGlvbnMuYWNjZXNzaWJpbGl0eSA9PT0gdHJ1ZSkge1xuICAgICAgICBfLiRkb3RzLm9uKFwia2V5ZG93bi5zbGlja1wiLCBfLmtleUhhbmRsZXIpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChcbiAgICAgIF8ub3B0aW9ucy5kb3RzID09PSB0cnVlICYmXG4gICAgICBfLm9wdGlvbnMucGF1c2VPbkRvdHNIb3ZlciA9PT0gdHJ1ZSAmJlxuICAgICAgXy5zbGlkZUNvdW50ID4gXy5vcHRpb25zLnNsaWRlc1RvU2hvd1xuICAgICkge1xuICAgICAgJChcImxpXCIsIF8uJGRvdHMpXG4gICAgICAgIC5vbihcIm1vdXNlZW50ZXIuc2xpY2tcIiwgJC5wcm94eShfLmludGVycnVwdCwgXywgdHJ1ZSkpXG4gICAgICAgIC5vbihcIm1vdXNlbGVhdmUuc2xpY2tcIiwgJC5wcm94eShfLmludGVycnVwdCwgXywgZmFsc2UpKTtcbiAgICB9XG4gIH07XG5cbiAgU2xpY2sucHJvdG90eXBlLmluaXRTbGlkZUV2ZW50cyA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgXyA9IHRoaXM7XG5cbiAgICBpZiAoXy5vcHRpb25zLnBhdXNlT25Ib3Zlcikge1xuICAgICAgXy4kbGlzdC5vbihcIm1vdXNlZW50ZXIuc2xpY2tcIiwgJC5wcm94eShfLmludGVycnVwdCwgXywgdHJ1ZSkpO1xuICAgICAgXy4kbGlzdC5vbihcIm1vdXNlbGVhdmUuc2xpY2tcIiwgJC5wcm94eShfLmludGVycnVwdCwgXywgZmFsc2UpKTtcbiAgICB9XG4gIH07XG5cbiAgU2xpY2sucHJvdG90eXBlLmluaXRpYWxpemVFdmVudHMgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIF8gPSB0aGlzO1xuXG4gICAgXy5pbml0QXJyb3dFdmVudHMoKTtcblxuICAgIF8uaW5pdERvdEV2ZW50cygpO1xuICAgIF8uaW5pdFNsaWRlRXZlbnRzKCk7XG5cbiAgICBfLiRsaXN0Lm9uKFxuICAgICAgXCJ0b3VjaHN0YXJ0LnNsaWNrIG1vdXNlZG93bi5zbGlja1wiLFxuICAgICAge1xuICAgICAgICBhY3Rpb246IFwic3RhcnRcIixcbiAgICAgIH0sXG4gICAgICBfLnN3aXBlSGFuZGxlclxuICAgICk7XG4gICAgXy4kbGlzdC5vbihcbiAgICAgIFwidG91Y2htb3ZlLnNsaWNrIG1vdXNlbW92ZS5zbGlja1wiLFxuICAgICAge1xuICAgICAgICBhY3Rpb246IFwibW92ZVwiLFxuICAgICAgfSxcbiAgICAgIF8uc3dpcGVIYW5kbGVyXG4gICAgKTtcbiAgICBfLiRsaXN0Lm9uKFxuICAgICAgXCJ0b3VjaGVuZC5zbGljayBtb3VzZXVwLnNsaWNrXCIsXG4gICAgICB7XG4gICAgICAgIGFjdGlvbjogXCJlbmRcIixcbiAgICAgIH0sXG4gICAgICBfLnN3aXBlSGFuZGxlclxuICAgICk7XG4gICAgXy4kbGlzdC5vbihcbiAgICAgIFwidG91Y2hjYW5jZWwuc2xpY2sgbW91c2VsZWF2ZS5zbGlja1wiLFxuICAgICAge1xuICAgICAgICBhY3Rpb246IFwiZW5kXCIsXG4gICAgICB9LFxuICAgICAgXy5zd2lwZUhhbmRsZXJcbiAgICApO1xuXG4gICAgXy4kbGlzdC5vbihcImNsaWNrLnNsaWNrXCIsIF8uY2xpY2tIYW5kbGVyKTtcblxuICAgICQoZG9jdW1lbnQpLm9uKF8udmlzaWJpbGl0eUNoYW5nZSwgJC5wcm94eShfLnZpc2liaWxpdHksIF8pKTtcblxuICAgIGlmIChfLm9wdGlvbnMuYWNjZXNzaWJpbGl0eSA9PT0gdHJ1ZSkge1xuICAgICAgXy4kbGlzdC5vbihcImtleWRvd24uc2xpY2tcIiwgXy5rZXlIYW5kbGVyKTtcbiAgICB9XG5cbiAgICBpZiAoXy5vcHRpb25zLmZvY3VzT25TZWxlY3QgPT09IHRydWUpIHtcbiAgICAgICQoXy4kc2xpZGVUcmFjaykuY2hpbGRyZW4oKS5vbihcImNsaWNrLnNsaWNrXCIsIF8uc2VsZWN0SGFuZGxlcik7XG4gICAgfVxuXG4gICAgJCh3aW5kb3cpLm9uKFxuICAgICAgXCJvcmllbnRhdGlvbmNoYW5nZS5zbGljay5zbGljay1cIiArIF8uaW5zdGFuY2VVaWQsXG4gICAgICAkLnByb3h5KF8ub3JpZW50YXRpb25DaGFuZ2UsIF8pXG4gICAgKTtcblxuICAgICQod2luZG93KS5vbihcInJlc2l6ZS5zbGljay5zbGljay1cIiArIF8uaW5zdGFuY2VVaWQsICQucHJveHkoXy5yZXNpemUsIF8pKTtcblxuICAgICQoXCJbZHJhZ2dhYmxlIT10cnVlXVwiLCBfLiRzbGlkZVRyYWNrKS5vbihcImRyYWdzdGFydFwiLCBfLnByZXZlbnREZWZhdWx0KTtcblxuICAgICQod2luZG93KS5vbihcImxvYWQuc2xpY2suc2xpY2stXCIgKyBfLmluc3RhbmNlVWlkLCBfLnNldFBvc2l0aW9uKTtcbiAgICAkKF8uc2V0UG9zaXRpb24pO1xuICB9O1xuXG4gIFNsaWNrLnByb3RvdHlwZS5pbml0VUkgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIF8gPSB0aGlzO1xuXG4gICAgaWYgKF8ub3B0aW9ucy5hcnJvd3MgPT09IHRydWUgJiYgXy5zbGlkZUNvdW50ID4gXy5vcHRpb25zLnNsaWRlc1RvU2hvdykge1xuICAgICAgXy4kcHJldkFycm93LnNob3coKTtcbiAgICAgIF8uJG5leHRBcnJvdy5zaG93KCk7XG4gICAgfVxuXG4gICAgaWYgKF8ub3B0aW9ucy5kb3RzID09PSB0cnVlICYmIF8uc2xpZGVDb3VudCA+IF8ub3B0aW9ucy5zbGlkZXNUb1Nob3cpIHtcbiAgICAgIF8uJGRvdHMuc2hvdygpO1xuICAgIH1cbiAgfTtcblxuICBTbGljay5wcm90b3R5cGUua2V5SGFuZGxlciA9IGZ1bmN0aW9uIChldmVudCkge1xuICAgIHZhciBfID0gdGhpcztcbiAgICAvL0RvbnQgc2xpZGUgaWYgdGhlIGN1cnNvciBpcyBpbnNpZGUgdGhlIGZvcm0gZmllbGRzIGFuZCBhcnJvdyBrZXlzIGFyZSBwcmVzc2VkXG4gICAgaWYgKCFldmVudC50YXJnZXQudGFnTmFtZS5tYXRjaChcIlRFWFRBUkVBfElOUFVUfFNFTEVDVFwiKSkge1xuICAgICAgaWYgKGV2ZW50LmtleUNvZGUgPT09IDM3ICYmIF8ub3B0aW9ucy5hY2Nlc3NpYmlsaXR5ID09PSB0cnVlKSB7XG4gICAgICAgIF8uY2hhbmdlU2xpZGUoe1xuICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgIG1lc3NhZ2U6IF8ub3B0aW9ucy5ydGwgPT09IHRydWUgPyBcIm5leHRcIiA6IFwicHJldmlvdXNcIixcbiAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSBpZiAoZXZlbnQua2V5Q29kZSA9PT0gMzkgJiYgXy5vcHRpb25zLmFjY2Vzc2liaWxpdHkgPT09IHRydWUpIHtcbiAgICAgICAgXy5jaGFuZ2VTbGlkZSh7XG4gICAgICAgICAgZGF0YToge1xuICAgICAgICAgICAgbWVzc2FnZTogXy5vcHRpb25zLnJ0bCA9PT0gdHJ1ZSA/IFwicHJldmlvdXNcIiA6IFwibmV4dFwiLFxuICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cbiAgfTtcblxuICBTbGljay5wcm90b3R5cGUubGF6eUxvYWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIF8gPSB0aGlzLFxuICAgICAgbG9hZFJhbmdlLFxuICAgICAgY2xvbmVSYW5nZSxcbiAgICAgIHJhbmdlU3RhcnQsXG4gICAgICByYW5nZUVuZDtcblxuICAgIGZ1bmN0aW9uIGxvYWRJbWFnZXMoaW1hZ2VzU2NvcGUpIHtcbiAgICAgICQoXCJpbWdbZGF0YS1sYXp5XVwiLCBpbWFnZXNTY29wZSkuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBpbWFnZSA9ICQodGhpcyksXG4gICAgICAgICAgaW1hZ2VTb3VyY2UgPSAkKHRoaXMpLmF0dHIoXCJkYXRhLWxhenlcIiksXG4gICAgICAgICAgaW1hZ2VTcmNTZXQgPSAkKHRoaXMpLmF0dHIoXCJkYXRhLXNyY3NldFwiKSxcbiAgICAgICAgICBpbWFnZVNpemVzID1cbiAgICAgICAgICAgICQodGhpcykuYXR0cihcImRhdGEtc2l6ZXNcIikgfHwgXy4kc2xpZGVyLmF0dHIoXCJkYXRhLXNpemVzXCIpLFxuICAgICAgICAgIGltYWdlVG9Mb2FkID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImltZ1wiKTtcblxuICAgICAgICBpbWFnZVRvTG9hZC5vbmxvYWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgaW1hZ2UuYW5pbWF0ZSh7IG9wYWNpdHk6IDAgfSwgMTAwLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAoaW1hZ2VTcmNTZXQpIHtcbiAgICAgICAgICAgICAgaW1hZ2UuYXR0cihcInNyY3NldFwiLCBpbWFnZVNyY1NldCk7XG5cbiAgICAgICAgICAgICAgaWYgKGltYWdlU2l6ZXMpIHtcbiAgICAgICAgICAgICAgICBpbWFnZS5hdHRyKFwic2l6ZXNcIiwgaW1hZ2VTaXplcyk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaW1hZ2VcbiAgICAgICAgICAgICAgLmF0dHIoXCJzcmNcIiwgaW1hZ2VTb3VyY2UpXG4gICAgICAgICAgICAgIC5hbmltYXRlKHsgb3BhY2l0eTogMSB9LCAyMDAsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBpbWFnZVxuICAgICAgICAgICAgICAgICAgLnJlbW92ZUF0dHIoXCJkYXRhLWxhenkgZGF0YS1zcmNzZXQgZGF0YS1zaXplc1wiKVxuICAgICAgICAgICAgICAgICAgLnJlbW92ZUNsYXNzKFwic2xpY2stbG9hZGluZ1wiKTtcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBfLiRzbGlkZXIudHJpZ2dlcihcImxhenlMb2FkZWRcIiwgW18sIGltYWdlLCBpbWFnZVNvdXJjZV0pO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9O1xuXG4gICAgICAgIGltYWdlVG9Mb2FkLm9uZXJyb3IgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgaW1hZ2VcbiAgICAgICAgICAgIC5yZW1vdmVBdHRyKFwiZGF0YS1sYXp5XCIpXG4gICAgICAgICAgICAucmVtb3ZlQ2xhc3MoXCJzbGljay1sb2FkaW5nXCIpXG4gICAgICAgICAgICAuYWRkQ2xhc3MoXCJzbGljay1sYXp5bG9hZC1lcnJvclwiKTtcblxuICAgICAgICAgIF8uJHNsaWRlci50cmlnZ2VyKFwibGF6eUxvYWRFcnJvclwiLCBbXywgaW1hZ2UsIGltYWdlU291cmNlXSk7XG4gICAgICAgIH07XG5cbiAgICAgICAgaW1hZ2VUb0xvYWQuc3JjID0gaW1hZ2VTb3VyY2U7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZiAoXy5vcHRpb25zLmNlbnRlck1vZGUgPT09IHRydWUpIHtcbiAgICAgIGlmIChfLm9wdGlvbnMuaW5maW5pdGUgPT09IHRydWUpIHtcbiAgICAgICAgcmFuZ2VTdGFydCA9IF8uY3VycmVudFNsaWRlICsgKF8ub3B0aW9ucy5zbGlkZXNUb1Nob3cgLyAyICsgMSk7XG4gICAgICAgIHJhbmdlRW5kID0gcmFuZ2VTdGFydCArIF8ub3B0aW9ucy5zbGlkZXNUb1Nob3cgKyAyO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmFuZ2VTdGFydCA9IE1hdGgubWF4KFxuICAgICAgICAgIDAsXG4gICAgICAgICAgXy5jdXJyZW50U2xpZGUgLSAoXy5vcHRpb25zLnNsaWRlc1RvU2hvdyAvIDIgKyAxKVxuICAgICAgICApO1xuICAgICAgICByYW5nZUVuZCA9IDIgKyAoXy5vcHRpb25zLnNsaWRlc1RvU2hvdyAvIDIgKyAxKSArIF8uY3VycmVudFNsaWRlO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICByYW5nZVN0YXJ0ID0gXy5vcHRpb25zLmluZmluaXRlXG4gICAgICAgID8gXy5vcHRpb25zLnNsaWRlc1RvU2hvdyArIF8uY3VycmVudFNsaWRlXG4gICAgICAgIDogXy5jdXJyZW50U2xpZGU7XG4gICAgICByYW5nZUVuZCA9IE1hdGguY2VpbChyYW5nZVN0YXJ0ICsgXy5vcHRpb25zLnNsaWRlc1RvU2hvdyk7XG4gICAgICBpZiAoXy5vcHRpb25zLmZhZGUgPT09IHRydWUpIHtcbiAgICAgICAgaWYgKHJhbmdlU3RhcnQgPiAwKSByYW5nZVN0YXJ0LS07XG4gICAgICAgIGlmIChyYW5nZUVuZCA8PSBfLnNsaWRlQ291bnQpIHJhbmdlRW5kKys7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbG9hZFJhbmdlID0gXy4kc2xpZGVyLmZpbmQoXCIuc2xpY2stc2xpZGVcIikuc2xpY2UocmFuZ2VTdGFydCwgcmFuZ2VFbmQpO1xuXG4gICAgaWYgKF8ub3B0aW9ucy5sYXp5TG9hZCA9PT0gXCJhbnRpY2lwYXRlZFwiKSB7XG4gICAgICB2YXIgcHJldlNsaWRlID0gcmFuZ2VTdGFydCAtIDEsXG4gICAgICAgIG5leHRTbGlkZSA9IHJhbmdlRW5kLFxuICAgICAgICAkc2xpZGVzID0gXy4kc2xpZGVyLmZpbmQoXCIuc2xpY2stc2xpZGVcIik7XG5cbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgXy5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsOyBpKyspIHtcbiAgICAgICAgaWYgKHByZXZTbGlkZSA8IDApIHByZXZTbGlkZSA9IF8uc2xpZGVDb3VudCAtIDE7XG4gICAgICAgIGxvYWRSYW5nZSA9IGxvYWRSYW5nZS5hZGQoJHNsaWRlcy5lcShwcmV2U2xpZGUpKTtcbiAgICAgICAgbG9hZFJhbmdlID0gbG9hZFJhbmdlLmFkZCgkc2xpZGVzLmVxKG5leHRTbGlkZSkpO1xuICAgICAgICBwcmV2U2xpZGUtLTtcbiAgICAgICAgbmV4dFNsaWRlKys7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbG9hZEltYWdlcyhsb2FkUmFuZ2UpO1xuXG4gICAgaWYgKF8uc2xpZGVDb3VudCA8PSBfLm9wdGlvbnMuc2xpZGVzVG9TaG93KSB7XG4gICAgICBjbG9uZVJhbmdlID0gXy4kc2xpZGVyLmZpbmQoXCIuc2xpY2stc2xpZGVcIik7XG4gICAgICBsb2FkSW1hZ2VzKGNsb25lUmFuZ2UpO1xuICAgIH0gZWxzZSBpZiAoXy5jdXJyZW50U2xpZGUgPj0gXy5zbGlkZUNvdW50IC0gXy5vcHRpb25zLnNsaWRlc1RvU2hvdykge1xuICAgICAgY2xvbmVSYW5nZSA9IF8uJHNsaWRlclxuICAgICAgICAuZmluZChcIi5zbGljay1jbG9uZWRcIilcbiAgICAgICAgLnNsaWNlKDAsIF8ub3B0aW9ucy5zbGlkZXNUb1Nob3cpO1xuICAgICAgbG9hZEltYWdlcyhjbG9uZVJhbmdlKTtcbiAgICB9IGVsc2UgaWYgKF8uY3VycmVudFNsaWRlID09PSAwKSB7XG4gICAgICBjbG9uZVJhbmdlID0gXy4kc2xpZGVyXG4gICAgICAgIC5maW5kKFwiLnNsaWNrLWNsb25lZFwiKVxuICAgICAgICAuc2xpY2UoXy5vcHRpb25zLnNsaWRlc1RvU2hvdyAqIC0xKTtcbiAgICAgIGxvYWRJbWFnZXMoY2xvbmVSYW5nZSk7XG4gICAgfVxuICB9O1xuXG4gIFNsaWNrLnByb3RvdHlwZS5sb2FkU2xpZGVyID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBfID0gdGhpcztcblxuICAgIF8uc2V0UG9zaXRpb24oKTtcblxuICAgIF8uJHNsaWRlVHJhY2suY3NzKHtcbiAgICAgIG9wYWNpdHk6IDEsXG4gICAgfSk7XG5cbiAgICBfLiRzbGlkZXIucmVtb3ZlQ2xhc3MoXCJzbGljay1sb2FkaW5nXCIpO1xuXG4gICAgXy5pbml0VUkoKTtcblxuICAgIGlmIChfLm9wdGlvbnMubGF6eUxvYWQgPT09IFwicHJvZ3Jlc3NpdmVcIikge1xuICAgICAgXy5wcm9ncmVzc2l2ZUxhenlMb2FkKCk7XG4gICAgfVxuICB9O1xuXG4gIFNsaWNrLnByb3RvdHlwZS5uZXh0ID0gU2xpY2sucHJvdG90eXBlLnNsaWNrTmV4dCA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgXyA9IHRoaXM7XG5cbiAgICBfLmNoYW5nZVNsaWRlKHtcbiAgICAgIGRhdGE6IHtcbiAgICAgICAgbWVzc2FnZTogXCJuZXh0XCIsXG4gICAgICB9LFxuICAgIH0pO1xuICB9O1xuXG4gIFNsaWNrLnByb3RvdHlwZS5vcmllbnRhdGlvbkNoYW5nZSA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgXyA9IHRoaXM7XG5cbiAgICBfLmNoZWNrUmVzcG9uc2l2ZSgpO1xuICAgIF8uc2V0UG9zaXRpb24oKTtcbiAgfTtcblxuICBTbGljay5wcm90b3R5cGUucGF1c2UgPSBTbGljay5wcm90b3R5cGUuc2xpY2tQYXVzZSA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgXyA9IHRoaXM7XG5cbiAgICBfLmF1dG9QbGF5Q2xlYXIoKTtcbiAgICBfLnBhdXNlZCA9IHRydWU7XG4gIH07XG5cbiAgU2xpY2sucHJvdG90eXBlLnBsYXkgPSBTbGljay5wcm90b3R5cGUuc2xpY2tQbGF5ID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBfID0gdGhpcztcblxuICAgIF8uYXV0b1BsYXkoKTtcbiAgICBfLm9wdGlvbnMuYXV0b3BsYXkgPSB0cnVlO1xuICAgIF8ucGF1c2VkID0gZmFsc2U7XG4gICAgXy5mb2N1c3NlZCA9IGZhbHNlO1xuICAgIF8uaW50ZXJydXB0ZWQgPSBmYWxzZTtcbiAgfTtcblxuICBTbGljay5wcm90b3R5cGUucG9zdFNsaWRlID0gZnVuY3Rpb24gKGluZGV4KSB7XG4gICAgdmFyIF8gPSB0aGlzO1xuXG4gICAgaWYgKCFfLnVuc2xpY2tlZCkge1xuICAgICAgXy4kc2xpZGVyLnRyaWdnZXIoXCJhZnRlckNoYW5nZVwiLCBbXywgaW5kZXhdKTtcblxuICAgICAgXy5hbmltYXRpbmcgPSBmYWxzZTtcblxuICAgICAgaWYgKF8uc2xpZGVDb3VudCA+IF8ub3B0aW9ucy5zbGlkZXNUb1Nob3cpIHtcbiAgICAgICAgXy5zZXRQb3NpdGlvbigpO1xuICAgICAgfVxuXG4gICAgICBfLnN3aXBlTGVmdCA9IG51bGw7XG5cbiAgICAgIGlmIChfLm9wdGlvbnMuYXV0b3BsYXkpIHtcbiAgICAgICAgXy5hdXRvUGxheSgpO1xuICAgICAgfVxuXG4gICAgICBpZiAoXy5vcHRpb25zLmFjY2Vzc2liaWxpdHkgPT09IHRydWUpIHtcbiAgICAgICAgXy5pbml0QURBKCk7XG5cbiAgICAgICAgaWYgKF8ub3B0aW9ucy5mb2N1c09uQ2hhbmdlKSB7XG4gICAgICAgICAgdmFyICRjdXJyZW50U2xpZGUgPSAkKF8uJHNsaWRlcy5nZXQoXy5jdXJyZW50U2xpZGUpKTtcbiAgICAgICAgICAkY3VycmVudFNsaWRlLmF0dHIoXCJ0YWJpbmRleFwiLCAwKS5mb2N1cygpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG4gIFNsaWNrLnByb3RvdHlwZS5wcmV2ID0gU2xpY2sucHJvdG90eXBlLnNsaWNrUHJldiA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgXyA9IHRoaXM7XG5cbiAgICBfLmNoYW5nZVNsaWRlKHtcbiAgICAgIGRhdGE6IHtcbiAgICAgICAgbWVzc2FnZTogXCJwcmV2aW91c1wiLFxuICAgICAgfSxcbiAgICB9KTtcbiAgfTtcblxuICBTbGljay5wcm90b3R5cGUucHJldmVudERlZmF1bHQgPSBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICB9O1xuXG4gIFNsaWNrLnByb3RvdHlwZS5wcm9ncmVzc2l2ZUxhenlMb2FkID0gZnVuY3Rpb24gKHRyeUNvdW50KSB7XG4gICAgdHJ5Q291bnQgPSB0cnlDb3VudCB8fCAxO1xuXG4gICAgdmFyIF8gPSB0aGlzLFxuICAgICAgJGltZ3NUb0xvYWQgPSAkKFwiaW1nW2RhdGEtbGF6eV1cIiwgXy4kc2xpZGVyKSxcbiAgICAgIGltYWdlLFxuICAgICAgaW1hZ2VTb3VyY2UsXG4gICAgICBpbWFnZVNyY1NldCxcbiAgICAgIGltYWdlU2l6ZXMsXG4gICAgICBpbWFnZVRvTG9hZDtcblxuICAgIGlmICgkaW1nc1RvTG9hZC5sZW5ndGgpIHtcbiAgICAgIGltYWdlID0gJGltZ3NUb0xvYWQuZmlyc3QoKTtcbiAgICAgIGltYWdlU291cmNlID0gaW1hZ2UuYXR0cihcImRhdGEtbGF6eVwiKTtcbiAgICAgIGltYWdlU3JjU2V0ID0gaW1hZ2UuYXR0cihcImRhdGEtc3Jjc2V0XCIpO1xuICAgICAgaW1hZ2VTaXplcyA9IGltYWdlLmF0dHIoXCJkYXRhLXNpemVzXCIpIHx8IF8uJHNsaWRlci5hdHRyKFwiZGF0YS1zaXplc1wiKTtcbiAgICAgIGltYWdlVG9Mb2FkID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImltZ1wiKTtcblxuICAgICAgaW1hZ2VUb0xvYWQub25sb2FkID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoaW1hZ2VTcmNTZXQpIHtcbiAgICAgICAgICBpbWFnZS5hdHRyKFwic3Jjc2V0XCIsIGltYWdlU3JjU2V0KTtcblxuICAgICAgICAgIGlmIChpbWFnZVNpemVzKSB7XG4gICAgICAgICAgICBpbWFnZS5hdHRyKFwic2l6ZXNcIiwgaW1hZ2VTaXplcyk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgaW1hZ2VcbiAgICAgICAgICAuYXR0cihcInNyY1wiLCBpbWFnZVNvdXJjZSlcbiAgICAgICAgICAucmVtb3ZlQXR0cihcImRhdGEtbGF6eSBkYXRhLXNyY3NldCBkYXRhLXNpemVzXCIpXG4gICAgICAgICAgLnJlbW92ZUNsYXNzKFwic2xpY2stbG9hZGluZ1wiKTtcblxuICAgICAgICBpZiAoXy5vcHRpb25zLmFkYXB0aXZlSGVpZ2h0ID09PSB0cnVlKSB7XG4gICAgICAgICAgXy5zZXRQb3NpdGlvbigpO1xuICAgICAgICB9XG5cbiAgICAgICAgXy4kc2xpZGVyLnRyaWdnZXIoXCJsYXp5TG9hZGVkXCIsIFtfLCBpbWFnZSwgaW1hZ2VTb3VyY2VdKTtcbiAgICAgICAgXy5wcm9ncmVzc2l2ZUxhenlMb2FkKCk7XG4gICAgICB9O1xuXG4gICAgICBpbWFnZVRvTG9hZC5vbmVycm9yID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAodHJ5Q291bnQgPCAzKSB7XG4gICAgICAgICAgLyoqXG4gICAgICAgICAgICogdHJ5IHRvIGxvYWQgdGhlIGltYWdlIDMgdGltZXMsXG4gICAgICAgICAgICogbGVhdmUgYSBzbGlnaHQgZGVsYXkgc28gd2UgZG9uJ3QgZ2V0XG4gICAgICAgICAgICogc2VydmVycyBibG9ja2luZyB0aGUgcmVxdWVzdC5cbiAgICAgICAgICAgKi9cbiAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIF8ucHJvZ3Jlc3NpdmVMYXp5TG9hZCh0cnlDb3VudCArIDEpO1xuICAgICAgICAgIH0sIDUwMCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaW1hZ2VcbiAgICAgICAgICAgIC5yZW1vdmVBdHRyKFwiZGF0YS1sYXp5XCIpXG4gICAgICAgICAgICAucmVtb3ZlQ2xhc3MoXCJzbGljay1sb2FkaW5nXCIpXG4gICAgICAgICAgICAuYWRkQ2xhc3MoXCJzbGljay1sYXp5bG9hZC1lcnJvclwiKTtcblxuICAgICAgICAgIF8uJHNsaWRlci50cmlnZ2VyKFwibGF6eUxvYWRFcnJvclwiLCBbXywgaW1hZ2UsIGltYWdlU291cmNlXSk7XG5cbiAgICAgICAgICBfLnByb2dyZXNzaXZlTGF6eUxvYWQoKTtcbiAgICAgICAgfVxuICAgICAgfTtcblxuICAgICAgaW1hZ2VUb0xvYWQuc3JjID0gaW1hZ2VTb3VyY2U7XG4gICAgfSBlbHNlIHtcbiAgICAgIF8uJHNsaWRlci50cmlnZ2VyKFwiYWxsSW1hZ2VzTG9hZGVkXCIsIFtfXSk7XG4gICAgfVxuICB9O1xuXG4gIFNsaWNrLnByb3RvdHlwZS5yZWZyZXNoID0gZnVuY3Rpb24gKGluaXRpYWxpemluZykge1xuICAgIHZhciBfID0gdGhpcyxcbiAgICAgIGN1cnJlbnRTbGlkZSxcbiAgICAgIGxhc3RWaXNpYmxlSW5kZXg7XG5cbiAgICBsYXN0VmlzaWJsZUluZGV4ID0gXy5zbGlkZUNvdW50IC0gXy5vcHRpb25zLnNsaWRlc1RvU2hvdztcblxuICAgIC8vIGluIG5vbi1pbmZpbml0ZSBzbGlkZXJzLCB3ZSBkb24ndCB3YW50IHRvIGdvIHBhc3QgdGhlXG4gICAgLy8gbGFzdCB2aXNpYmxlIGluZGV4LlxuICAgIGlmICghXy5vcHRpb25zLmluZmluaXRlICYmIF8uY3VycmVudFNsaWRlID4gbGFzdFZpc2libGVJbmRleCkge1xuICAgICAgXy5jdXJyZW50U2xpZGUgPSBsYXN0VmlzaWJsZUluZGV4O1xuICAgIH1cblxuICAgIC8vIGlmIGxlc3Mgc2xpZGVzIHRoYW4gdG8gc2hvdywgZ28gdG8gc3RhcnQuXG4gICAgaWYgKF8uc2xpZGVDb3VudCA8PSBfLm9wdGlvbnMuc2xpZGVzVG9TaG93KSB7XG4gICAgICBfLmN1cnJlbnRTbGlkZSA9IDA7XG4gICAgfVxuXG4gICAgY3VycmVudFNsaWRlID0gXy5jdXJyZW50U2xpZGU7XG5cbiAgICBfLmRlc3Ryb3kodHJ1ZSk7XG5cbiAgICAkLmV4dGVuZChfLCBfLmluaXRpYWxzLCB7IGN1cnJlbnRTbGlkZTogY3VycmVudFNsaWRlIH0pO1xuXG4gICAgXy5pbml0KCk7XG5cbiAgICBpZiAoIWluaXRpYWxpemluZykge1xuICAgICAgXy5jaGFuZ2VTbGlkZShcbiAgICAgICAge1xuICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgIG1lc3NhZ2U6IFwiaW5kZXhcIixcbiAgICAgICAgICAgIGluZGV4OiBjdXJyZW50U2xpZGUsXG4gICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgICAgZmFsc2VcbiAgICAgICk7XG4gICAgfVxuICB9O1xuXG4gIFNsaWNrLnByb3RvdHlwZS5yZWdpc3RlckJyZWFrcG9pbnRzID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBfID0gdGhpcyxcbiAgICAgIGJyZWFrcG9pbnQsXG4gICAgICBjdXJyZW50QnJlYWtwb2ludCxcbiAgICAgIGwsXG4gICAgICByZXNwb25zaXZlU2V0dGluZ3MgPSBfLm9wdGlvbnMucmVzcG9uc2l2ZSB8fCBudWxsO1xuXG4gICAgaWYgKCQudHlwZShyZXNwb25zaXZlU2V0dGluZ3MpID09PSBcImFycmF5XCIgJiYgcmVzcG9uc2l2ZVNldHRpbmdzLmxlbmd0aCkge1xuICAgICAgXy5yZXNwb25kVG8gPSBfLm9wdGlvbnMucmVzcG9uZFRvIHx8IFwid2luZG93XCI7XG5cbiAgICAgIGZvciAoYnJlYWtwb2ludCBpbiByZXNwb25zaXZlU2V0dGluZ3MpIHtcbiAgICAgICAgbCA9IF8uYnJlYWtwb2ludHMubGVuZ3RoIC0gMTtcblxuICAgICAgICBpZiAocmVzcG9uc2l2ZVNldHRpbmdzLmhhc093blByb3BlcnR5KGJyZWFrcG9pbnQpKSB7XG4gICAgICAgICAgY3VycmVudEJyZWFrcG9pbnQgPSByZXNwb25zaXZlU2V0dGluZ3NbYnJlYWtwb2ludF0uYnJlYWtwb2ludDtcblxuICAgICAgICAgIC8vIGxvb3AgdGhyb3VnaCB0aGUgYnJlYWtwb2ludHMgYW5kIGN1dCBvdXQgYW55IGV4aXN0aW5nXG4gICAgICAgICAgLy8gb25lcyB3aXRoIHRoZSBzYW1lIGJyZWFrcG9pbnQgbnVtYmVyLCB3ZSBkb24ndCB3YW50IGR1cGVzLlxuICAgICAgICAgIHdoaWxlIChsID49IDApIHtcbiAgICAgICAgICAgIGlmIChfLmJyZWFrcG9pbnRzW2xdICYmIF8uYnJlYWtwb2ludHNbbF0gPT09IGN1cnJlbnRCcmVha3BvaW50KSB7XG4gICAgICAgICAgICAgIF8uYnJlYWtwb2ludHMuc3BsaWNlKGwsIDEpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbC0tO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIF8uYnJlYWtwb2ludHMucHVzaChjdXJyZW50QnJlYWtwb2ludCk7XG4gICAgICAgICAgXy5icmVha3BvaW50U2V0dGluZ3NbY3VycmVudEJyZWFrcG9pbnRdID1cbiAgICAgICAgICAgIHJlc3BvbnNpdmVTZXR0aW5nc1ticmVha3BvaW50XS5zZXR0aW5ncztcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBfLmJyZWFrcG9pbnRzLnNvcnQoZnVuY3Rpb24gKGEsIGIpIHtcbiAgICAgICAgcmV0dXJuIF8ub3B0aW9ucy5tb2JpbGVGaXJzdCA/IGEgLSBiIDogYiAtIGE7XG4gICAgICB9KTtcbiAgICB9XG4gIH07XG5cbiAgU2xpY2sucHJvdG90eXBlLnJlaW5pdCA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgXyA9IHRoaXM7XG5cbiAgICBfLiRzbGlkZXMgPSBfLiRzbGlkZVRyYWNrLmNoaWxkcmVuKF8ub3B0aW9ucy5zbGlkZSkuYWRkQ2xhc3MoXCJzbGljay1zbGlkZVwiKTtcblxuICAgIF8uc2xpZGVDb3VudCA9IF8uJHNsaWRlcy5sZW5ndGg7XG5cbiAgICBpZiAoXy5jdXJyZW50U2xpZGUgPj0gXy5zbGlkZUNvdW50ICYmIF8uY3VycmVudFNsaWRlICE9PSAwKSB7XG4gICAgICBfLmN1cnJlbnRTbGlkZSA9IF8uY3VycmVudFNsaWRlIC0gXy5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsO1xuICAgIH1cblxuICAgIGlmIChfLnNsaWRlQ291bnQgPD0gXy5vcHRpb25zLnNsaWRlc1RvU2hvdykge1xuICAgICAgXy5jdXJyZW50U2xpZGUgPSAwO1xuICAgIH1cblxuICAgIF8ucmVnaXN0ZXJCcmVha3BvaW50cygpO1xuXG4gICAgXy5zZXRQcm9wcygpO1xuICAgIF8uc2V0dXBJbmZpbml0ZSgpO1xuICAgIF8uYnVpbGRBcnJvd3MoKTtcbiAgICBfLnVwZGF0ZUFycm93cygpO1xuICAgIF8uaW5pdEFycm93RXZlbnRzKCk7XG4gICAgXy5idWlsZERvdHMoKTtcbiAgICBfLnVwZGF0ZURvdHMoKTtcbiAgICBfLmluaXREb3RFdmVudHMoKTtcbiAgICBfLmNsZWFuVXBTbGlkZUV2ZW50cygpO1xuICAgIF8uaW5pdFNsaWRlRXZlbnRzKCk7XG5cbiAgICBfLmNoZWNrUmVzcG9uc2l2ZShmYWxzZSwgdHJ1ZSk7XG5cbiAgICBpZiAoXy5vcHRpb25zLmZvY3VzT25TZWxlY3QgPT09IHRydWUpIHtcbiAgICAgICQoXy4kc2xpZGVUcmFjaykuY2hpbGRyZW4oKS5vbihcImNsaWNrLnNsaWNrXCIsIF8uc2VsZWN0SGFuZGxlcik7XG4gICAgfVxuXG4gICAgXy5zZXRTbGlkZUNsYXNzZXModHlwZW9mIF8uY3VycmVudFNsaWRlID09PSBcIm51bWJlclwiID8gXy5jdXJyZW50U2xpZGUgOiAwKTtcblxuICAgIF8uc2V0UG9zaXRpb24oKTtcbiAgICBfLmZvY3VzSGFuZGxlcigpO1xuXG4gICAgXy5wYXVzZWQgPSAhXy5vcHRpb25zLmF1dG9wbGF5O1xuICAgIF8uYXV0b1BsYXkoKTtcblxuICAgIF8uJHNsaWRlci50cmlnZ2VyKFwicmVJbml0XCIsIFtfXSk7XG4gIH07XG5cbiAgU2xpY2sucHJvdG90eXBlLnJlc2l6ZSA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgXyA9IHRoaXM7XG5cbiAgICBpZiAoJCh3aW5kb3cpLndpZHRoKCkgIT09IF8ud2luZG93V2lkdGgpIHtcbiAgICAgIGNsZWFyVGltZW91dChfLndpbmRvd0RlbGF5KTtcbiAgICAgIF8ud2luZG93RGVsYXkgPSB3aW5kb3cuc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgIF8ud2luZG93V2lkdGggPSAkKHdpbmRvdykud2lkdGgoKTtcbiAgICAgICAgXy5jaGVja1Jlc3BvbnNpdmUoKTtcbiAgICAgICAgaWYgKCFfLnVuc2xpY2tlZCkge1xuICAgICAgICAgIF8uc2V0UG9zaXRpb24oKTtcbiAgICAgICAgfVxuICAgICAgfSwgNTApO1xuICAgIH1cbiAgfTtcblxuICBTbGljay5wcm90b3R5cGUucmVtb3ZlU2xpZGUgPSBTbGljay5wcm90b3R5cGUuc2xpY2tSZW1vdmUgPSBmdW5jdGlvbiAoXG4gICAgaW5kZXgsXG4gICAgcmVtb3ZlQmVmb3JlLFxuICAgIHJlbW92ZUFsbFxuICApIHtcbiAgICB2YXIgXyA9IHRoaXM7XG5cbiAgICBpZiAodHlwZW9mIGluZGV4ID09PSBcImJvb2xlYW5cIikge1xuICAgICAgcmVtb3ZlQmVmb3JlID0gaW5kZXg7XG4gICAgICBpbmRleCA9IHJlbW92ZUJlZm9yZSA9PT0gdHJ1ZSA/IDAgOiBfLnNsaWRlQ291bnQgLSAxO1xuICAgIH0gZWxzZSB7XG4gICAgICBpbmRleCA9IHJlbW92ZUJlZm9yZSA9PT0gdHJ1ZSA/IC0taW5kZXggOiBpbmRleDtcbiAgICB9XG5cbiAgICBpZiAoXy5zbGlkZUNvdW50IDwgMSB8fCBpbmRleCA8IDAgfHwgaW5kZXggPiBfLnNsaWRlQ291bnQgLSAxKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgXy51bmxvYWQoKTtcblxuICAgIGlmIChyZW1vdmVBbGwgPT09IHRydWUpIHtcbiAgICAgIF8uJHNsaWRlVHJhY2suY2hpbGRyZW4oKS5yZW1vdmUoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgXy4kc2xpZGVUcmFjay5jaGlsZHJlbih0aGlzLm9wdGlvbnMuc2xpZGUpLmVxKGluZGV4KS5yZW1vdmUoKTtcbiAgICB9XG5cbiAgICBfLiRzbGlkZXMgPSBfLiRzbGlkZVRyYWNrLmNoaWxkcmVuKHRoaXMub3B0aW9ucy5zbGlkZSk7XG5cbiAgICBfLiRzbGlkZVRyYWNrLmNoaWxkcmVuKHRoaXMub3B0aW9ucy5zbGlkZSkuZGV0YWNoKCk7XG5cbiAgICBfLiRzbGlkZVRyYWNrLmFwcGVuZChfLiRzbGlkZXMpO1xuXG4gICAgXy4kc2xpZGVzQ2FjaGUgPSBfLiRzbGlkZXM7XG5cbiAgICBfLnJlaW5pdCgpO1xuICB9O1xuXG4gIFNsaWNrLnByb3RvdHlwZS5zZXRDU1MgPSBmdW5jdGlvbiAocG9zaXRpb24pIHtcbiAgICB2YXIgXyA9IHRoaXMsXG4gICAgICBwb3NpdGlvblByb3BzID0ge30sXG4gICAgICB4LFxuICAgICAgeTtcblxuICAgIGlmIChfLm9wdGlvbnMucnRsID09PSB0cnVlKSB7XG4gICAgICBwb3NpdGlvbiA9IC1wb3NpdGlvbjtcbiAgICB9XG4gICAgeCA9IF8ucG9zaXRpb25Qcm9wID09IFwibGVmdFwiID8gTWF0aC5jZWlsKHBvc2l0aW9uKSArIFwicHhcIiA6IFwiMHB4XCI7XG4gICAgeSA9IF8ucG9zaXRpb25Qcm9wID09IFwidG9wXCIgPyBNYXRoLmNlaWwocG9zaXRpb24pICsgXCJweFwiIDogXCIwcHhcIjtcblxuICAgIHBvc2l0aW9uUHJvcHNbXy5wb3NpdGlvblByb3BdID0gcG9zaXRpb247XG5cbiAgICBpZiAoXy50cmFuc2Zvcm1zRW5hYmxlZCA9PT0gZmFsc2UpIHtcbiAgICAgIF8uJHNsaWRlVHJhY2suY3NzKHBvc2l0aW9uUHJvcHMpO1xuICAgIH0gZWxzZSB7XG4gICAgICBwb3NpdGlvblByb3BzID0ge307XG4gICAgICBpZiAoXy5jc3NUcmFuc2l0aW9ucyA9PT0gZmFsc2UpIHtcbiAgICAgICAgcG9zaXRpb25Qcm9wc1tfLmFuaW1UeXBlXSA9IFwidHJhbnNsYXRlKFwiICsgeCArIFwiLCBcIiArIHkgKyBcIilcIjtcbiAgICAgICAgXy4kc2xpZGVUcmFjay5jc3MocG9zaXRpb25Qcm9wcyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwb3NpdGlvblByb3BzW18uYW5pbVR5cGVdID0gXCJ0cmFuc2xhdGUzZChcIiArIHggKyBcIiwgXCIgKyB5ICsgXCIsIDBweClcIjtcbiAgICAgICAgXy4kc2xpZGVUcmFjay5jc3MocG9zaXRpb25Qcm9wcyk7XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG4gIFNsaWNrLnByb3RvdHlwZS5zZXREaW1lbnNpb25zID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBfID0gdGhpcztcblxuICAgIGlmIChfLm9wdGlvbnMudmVydGljYWwgPT09IGZhbHNlKSB7XG4gICAgICBpZiAoXy5vcHRpb25zLmNlbnRlck1vZGUgPT09IHRydWUpIHtcbiAgICAgICAgXy4kbGlzdC5jc3Moe1xuICAgICAgICAgIHBhZGRpbmc6IFwiMHB4IFwiICsgXy5vcHRpb25zLmNlbnRlclBhZGRpbmcsXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBfLiRsaXN0LmhlaWdodChcbiAgICAgICAgXy4kc2xpZGVzLmZpcnN0KCkub3V0ZXJIZWlnaHQodHJ1ZSkgKiBfLm9wdGlvbnMuc2xpZGVzVG9TaG93XG4gICAgICApO1xuICAgICAgaWYgKF8ub3B0aW9ucy5jZW50ZXJNb2RlID09PSB0cnVlKSB7XG4gICAgICAgIF8uJGxpc3QuY3NzKHtcbiAgICAgICAgICBwYWRkaW5nOiBfLm9wdGlvbnMuY2VudGVyUGFkZGluZyArIFwiIDBweFwiLFxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBfLmxpc3RXaWR0aCA9IF8uJGxpc3Qud2lkdGgoKTtcbiAgICBfLmxpc3RIZWlnaHQgPSBfLiRsaXN0LmhlaWdodCgpO1xuXG4gICAgaWYgKF8ub3B0aW9ucy52ZXJ0aWNhbCA9PT0gZmFsc2UgJiYgXy5vcHRpb25zLnZhcmlhYmxlV2lkdGggPT09IGZhbHNlKSB7XG4gICAgICBfLnNsaWRlV2lkdGggPSBNYXRoLmNlaWwoXy5saXN0V2lkdGggLyBfLm9wdGlvbnMuc2xpZGVzVG9TaG93KTtcbiAgICAgIF8uJHNsaWRlVHJhY2sud2lkdGgoXG4gICAgICAgIE1hdGguY2VpbChfLnNsaWRlV2lkdGggKiBfLiRzbGlkZVRyYWNrLmNoaWxkcmVuKFwiLnNsaWNrLXNsaWRlXCIpLmxlbmd0aClcbiAgICAgICk7XG4gICAgfSBlbHNlIGlmIChfLm9wdGlvbnMudmFyaWFibGVXaWR0aCA9PT0gdHJ1ZSkge1xuICAgICAgXy4kc2xpZGVUcmFjay53aWR0aCg1MDAwICogXy5zbGlkZUNvdW50KTtcbiAgICB9IGVsc2Uge1xuICAgICAgXy5zbGlkZVdpZHRoID0gTWF0aC5jZWlsKF8ubGlzdFdpZHRoKTtcbiAgICAgIF8uJHNsaWRlVHJhY2suaGVpZ2h0KFxuICAgICAgICBNYXRoLmNlaWwoXG4gICAgICAgICAgXy4kc2xpZGVzLmZpcnN0KCkub3V0ZXJIZWlnaHQodHJ1ZSkgKlxuICAgICAgICAgICAgXy4kc2xpZGVUcmFjay5jaGlsZHJlbihcIi5zbGljay1zbGlkZVwiKS5sZW5ndGhcbiAgICAgICAgKVxuICAgICAgKTtcbiAgICB9XG5cbiAgICB2YXIgb2Zmc2V0ID0gXy4kc2xpZGVzLmZpcnN0KCkub3V0ZXJXaWR0aCh0cnVlKSAtIF8uJHNsaWRlcy5maXJzdCgpLndpZHRoKCk7XG4gICAgaWYgKF8ub3B0aW9ucy52YXJpYWJsZVdpZHRoID09PSBmYWxzZSlcbiAgICAgIF8uJHNsaWRlVHJhY2suY2hpbGRyZW4oXCIuc2xpY2stc2xpZGVcIikud2lkdGgoXy5zbGlkZVdpZHRoIC0gb2Zmc2V0KTtcbiAgfTtcblxuICBTbGljay5wcm90b3R5cGUuc2V0RmFkZSA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgXyA9IHRoaXMsXG4gICAgICB0YXJnZXRMZWZ0O1xuXG4gICAgXy4kc2xpZGVzLmVhY2goZnVuY3Rpb24gKGluZGV4LCBlbGVtZW50KSB7XG4gICAgICB0YXJnZXRMZWZ0ID0gXy5zbGlkZVdpZHRoICogaW5kZXggKiAtMTtcbiAgICAgIGlmIChfLm9wdGlvbnMucnRsID09PSB0cnVlKSB7XG4gICAgICAgICQoZWxlbWVudCkuY3NzKHtcbiAgICAgICAgICBwb3NpdGlvbjogXCJyZWxhdGl2ZVwiLFxuICAgICAgICAgIHJpZ2h0OiB0YXJnZXRMZWZ0LFxuICAgICAgICAgIHRvcDogMCxcbiAgICAgICAgICB6SW5kZXg6IF8ub3B0aW9ucy56SW5kZXggLSAyLFxuICAgICAgICAgIG9wYWNpdHk6IDAsXG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgJChlbGVtZW50KS5jc3Moe1xuICAgICAgICAgIHBvc2l0aW9uOiBcInJlbGF0aXZlXCIsXG4gICAgICAgICAgbGVmdDogdGFyZ2V0TGVmdCxcbiAgICAgICAgICB0b3A6IDAsXG4gICAgICAgICAgekluZGV4OiBfLm9wdGlvbnMuekluZGV4IC0gMixcbiAgICAgICAgICBvcGFjaXR5OiAwLFxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIF8uJHNsaWRlcy5lcShfLmN1cnJlbnRTbGlkZSkuY3NzKHtcbiAgICAgIHpJbmRleDogXy5vcHRpb25zLnpJbmRleCAtIDEsXG4gICAgICBvcGFjaXR5OiAxLFxuICAgIH0pO1xuICB9O1xuXG4gIFNsaWNrLnByb3RvdHlwZS5zZXRIZWlnaHQgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIF8gPSB0aGlzO1xuXG4gICAgaWYgKFxuICAgICAgXy5vcHRpb25zLnNsaWRlc1RvU2hvdyA9PT0gMSAmJlxuICAgICAgXy5vcHRpb25zLmFkYXB0aXZlSGVpZ2h0ID09PSB0cnVlICYmXG4gICAgICBfLm9wdGlvbnMudmVydGljYWwgPT09IGZhbHNlXG4gICAgKSB7XG4gICAgICB2YXIgdGFyZ2V0SGVpZ2h0ID0gXy4kc2xpZGVzLmVxKF8uY3VycmVudFNsaWRlKS5vdXRlckhlaWdodCh0cnVlKTtcbiAgICAgIF8uJGxpc3QuY3NzKFwiaGVpZ2h0XCIsIHRhcmdldEhlaWdodCk7XG4gICAgfVxuICB9O1xuXG4gIFNsaWNrLnByb3RvdHlwZS5zZXRPcHRpb24gPSBTbGljay5wcm90b3R5cGUuc2xpY2tTZXRPcHRpb24gPSBmdW5jdGlvbiAoKSB7XG4gICAgLyoqXG4gICAgICogYWNjZXB0cyBhcmd1bWVudHMgaW4gZm9ybWF0IG9mOlxuICAgICAqXG4gICAgICogIC0gZm9yIGNoYW5naW5nIGEgc2luZ2xlIG9wdGlvbidzIHZhbHVlOlxuICAgICAqICAgICAuc2xpY2soXCJzZXRPcHRpb25cIiwgb3B0aW9uLCB2YWx1ZSwgcmVmcmVzaCApXG4gICAgICpcbiAgICAgKiAgLSBmb3IgY2hhbmdpbmcgYSBzZXQgb2YgcmVzcG9uc2l2ZSBvcHRpb25zOlxuICAgICAqICAgICAuc2xpY2soXCJzZXRPcHRpb25cIiwgJ3Jlc3BvbnNpdmUnLCBbe30sIC4uLl0sIHJlZnJlc2ggKVxuICAgICAqXG4gICAgICogIC0gZm9yIHVwZGF0aW5nIG11bHRpcGxlIHZhbHVlcyBhdCBvbmNlIChub3QgcmVzcG9uc2l2ZSlcbiAgICAgKiAgICAgLnNsaWNrKFwic2V0T3B0aW9uXCIsIHsgJ29wdGlvbic6IHZhbHVlLCAuLi4gfSwgcmVmcmVzaCApXG4gICAgICovXG5cbiAgICB2YXIgXyA9IHRoaXMsXG4gICAgICBsLFxuICAgICAgaXRlbSxcbiAgICAgIG9wdGlvbixcbiAgICAgIHZhbHVlLFxuICAgICAgcmVmcmVzaCA9IGZhbHNlLFxuICAgICAgdHlwZTtcblxuICAgIGlmICgkLnR5cGUoYXJndW1lbnRzWzBdKSA9PT0gXCJvYmplY3RcIikge1xuICAgICAgb3B0aW9uID0gYXJndW1lbnRzWzBdO1xuICAgICAgcmVmcmVzaCA9IGFyZ3VtZW50c1sxXTtcbiAgICAgIHR5cGUgPSBcIm11bHRpcGxlXCI7XG4gICAgfSBlbHNlIGlmICgkLnR5cGUoYXJndW1lbnRzWzBdKSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgb3B0aW9uID0gYXJndW1lbnRzWzBdO1xuICAgICAgdmFsdWUgPSBhcmd1bWVudHNbMV07XG4gICAgICByZWZyZXNoID0gYXJndW1lbnRzWzJdO1xuXG4gICAgICBpZiAoYXJndW1lbnRzWzBdID09PSBcInJlc3BvbnNpdmVcIiAmJiAkLnR5cGUoYXJndW1lbnRzWzFdKSA9PT0gXCJhcnJheVwiKSB7XG4gICAgICAgIHR5cGUgPSBcInJlc3BvbnNpdmVcIjtcbiAgICAgIH0gZWxzZSBpZiAodHlwZW9mIGFyZ3VtZW50c1sxXSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICB0eXBlID0gXCJzaW5nbGVcIjtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAodHlwZSA9PT0gXCJzaW5nbGVcIikge1xuICAgICAgXy5vcHRpb25zW29wdGlvbl0gPSB2YWx1ZTtcbiAgICB9IGVsc2UgaWYgKHR5cGUgPT09IFwibXVsdGlwbGVcIikge1xuICAgICAgJC5lYWNoKG9wdGlvbiwgZnVuY3Rpb24gKG9wdCwgdmFsKSB7XG4gICAgICAgIF8ub3B0aW9uc1tvcHRdID0gdmFsO1xuICAgICAgfSk7XG4gICAgfSBlbHNlIGlmICh0eXBlID09PSBcInJlc3BvbnNpdmVcIikge1xuICAgICAgZm9yIChpdGVtIGluIHZhbHVlKSB7XG4gICAgICAgIGlmICgkLnR5cGUoXy5vcHRpb25zLnJlc3BvbnNpdmUpICE9PSBcImFycmF5XCIpIHtcbiAgICAgICAgICBfLm9wdGlvbnMucmVzcG9uc2l2ZSA9IFt2YWx1ZVtpdGVtXV07XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgbCA9IF8ub3B0aW9ucy5yZXNwb25zaXZlLmxlbmd0aCAtIDE7XG5cbiAgICAgICAgICAvLyBsb29wIHRocm91Z2ggdGhlIHJlc3BvbnNpdmUgb2JqZWN0IGFuZCBzcGxpY2Ugb3V0IGR1cGxpY2F0ZXMuXG4gICAgICAgICAgd2hpbGUgKGwgPj0gMCkge1xuICAgICAgICAgICAgaWYgKF8ub3B0aW9ucy5yZXNwb25zaXZlW2xdLmJyZWFrcG9pbnQgPT09IHZhbHVlW2l0ZW1dLmJyZWFrcG9pbnQpIHtcbiAgICAgICAgICAgICAgXy5vcHRpb25zLnJlc3BvbnNpdmUuc3BsaWNlKGwsIDEpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBsLS07XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgXy5vcHRpb25zLnJlc3BvbnNpdmUucHVzaCh2YWx1ZVtpdGVtXSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAocmVmcmVzaCkge1xuICAgICAgXy51bmxvYWQoKTtcbiAgICAgIF8ucmVpbml0KCk7XG4gICAgfVxuICB9O1xuXG4gIFNsaWNrLnByb3RvdHlwZS5zZXRQb3NpdGlvbiA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgXyA9IHRoaXM7XG5cbiAgICBfLnNldERpbWVuc2lvbnMoKTtcblxuICAgIF8uc2V0SGVpZ2h0KCk7XG5cbiAgICBpZiAoXy5vcHRpb25zLmZhZGUgPT09IGZhbHNlKSB7XG4gICAgICBfLnNldENTUyhfLmdldExlZnQoXy5jdXJyZW50U2xpZGUpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgXy5zZXRGYWRlKCk7XG4gICAgfVxuXG4gICAgXy4kc2xpZGVyLnRyaWdnZXIoXCJzZXRQb3NpdGlvblwiLCBbX10pO1xuICB9O1xuXG4gIFNsaWNrLnByb3RvdHlwZS5zZXRQcm9wcyA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgXyA9IHRoaXMsXG4gICAgICBib2R5U3R5bGUgPSBkb2N1bWVudC5ib2R5LnN0eWxlO1xuXG4gICAgXy5wb3NpdGlvblByb3AgPSBfLm9wdGlvbnMudmVydGljYWwgPT09IHRydWUgPyBcInRvcFwiIDogXCJsZWZ0XCI7XG5cbiAgICBpZiAoXy5wb3NpdGlvblByb3AgPT09IFwidG9wXCIpIHtcbiAgICAgIF8uJHNsaWRlci5hZGRDbGFzcyhcInNsaWNrLXZlcnRpY2FsXCIpO1xuICAgIH0gZWxzZSB7XG4gICAgICBfLiRzbGlkZXIucmVtb3ZlQ2xhc3MoXCJzbGljay12ZXJ0aWNhbFwiKTtcbiAgICB9XG5cbiAgICBpZiAoXG4gICAgICBib2R5U3R5bGUuV2Via2l0VHJhbnNpdGlvbiAhPT0gdW5kZWZpbmVkIHx8XG4gICAgICBib2R5U3R5bGUuTW96VHJhbnNpdGlvbiAhPT0gdW5kZWZpbmVkIHx8XG4gICAgICBib2R5U3R5bGUubXNUcmFuc2l0aW9uICE9PSB1bmRlZmluZWRcbiAgICApIHtcbiAgICAgIGlmIChfLm9wdGlvbnMudXNlQ1NTID09PSB0cnVlKSB7XG4gICAgICAgIF8uY3NzVHJhbnNpdGlvbnMgPSB0cnVlO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChfLm9wdGlvbnMuZmFkZSkge1xuICAgICAgaWYgKHR5cGVvZiBfLm9wdGlvbnMuekluZGV4ID09PSBcIm51bWJlclwiKSB7XG4gICAgICAgIGlmIChfLm9wdGlvbnMuekluZGV4IDwgMykge1xuICAgICAgICAgIF8ub3B0aW9ucy56SW5kZXggPSAzO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBfLm9wdGlvbnMuekluZGV4ID0gXy5kZWZhdWx0cy56SW5kZXg7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGJvZHlTdHlsZS5PVHJhbnNmb3JtICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIF8uYW5pbVR5cGUgPSBcIk9UcmFuc2Zvcm1cIjtcbiAgICAgIF8udHJhbnNmb3JtVHlwZSA9IFwiLW8tdHJhbnNmb3JtXCI7XG4gICAgICBfLnRyYW5zaXRpb25UeXBlID0gXCJPVHJhbnNpdGlvblwiO1xuICAgICAgaWYgKFxuICAgICAgICBib2R5U3R5bGUucGVyc3BlY3RpdmVQcm9wZXJ0eSA9PT0gdW5kZWZpbmVkICYmXG4gICAgICAgIGJvZHlTdHlsZS53ZWJraXRQZXJzcGVjdGl2ZSA9PT0gdW5kZWZpbmVkXG4gICAgICApXG4gICAgICAgIF8uYW5pbVR5cGUgPSBmYWxzZTtcbiAgICB9XG4gICAgaWYgKGJvZHlTdHlsZS5Nb3pUcmFuc2Zvcm0gIT09IHVuZGVmaW5lZCkge1xuICAgICAgXy5hbmltVHlwZSA9IFwiTW96VHJhbnNmb3JtXCI7XG4gICAgICBfLnRyYW5zZm9ybVR5cGUgPSBcIi1tb3otdHJhbnNmb3JtXCI7XG4gICAgICBfLnRyYW5zaXRpb25UeXBlID0gXCJNb3pUcmFuc2l0aW9uXCI7XG4gICAgICBpZiAoXG4gICAgICAgIGJvZHlTdHlsZS5wZXJzcGVjdGl2ZVByb3BlcnR5ID09PSB1bmRlZmluZWQgJiZcbiAgICAgICAgYm9keVN0eWxlLk1velBlcnNwZWN0aXZlID09PSB1bmRlZmluZWRcbiAgICAgIClcbiAgICAgICAgXy5hbmltVHlwZSA9IGZhbHNlO1xuICAgIH1cbiAgICBpZiAoYm9keVN0eWxlLndlYmtpdFRyYW5zZm9ybSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICBfLmFuaW1UeXBlID0gXCJ3ZWJraXRUcmFuc2Zvcm1cIjtcbiAgICAgIF8udHJhbnNmb3JtVHlwZSA9IFwiLXdlYmtpdC10cmFuc2Zvcm1cIjtcbiAgICAgIF8udHJhbnNpdGlvblR5cGUgPSBcIndlYmtpdFRyYW5zaXRpb25cIjtcbiAgICAgIGlmIChcbiAgICAgICAgYm9keVN0eWxlLnBlcnNwZWN0aXZlUHJvcGVydHkgPT09IHVuZGVmaW5lZCAmJlxuICAgICAgICBib2R5U3R5bGUud2Via2l0UGVyc3BlY3RpdmUgPT09IHVuZGVmaW5lZFxuICAgICAgKVxuICAgICAgICBfLmFuaW1UeXBlID0gZmFsc2U7XG4gICAgfVxuICAgIGlmIChib2R5U3R5bGUubXNUcmFuc2Zvcm0gIT09IHVuZGVmaW5lZCkge1xuICAgICAgXy5hbmltVHlwZSA9IFwibXNUcmFuc2Zvcm1cIjtcbiAgICAgIF8udHJhbnNmb3JtVHlwZSA9IFwiLW1zLXRyYW5zZm9ybVwiO1xuICAgICAgXy50cmFuc2l0aW9uVHlwZSA9IFwibXNUcmFuc2l0aW9uXCI7XG4gICAgICBpZiAoYm9keVN0eWxlLm1zVHJhbnNmb3JtID09PSB1bmRlZmluZWQpIF8uYW5pbVR5cGUgPSBmYWxzZTtcbiAgICB9XG4gICAgaWYgKGJvZHlTdHlsZS50cmFuc2Zvcm0gIT09IHVuZGVmaW5lZCAmJiBfLmFuaW1UeXBlICE9PSBmYWxzZSkge1xuICAgICAgXy5hbmltVHlwZSA9IFwidHJhbnNmb3JtXCI7XG4gICAgICBfLnRyYW5zZm9ybVR5cGUgPSBcInRyYW5zZm9ybVwiO1xuICAgICAgXy50cmFuc2l0aW9uVHlwZSA9IFwidHJhbnNpdGlvblwiO1xuICAgIH1cbiAgICBfLnRyYW5zZm9ybXNFbmFibGVkID1cbiAgICAgIF8ub3B0aW9ucy51c2VUcmFuc2Zvcm0gJiYgXy5hbmltVHlwZSAhPT0gbnVsbCAmJiBfLmFuaW1UeXBlICE9PSBmYWxzZTtcbiAgfTtcblxuICBTbGljay5wcm90b3R5cGUuc2V0U2xpZGVDbGFzc2VzID0gZnVuY3Rpb24gKGluZGV4KSB7XG4gICAgdmFyIF8gPSB0aGlzLFxuICAgICAgY2VudGVyT2Zmc2V0LFxuICAgICAgYWxsU2xpZGVzLFxuICAgICAgaW5kZXhPZmZzZXQsXG4gICAgICByZW1haW5kZXI7XG5cbiAgICBhbGxTbGlkZXMgPSBfLiRzbGlkZXJcbiAgICAgIC5maW5kKFwiLnNsaWNrLXNsaWRlXCIpXG4gICAgICAucmVtb3ZlQ2xhc3MoXCJzbGljay1hY3RpdmUgc2xpY2stY2VudGVyIHNsaWNrLWN1cnJlbnRcIilcbiAgICAgIC5hdHRyKFwiYXJpYS1oaWRkZW5cIiwgXCJ0cnVlXCIpO1xuXG4gICAgXy4kc2xpZGVzLmVxKGluZGV4KS5hZGRDbGFzcyhcInNsaWNrLWN1cnJlbnRcIik7XG5cbiAgICBpZiAoXy5vcHRpb25zLmNlbnRlck1vZGUgPT09IHRydWUpIHtcbiAgICAgIHZhciBldmVuQ29lZiA9IF8ub3B0aW9ucy5zbGlkZXNUb1Nob3cgJSAyID09PSAwID8gMSA6IDA7XG5cbiAgICAgIGNlbnRlck9mZnNldCA9IE1hdGguZmxvb3IoXy5vcHRpb25zLnNsaWRlc1RvU2hvdyAvIDIpO1xuXG4gICAgICBpZiAoXy5vcHRpb25zLmluZmluaXRlID09PSB0cnVlKSB7XG4gICAgICAgIGlmIChpbmRleCA+PSBjZW50ZXJPZmZzZXQgJiYgaW5kZXggPD0gXy5zbGlkZUNvdW50IC0gMSAtIGNlbnRlck9mZnNldCkge1xuICAgICAgICAgIF8uJHNsaWRlc1xuICAgICAgICAgICAgLnNsaWNlKGluZGV4IC0gY2VudGVyT2Zmc2V0ICsgZXZlbkNvZWYsIGluZGV4ICsgY2VudGVyT2Zmc2V0ICsgMSlcbiAgICAgICAgICAgIC5hZGRDbGFzcyhcInNsaWNrLWFjdGl2ZVwiKVxuICAgICAgICAgICAgLmF0dHIoXCJhcmlhLWhpZGRlblwiLCBcImZhbHNlXCIpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGluZGV4T2Zmc2V0ID0gXy5vcHRpb25zLnNsaWRlc1RvU2hvdyArIGluZGV4O1xuICAgICAgICAgIGFsbFNsaWRlc1xuICAgICAgICAgICAgLnNsaWNlKFxuICAgICAgICAgICAgICBpbmRleE9mZnNldCAtIGNlbnRlck9mZnNldCArIDEgKyBldmVuQ29lZixcbiAgICAgICAgICAgICAgaW5kZXhPZmZzZXQgKyBjZW50ZXJPZmZzZXQgKyAyXG4gICAgICAgICAgICApXG4gICAgICAgICAgICAuYWRkQ2xhc3MoXCJzbGljay1hY3RpdmVcIilcbiAgICAgICAgICAgIC5hdHRyKFwiYXJpYS1oaWRkZW5cIiwgXCJmYWxzZVwiKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChpbmRleCA9PT0gMCkge1xuICAgICAgICAgIGFsbFNsaWRlc1xuICAgICAgICAgICAgLmVxKGFsbFNsaWRlcy5sZW5ndGggLSAxIC0gXy5vcHRpb25zLnNsaWRlc1RvU2hvdylcbiAgICAgICAgICAgIC5hZGRDbGFzcyhcInNsaWNrLWNlbnRlclwiKTtcbiAgICAgICAgfSBlbHNlIGlmIChpbmRleCA9PT0gXy5zbGlkZUNvdW50IC0gMSkge1xuICAgICAgICAgIGFsbFNsaWRlcy5lcShfLm9wdGlvbnMuc2xpZGVzVG9TaG93KS5hZGRDbGFzcyhcInNsaWNrLWNlbnRlclwiKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBfLiRzbGlkZXMuZXEoaW5kZXgpLmFkZENsYXNzKFwic2xpY2stY2VudGVyXCIpO1xuICAgIH0gZWxzZSB7XG4gICAgICBpZiAoaW5kZXggPj0gMCAmJiBpbmRleCA8PSBfLnNsaWRlQ291bnQgLSBfLm9wdGlvbnMuc2xpZGVzVG9TaG93KSB7XG4gICAgICAgIF8uJHNsaWRlc1xuICAgICAgICAgIC5zbGljZShpbmRleCwgaW5kZXggKyBfLm9wdGlvbnMuc2xpZGVzVG9TaG93KVxuICAgICAgICAgIC5hZGRDbGFzcyhcInNsaWNrLWFjdGl2ZVwiKVxuICAgICAgICAgIC5hdHRyKFwiYXJpYS1oaWRkZW5cIiwgXCJmYWxzZVwiKTtcbiAgICAgIH0gZWxzZSBpZiAoYWxsU2xpZGVzLmxlbmd0aCA8PSBfLm9wdGlvbnMuc2xpZGVzVG9TaG93KSB7XG4gICAgICAgIGFsbFNsaWRlcy5hZGRDbGFzcyhcInNsaWNrLWFjdGl2ZVwiKS5hdHRyKFwiYXJpYS1oaWRkZW5cIiwgXCJmYWxzZVwiKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJlbWFpbmRlciA9IF8uc2xpZGVDb3VudCAlIF8ub3B0aW9ucy5zbGlkZXNUb1Nob3c7XG4gICAgICAgIGluZGV4T2Zmc2V0ID1cbiAgICAgICAgICBfLm9wdGlvbnMuaW5maW5pdGUgPT09IHRydWUgPyBfLm9wdGlvbnMuc2xpZGVzVG9TaG93ICsgaW5kZXggOiBpbmRleDtcblxuICAgICAgICBpZiAoXG4gICAgICAgICAgXy5vcHRpb25zLnNsaWRlc1RvU2hvdyA9PSBfLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGwgJiZcbiAgICAgICAgICBfLnNsaWRlQ291bnQgLSBpbmRleCA8IF8ub3B0aW9ucy5zbGlkZXNUb1Nob3dcbiAgICAgICAgKSB7XG4gICAgICAgICAgYWxsU2xpZGVzXG4gICAgICAgICAgICAuc2xpY2UoXG4gICAgICAgICAgICAgIGluZGV4T2Zmc2V0IC0gKF8ub3B0aW9ucy5zbGlkZXNUb1Nob3cgLSByZW1haW5kZXIpLFxuICAgICAgICAgICAgICBpbmRleE9mZnNldCArIHJlbWFpbmRlclxuICAgICAgICAgICAgKVxuICAgICAgICAgICAgLmFkZENsYXNzKFwic2xpY2stYWN0aXZlXCIpXG4gICAgICAgICAgICAuYXR0cihcImFyaWEtaGlkZGVuXCIsIFwiZmFsc2VcIik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgYWxsU2xpZGVzXG4gICAgICAgICAgICAuc2xpY2UoaW5kZXhPZmZzZXQsIGluZGV4T2Zmc2V0ICsgXy5vcHRpb25zLnNsaWRlc1RvU2hvdylcbiAgICAgICAgICAgIC5hZGRDbGFzcyhcInNsaWNrLWFjdGl2ZVwiKVxuICAgICAgICAgICAgLmF0dHIoXCJhcmlhLWhpZGRlblwiLCBcImZhbHNlXCIpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKFxuICAgICAgXy5vcHRpb25zLmxhenlMb2FkID09PSBcIm9uZGVtYW5kXCIgfHxcbiAgICAgIF8ub3B0aW9ucy5sYXp5TG9hZCA9PT0gXCJhbnRpY2lwYXRlZFwiXG4gICAgKSB7XG4gICAgICBfLmxhenlMb2FkKCk7XG4gICAgfVxuICB9O1xuXG4gIFNsaWNrLnByb3RvdHlwZS5zZXR1cEluZmluaXRlID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBfID0gdGhpcyxcbiAgICAgIGksXG4gICAgICBzbGlkZUluZGV4LFxuICAgICAgaW5maW5pdGVDb3VudDtcblxuICAgIGlmIChfLm9wdGlvbnMuZmFkZSA9PT0gdHJ1ZSkge1xuICAgICAgXy5vcHRpb25zLmNlbnRlck1vZGUgPSBmYWxzZTtcbiAgICB9XG5cbiAgICBpZiAoXy5vcHRpb25zLmluZmluaXRlID09PSB0cnVlICYmIF8ub3B0aW9ucy5mYWRlID09PSBmYWxzZSkge1xuICAgICAgc2xpZGVJbmRleCA9IG51bGw7XG5cbiAgICAgIGlmIChfLnNsaWRlQ291bnQgPiBfLm9wdGlvbnMuc2xpZGVzVG9TaG93KSB7XG4gICAgICAgIGlmIChfLm9wdGlvbnMuY2VudGVyTW9kZSA9PT0gdHJ1ZSkge1xuICAgICAgICAgIGluZmluaXRlQ291bnQgPSBfLm9wdGlvbnMuc2xpZGVzVG9TaG93ICsgMTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpbmZpbml0ZUNvdW50ID0gXy5vcHRpb25zLnNsaWRlc1RvU2hvdztcbiAgICAgICAgfVxuXG4gICAgICAgIGZvciAoaSA9IF8uc2xpZGVDb3VudDsgaSA+IF8uc2xpZGVDb3VudCAtIGluZmluaXRlQ291bnQ7IGkgLT0gMSkge1xuICAgICAgICAgIHNsaWRlSW5kZXggPSBpIC0gMTtcbiAgICAgICAgICAkKF8uJHNsaWRlc1tzbGlkZUluZGV4XSlcbiAgICAgICAgICAgIC5jbG9uZSh0cnVlKVxuICAgICAgICAgICAgLmF0dHIoXCJpZFwiLCBcIlwiKVxuICAgICAgICAgICAgLmF0dHIoXCJkYXRhLXNsaWNrLWluZGV4XCIsIHNsaWRlSW5kZXggLSBfLnNsaWRlQ291bnQpXG4gICAgICAgICAgICAucHJlcGVuZFRvKF8uJHNsaWRlVHJhY2spXG4gICAgICAgICAgICAuYWRkQ2xhc3MoXCJzbGljay1jbG9uZWRcIik7XG4gICAgICAgIH1cbiAgICAgICAgZm9yIChpID0gMDsgaSA8IGluZmluaXRlQ291bnQgKyBfLnNsaWRlQ291bnQ7IGkgKz0gMSkge1xuICAgICAgICAgIHNsaWRlSW5kZXggPSBpO1xuICAgICAgICAgICQoXy4kc2xpZGVzW3NsaWRlSW5kZXhdKVxuICAgICAgICAgICAgLmNsb25lKHRydWUpXG4gICAgICAgICAgICAuYXR0cihcImlkXCIsIFwiXCIpXG4gICAgICAgICAgICAuYXR0cihcImRhdGEtc2xpY2staW5kZXhcIiwgc2xpZGVJbmRleCArIF8uc2xpZGVDb3VudClcbiAgICAgICAgICAgIC5hcHBlbmRUbyhfLiRzbGlkZVRyYWNrKVxuICAgICAgICAgICAgLmFkZENsYXNzKFwic2xpY2stY2xvbmVkXCIpO1xuICAgICAgICB9XG4gICAgICAgIF8uJHNsaWRlVHJhY2tcbiAgICAgICAgICAuZmluZChcIi5zbGljay1jbG9uZWRcIilcbiAgICAgICAgICAuZmluZChcIltpZF1cIilcbiAgICAgICAgICAuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAkKHRoaXMpLmF0dHIoXCJpZFwiLCBcIlwiKTtcbiAgICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG4gIH07XG5cbiAgU2xpY2sucHJvdG90eXBlLmludGVycnVwdCA9IGZ1bmN0aW9uICh0b2dnbGUpIHtcbiAgICB2YXIgXyA9IHRoaXM7XG5cbiAgICBpZiAoIXRvZ2dsZSkge1xuICAgICAgXy5hdXRvUGxheSgpO1xuICAgIH1cbiAgICBfLmludGVycnVwdGVkID0gdG9nZ2xlO1xuICB9O1xuXG4gIFNsaWNrLnByb3RvdHlwZS5zZWxlY3RIYW5kbGVyID0gZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgdmFyIF8gPSB0aGlzO1xuXG4gICAgdmFyIHRhcmdldEVsZW1lbnQgPSAkKGV2ZW50LnRhcmdldCkuaXMoXCIuc2xpY2stc2xpZGVcIilcbiAgICAgID8gJChldmVudC50YXJnZXQpXG4gICAgICA6ICQoZXZlbnQudGFyZ2V0KS5wYXJlbnRzKFwiLnNsaWNrLXNsaWRlXCIpO1xuXG4gICAgdmFyIGluZGV4ID0gcGFyc2VJbnQodGFyZ2V0RWxlbWVudC5hdHRyKFwiZGF0YS1zbGljay1pbmRleFwiKSk7XG5cbiAgICBpZiAoIWluZGV4KSBpbmRleCA9IDA7XG5cbiAgICBpZiAoXy5zbGlkZUNvdW50IDw9IF8ub3B0aW9ucy5zbGlkZXNUb1Nob3cpIHtcbiAgICAgIF8uc2xpZGVIYW5kbGVyKGluZGV4LCBmYWxzZSwgdHJ1ZSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgXy5zbGlkZUhhbmRsZXIoaW5kZXgpO1xuICB9O1xuXG4gIFNsaWNrLnByb3RvdHlwZS5zbGlkZUhhbmRsZXIgPSBmdW5jdGlvbiAoaW5kZXgsIHN5bmMsIGRvbnRBbmltYXRlKSB7XG4gICAgdmFyIHRhcmdldFNsaWRlLFxuICAgICAgYW5pbVNsaWRlLFxuICAgICAgb2xkU2xpZGUsXG4gICAgICBzbGlkZUxlZnQsXG4gICAgICB0YXJnZXRMZWZ0ID0gbnVsbCxcbiAgICAgIF8gPSB0aGlzLFxuICAgICAgbmF2VGFyZ2V0O1xuXG4gICAgc3luYyA9IHN5bmMgfHwgZmFsc2U7XG5cbiAgICBpZiAoXy5hbmltYXRpbmcgPT09IHRydWUgJiYgXy5vcHRpb25zLndhaXRGb3JBbmltYXRlID09PSB0cnVlKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKF8ub3B0aW9ucy5mYWRlID09PSB0cnVlICYmIF8uY3VycmVudFNsaWRlID09PSBpbmRleCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmIChzeW5jID09PSBmYWxzZSkge1xuICAgICAgXy5hc05hdkZvcihpbmRleCk7XG4gICAgfVxuXG4gICAgdGFyZ2V0U2xpZGUgPSBpbmRleDtcbiAgICB0YXJnZXRMZWZ0ID0gXy5nZXRMZWZ0KHRhcmdldFNsaWRlKTtcbiAgICBzbGlkZUxlZnQgPSBfLmdldExlZnQoXy5jdXJyZW50U2xpZGUpO1xuXG4gICAgXy5jdXJyZW50TGVmdCA9IF8uc3dpcGVMZWZ0ID09PSBudWxsID8gc2xpZGVMZWZ0IDogXy5zd2lwZUxlZnQ7XG5cbiAgICBpZiAoXG4gICAgICBfLm9wdGlvbnMuaW5maW5pdGUgPT09IGZhbHNlICYmXG4gICAgICBfLm9wdGlvbnMuY2VudGVyTW9kZSA9PT0gZmFsc2UgJiZcbiAgICAgIChpbmRleCA8IDAgfHwgaW5kZXggPiBfLmdldERvdENvdW50KCkgKiBfLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGwpXG4gICAgKSB7XG4gICAgICBpZiAoXy5vcHRpb25zLmZhZGUgPT09IGZhbHNlKSB7XG4gICAgICAgIHRhcmdldFNsaWRlID0gXy5jdXJyZW50U2xpZGU7XG4gICAgICAgIGlmIChkb250QW5pbWF0ZSAhPT0gdHJ1ZSAmJiBfLnNsaWRlQ291bnQgPiBfLm9wdGlvbnMuc2xpZGVzVG9TaG93KSB7XG4gICAgICAgICAgXy5hbmltYXRlU2xpZGUoc2xpZGVMZWZ0LCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBfLnBvc3RTbGlkZSh0YXJnZXRTbGlkZSk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgXy5wb3N0U2xpZGUodGFyZ2V0U2xpZGUpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm47XG4gICAgfSBlbHNlIGlmIChcbiAgICAgIF8ub3B0aW9ucy5pbmZpbml0ZSA9PT0gZmFsc2UgJiZcbiAgICAgIF8ub3B0aW9ucy5jZW50ZXJNb2RlID09PSB0cnVlICYmXG4gICAgICAoaW5kZXggPCAwIHx8IGluZGV4ID4gXy5zbGlkZUNvdW50IC0gXy5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsKVxuICAgICkge1xuICAgICAgaWYgKF8ub3B0aW9ucy5mYWRlID09PSBmYWxzZSkge1xuICAgICAgICB0YXJnZXRTbGlkZSA9IF8uY3VycmVudFNsaWRlO1xuICAgICAgICBpZiAoZG9udEFuaW1hdGUgIT09IHRydWUgJiYgXy5zbGlkZUNvdW50ID4gXy5vcHRpb25zLnNsaWRlc1RvU2hvdykge1xuICAgICAgICAgIF8uYW5pbWF0ZVNsaWRlKHNsaWRlTGVmdCwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgXy5wb3N0U2xpZGUodGFyZ2V0U2xpZGUpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIF8ucG9zdFNsaWRlKHRhcmdldFNsaWRlKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmIChfLm9wdGlvbnMuYXV0b3BsYXkpIHtcbiAgICAgIGNsZWFySW50ZXJ2YWwoXy5hdXRvUGxheVRpbWVyKTtcbiAgICB9XG5cbiAgICBpZiAodGFyZ2V0U2xpZGUgPCAwKSB7XG4gICAgICBpZiAoXy5zbGlkZUNvdW50ICUgXy5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsICE9PSAwKSB7XG4gICAgICAgIGFuaW1TbGlkZSA9IF8uc2xpZGVDb3VudCAtIChfLnNsaWRlQ291bnQgJSBfLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGwpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgYW5pbVNsaWRlID0gXy5zbGlkZUNvdW50ICsgdGFyZ2V0U2xpZGU7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmICh0YXJnZXRTbGlkZSA+PSBfLnNsaWRlQ291bnQpIHtcbiAgICAgIGlmIChfLnNsaWRlQ291bnQgJSBfLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGwgIT09IDApIHtcbiAgICAgICAgYW5pbVNsaWRlID0gMDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGFuaW1TbGlkZSA9IHRhcmdldFNsaWRlIC0gXy5zbGlkZUNvdW50O1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBhbmltU2xpZGUgPSB0YXJnZXRTbGlkZTtcbiAgICB9XG5cbiAgICBfLmFuaW1hdGluZyA9IHRydWU7XG5cbiAgICBfLiRzbGlkZXIudHJpZ2dlcihcImJlZm9yZUNoYW5nZVwiLCBbXywgXy5jdXJyZW50U2xpZGUsIGFuaW1TbGlkZV0pO1xuXG4gICAgb2xkU2xpZGUgPSBfLmN1cnJlbnRTbGlkZTtcbiAgICBfLmN1cnJlbnRTbGlkZSA9IGFuaW1TbGlkZTtcblxuICAgIF8uc2V0U2xpZGVDbGFzc2VzKF8uY3VycmVudFNsaWRlKTtcblxuICAgIGlmIChfLm9wdGlvbnMuYXNOYXZGb3IpIHtcbiAgICAgIG5hdlRhcmdldCA9IF8uZ2V0TmF2VGFyZ2V0KCk7XG4gICAgICBuYXZUYXJnZXQgPSBuYXZUYXJnZXQuc2xpY2soXCJnZXRTbGlja1wiKTtcblxuICAgICAgaWYgKG5hdlRhcmdldC5zbGlkZUNvdW50IDw9IG5hdlRhcmdldC5vcHRpb25zLnNsaWRlc1RvU2hvdykge1xuICAgICAgICBuYXZUYXJnZXQuc2V0U2xpZGVDbGFzc2VzKF8uY3VycmVudFNsaWRlKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBfLnVwZGF0ZURvdHMoKTtcbiAgICBfLnVwZGF0ZUFycm93cygpO1xuXG4gICAgaWYgKF8ub3B0aW9ucy5mYWRlID09PSB0cnVlKSB7XG4gICAgICBpZiAoZG9udEFuaW1hdGUgIT09IHRydWUpIHtcbiAgICAgICAgXy5mYWRlU2xpZGVPdXQob2xkU2xpZGUpO1xuXG4gICAgICAgIF8uZmFkZVNsaWRlKGFuaW1TbGlkZSwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgIF8ucG9zdFNsaWRlKGFuaW1TbGlkZSk7XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgXy5wb3N0U2xpZGUoYW5pbVNsaWRlKTtcbiAgICAgIH1cbiAgICAgIF8uYW5pbWF0ZUhlaWdodCgpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmIChkb250QW5pbWF0ZSAhPT0gdHJ1ZSAmJiBfLnNsaWRlQ291bnQgPiBfLm9wdGlvbnMuc2xpZGVzVG9TaG93KSB7XG4gICAgICBfLmFuaW1hdGVTbGlkZSh0YXJnZXRMZWZ0LCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIF8ucG9zdFNsaWRlKGFuaW1TbGlkZSk7XG4gICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgXy5wb3N0U2xpZGUoYW5pbVNsaWRlKTtcbiAgICB9XG4gIH07XG5cbiAgU2xpY2sucHJvdG90eXBlLnN0YXJ0TG9hZCA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgXyA9IHRoaXM7XG5cbiAgICBpZiAoXy5vcHRpb25zLmFycm93cyA9PT0gdHJ1ZSAmJiBfLnNsaWRlQ291bnQgPiBfLm9wdGlvbnMuc2xpZGVzVG9TaG93KSB7XG4gICAgICBfLiRwcmV2QXJyb3cuaGlkZSgpO1xuICAgICAgXy4kbmV4dEFycm93LmhpZGUoKTtcbiAgICB9XG5cbiAgICBpZiAoXy5vcHRpb25zLmRvdHMgPT09IHRydWUgJiYgXy5zbGlkZUNvdW50ID4gXy5vcHRpb25zLnNsaWRlc1RvU2hvdykge1xuICAgICAgXy4kZG90cy5oaWRlKCk7XG4gICAgfVxuXG4gICAgXy4kc2xpZGVyLmFkZENsYXNzKFwic2xpY2stbG9hZGluZ1wiKTtcbiAgfTtcblxuICBTbGljay5wcm90b3R5cGUuc3dpcGVEaXJlY3Rpb24gPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHhEaXN0LFxuICAgICAgeURpc3QsXG4gICAgICByLFxuICAgICAgc3dpcGVBbmdsZSxcbiAgICAgIF8gPSB0aGlzO1xuXG4gICAgeERpc3QgPSBfLnRvdWNoT2JqZWN0LnN0YXJ0WCAtIF8udG91Y2hPYmplY3QuY3VyWDtcbiAgICB5RGlzdCA9IF8udG91Y2hPYmplY3Quc3RhcnRZIC0gXy50b3VjaE9iamVjdC5jdXJZO1xuICAgIHIgPSBNYXRoLmF0YW4yKHlEaXN0LCB4RGlzdCk7XG5cbiAgICBzd2lwZUFuZ2xlID0gTWF0aC5yb3VuZCgociAqIDE4MCkgLyBNYXRoLlBJKTtcbiAgICBpZiAoc3dpcGVBbmdsZSA8IDApIHtcbiAgICAgIHN3aXBlQW5nbGUgPSAzNjAgLSBNYXRoLmFicyhzd2lwZUFuZ2xlKTtcbiAgICB9XG5cbiAgICBpZiAoc3dpcGVBbmdsZSA8PSA0NSAmJiBzd2lwZUFuZ2xlID49IDApIHtcbiAgICAgIHJldHVybiBfLm9wdGlvbnMucnRsID09PSBmYWxzZSA/IFwibGVmdFwiIDogXCJyaWdodFwiO1xuICAgIH1cbiAgICBpZiAoc3dpcGVBbmdsZSA8PSAzNjAgJiYgc3dpcGVBbmdsZSA+PSAzMTUpIHtcbiAgICAgIHJldHVybiBfLm9wdGlvbnMucnRsID09PSBmYWxzZSA/IFwibGVmdFwiIDogXCJyaWdodFwiO1xuICAgIH1cbiAgICBpZiAoc3dpcGVBbmdsZSA+PSAxMzUgJiYgc3dpcGVBbmdsZSA8PSAyMjUpIHtcbiAgICAgIHJldHVybiBfLm9wdGlvbnMucnRsID09PSBmYWxzZSA/IFwicmlnaHRcIiA6IFwibGVmdFwiO1xuICAgIH1cbiAgICBpZiAoXy5vcHRpb25zLnZlcnRpY2FsU3dpcGluZyA9PT0gdHJ1ZSkge1xuICAgICAgaWYgKHN3aXBlQW5nbGUgPj0gMzUgJiYgc3dpcGVBbmdsZSA8PSAxMzUpIHtcbiAgICAgICAgcmV0dXJuIFwiZG93blwiO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIFwidXBcIjtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gXCJ2ZXJ0aWNhbFwiO1xuICB9O1xuXG4gIFNsaWNrLnByb3RvdHlwZS5zd2lwZUVuZCA9IGZ1bmN0aW9uIChldmVudCkge1xuICAgIHZhciBfID0gdGhpcyxcbiAgICAgIHNsaWRlQ291bnQsXG4gICAgICBkaXJlY3Rpb247XG5cbiAgICBfLmRyYWdnaW5nID0gZmFsc2U7XG4gICAgXy5zd2lwaW5nID0gZmFsc2U7XG5cbiAgICBpZiAoXy5zY3JvbGxpbmcpIHtcbiAgICAgIF8uc2Nyb2xsaW5nID0gZmFsc2U7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgXy5pbnRlcnJ1cHRlZCA9IGZhbHNlO1xuICAgIF8uc2hvdWxkQ2xpY2sgPSBfLnRvdWNoT2JqZWN0LnN3aXBlTGVuZ3RoID4gMTAgPyBmYWxzZSA6IHRydWU7XG5cbiAgICBpZiAoXy50b3VjaE9iamVjdC5jdXJYID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICBpZiAoXy50b3VjaE9iamVjdC5lZGdlSGl0ID09PSB0cnVlKSB7XG4gICAgICBfLiRzbGlkZXIudHJpZ2dlcihcImVkZ2VcIiwgW18sIF8uc3dpcGVEaXJlY3Rpb24oKV0pO1xuICAgIH1cblxuICAgIGlmIChfLnRvdWNoT2JqZWN0LnN3aXBlTGVuZ3RoID49IF8udG91Y2hPYmplY3QubWluU3dpcGUpIHtcbiAgICAgIGRpcmVjdGlvbiA9IF8uc3dpcGVEaXJlY3Rpb24oKTtcblxuICAgICAgc3dpdGNoIChkaXJlY3Rpb24pIHtcbiAgICAgICAgY2FzZSBcImxlZnRcIjpcbiAgICAgICAgY2FzZSBcImRvd25cIjpcbiAgICAgICAgICBzbGlkZUNvdW50ID0gXy5vcHRpb25zLnN3aXBlVG9TbGlkZVxuICAgICAgICAgICAgPyBfLmNoZWNrTmF2aWdhYmxlKF8uY3VycmVudFNsaWRlICsgXy5nZXRTbGlkZUNvdW50KCkpXG4gICAgICAgICAgICA6IF8uY3VycmVudFNsaWRlICsgXy5nZXRTbGlkZUNvdW50KCk7XG5cbiAgICAgICAgICBfLmN1cnJlbnREaXJlY3Rpb24gPSAwO1xuXG4gICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgY2FzZSBcInJpZ2h0XCI6XG4gICAgICAgIGNhc2UgXCJ1cFwiOlxuICAgICAgICAgIHNsaWRlQ291bnQgPSBfLm9wdGlvbnMuc3dpcGVUb1NsaWRlXG4gICAgICAgICAgICA/IF8uY2hlY2tOYXZpZ2FibGUoXy5jdXJyZW50U2xpZGUgLSBfLmdldFNsaWRlQ291bnQoKSlcbiAgICAgICAgICAgIDogXy5jdXJyZW50U2xpZGUgLSBfLmdldFNsaWRlQ291bnQoKTtcblxuICAgICAgICAgIF8uY3VycmVudERpcmVjdGlvbiA9IDE7XG5cbiAgICAgICAgICBicmVhaztcblxuICAgICAgICBkZWZhdWx0OlxuICAgICAgfVxuXG4gICAgICBpZiAoZGlyZWN0aW9uICE9IFwidmVydGljYWxcIikge1xuICAgICAgICBfLnNsaWRlSGFuZGxlcihzbGlkZUNvdW50KTtcbiAgICAgICAgXy50b3VjaE9iamVjdCA9IHt9O1xuICAgICAgICBfLiRzbGlkZXIudHJpZ2dlcihcInN3aXBlXCIsIFtfLCBkaXJlY3Rpb25dKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKF8udG91Y2hPYmplY3Quc3RhcnRYICE9PSBfLnRvdWNoT2JqZWN0LmN1clgpIHtcbiAgICAgICAgXy5zbGlkZUhhbmRsZXIoXy5jdXJyZW50U2xpZGUpO1xuICAgICAgICBfLnRvdWNoT2JqZWN0ID0ge307XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG4gIFNsaWNrLnByb3RvdHlwZS5zd2lwZUhhbmRsZXIgPSBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICB2YXIgXyA9IHRoaXM7XG5cbiAgICBpZiAoXG4gICAgICBfLm9wdGlvbnMuc3dpcGUgPT09IGZhbHNlIHx8XG4gICAgICAoXCJvbnRvdWNoZW5kXCIgaW4gZG9jdW1lbnQgJiYgXy5vcHRpb25zLnN3aXBlID09PSBmYWxzZSlcbiAgICApIHtcbiAgICAgIHJldHVybjtcbiAgICB9IGVsc2UgaWYgKFxuICAgICAgXy5vcHRpb25zLmRyYWdnYWJsZSA9PT0gZmFsc2UgJiZcbiAgICAgIGV2ZW50LnR5cGUuaW5kZXhPZihcIm1vdXNlXCIpICE9PSAtMVxuICAgICkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIF8udG91Y2hPYmplY3QuZmluZ2VyQ291bnQgPVxuICAgICAgZXZlbnQub3JpZ2luYWxFdmVudCAmJiBldmVudC5vcmlnaW5hbEV2ZW50LnRvdWNoZXMgIT09IHVuZGVmaW5lZFxuICAgICAgICA/IGV2ZW50Lm9yaWdpbmFsRXZlbnQudG91Y2hlcy5sZW5ndGhcbiAgICAgICAgOiAxO1xuXG4gICAgXy50b3VjaE9iamVjdC5taW5Td2lwZSA9IF8ubGlzdFdpZHRoIC8gXy5vcHRpb25zLnRvdWNoVGhyZXNob2xkO1xuXG4gICAgaWYgKF8ub3B0aW9ucy52ZXJ0aWNhbFN3aXBpbmcgPT09IHRydWUpIHtcbiAgICAgIF8udG91Y2hPYmplY3QubWluU3dpcGUgPSBfLmxpc3RIZWlnaHQgLyBfLm9wdGlvbnMudG91Y2hUaHJlc2hvbGQ7XG4gICAgfVxuXG4gICAgc3dpdGNoIChldmVudC5kYXRhLmFjdGlvbikge1xuICAgICAgY2FzZSBcInN0YXJ0XCI6XG4gICAgICAgIF8uc3dpcGVTdGFydChldmVudCk7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlIFwibW92ZVwiOlxuICAgICAgICBfLnN3aXBlTW92ZShldmVudCk7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlIFwiZW5kXCI6XG4gICAgICAgIF8uc3dpcGVFbmQoZXZlbnQpO1xuICAgICAgICBicmVhaztcbiAgICB9XG4gIH07XG5cbiAgU2xpY2sucHJvdG90eXBlLnN3aXBlTW92ZSA9IGZ1bmN0aW9uIChldmVudCkge1xuICAgIHZhciBfID0gdGhpcyxcbiAgICAgIGVkZ2VXYXNIaXQgPSBmYWxzZSxcbiAgICAgIGN1ckxlZnQsXG4gICAgICBzd2lwZURpcmVjdGlvbixcbiAgICAgIHN3aXBlTGVuZ3RoLFxuICAgICAgcG9zaXRpb25PZmZzZXQsXG4gICAgICB0b3VjaGVzLFxuICAgICAgdmVydGljYWxTd2lwZUxlbmd0aDtcblxuICAgIHRvdWNoZXMgPVxuICAgICAgZXZlbnQub3JpZ2luYWxFdmVudCAhPT0gdW5kZWZpbmVkID8gZXZlbnQub3JpZ2luYWxFdmVudC50b3VjaGVzIDogbnVsbDtcblxuICAgIGlmICghXy5kcmFnZ2luZyB8fCBfLnNjcm9sbGluZyB8fCAodG91Y2hlcyAmJiB0b3VjaGVzLmxlbmd0aCAhPT0gMSkpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICBjdXJMZWZ0ID0gXy5nZXRMZWZ0KF8uY3VycmVudFNsaWRlKTtcblxuICAgIF8udG91Y2hPYmplY3QuY3VyWCA9XG4gICAgICB0b3VjaGVzICE9PSB1bmRlZmluZWQgPyB0b3VjaGVzWzBdLnBhZ2VYIDogZXZlbnQuY2xpZW50WDtcbiAgICBfLnRvdWNoT2JqZWN0LmN1clkgPVxuICAgICAgdG91Y2hlcyAhPT0gdW5kZWZpbmVkID8gdG91Y2hlc1swXS5wYWdlWSA6IGV2ZW50LmNsaWVudFk7XG5cbiAgICBfLnRvdWNoT2JqZWN0LnN3aXBlTGVuZ3RoID0gTWF0aC5yb3VuZChcbiAgICAgIE1hdGguc3FydChNYXRoLnBvdyhfLnRvdWNoT2JqZWN0LmN1clggLSBfLnRvdWNoT2JqZWN0LnN0YXJ0WCwgMikpXG4gICAgKTtcblxuICAgIHZlcnRpY2FsU3dpcGVMZW5ndGggPSBNYXRoLnJvdW5kKFxuICAgICAgTWF0aC5zcXJ0KE1hdGgucG93KF8udG91Y2hPYmplY3QuY3VyWSAtIF8udG91Y2hPYmplY3Quc3RhcnRZLCAyKSlcbiAgICApO1xuXG4gICAgaWYgKCFfLm9wdGlvbnMudmVydGljYWxTd2lwaW5nICYmICFfLnN3aXBpbmcgJiYgdmVydGljYWxTd2lwZUxlbmd0aCA+IDQpIHtcbiAgICAgIF8uc2Nyb2xsaW5nID0gdHJ1ZTtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICBpZiAoXy5vcHRpb25zLnZlcnRpY2FsU3dpcGluZyA9PT0gdHJ1ZSkge1xuICAgICAgXy50b3VjaE9iamVjdC5zd2lwZUxlbmd0aCA9IHZlcnRpY2FsU3dpcGVMZW5ndGg7XG4gICAgfVxuXG4gICAgc3dpcGVEaXJlY3Rpb24gPSBfLnN3aXBlRGlyZWN0aW9uKCk7XG5cbiAgICBpZiAoZXZlbnQub3JpZ2luYWxFdmVudCAhPT0gdW5kZWZpbmVkICYmIF8udG91Y2hPYmplY3Quc3dpcGVMZW5ndGggPiA0KSB7XG4gICAgICBfLnN3aXBpbmcgPSB0cnVlO1xuICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICB9XG5cbiAgICBwb3NpdGlvbk9mZnNldCA9XG4gICAgICAoXy5vcHRpb25zLnJ0bCA9PT0gZmFsc2UgPyAxIDogLTEpICpcbiAgICAgIChfLnRvdWNoT2JqZWN0LmN1clggPiBfLnRvdWNoT2JqZWN0LnN0YXJ0WCA/IDEgOiAtMSk7XG4gICAgaWYgKF8ub3B0aW9ucy52ZXJ0aWNhbFN3aXBpbmcgPT09IHRydWUpIHtcbiAgICAgIHBvc2l0aW9uT2Zmc2V0ID0gXy50b3VjaE9iamVjdC5jdXJZID4gXy50b3VjaE9iamVjdC5zdGFydFkgPyAxIDogLTE7XG4gICAgfVxuXG4gICAgc3dpcGVMZW5ndGggPSBfLnRvdWNoT2JqZWN0LnN3aXBlTGVuZ3RoO1xuXG4gICAgXy50b3VjaE9iamVjdC5lZGdlSGl0ID0gZmFsc2U7XG5cbiAgICBpZiAoXy5vcHRpb25zLmluZmluaXRlID09PSBmYWxzZSkge1xuICAgICAgaWYgKFxuICAgICAgICAoXy5jdXJyZW50U2xpZGUgPT09IDAgJiYgc3dpcGVEaXJlY3Rpb24gPT09IFwicmlnaHRcIikgfHxcbiAgICAgICAgKF8uY3VycmVudFNsaWRlID49IF8uZ2V0RG90Q291bnQoKSAmJiBzd2lwZURpcmVjdGlvbiA9PT0gXCJsZWZ0XCIpXG4gICAgICApIHtcbiAgICAgICAgc3dpcGVMZW5ndGggPSBfLnRvdWNoT2JqZWN0LnN3aXBlTGVuZ3RoICogXy5vcHRpb25zLmVkZ2VGcmljdGlvbjtcbiAgICAgICAgXy50b3VjaE9iamVjdC5lZGdlSGl0ID0gdHJ1ZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoXy5vcHRpb25zLnZlcnRpY2FsID09PSBmYWxzZSkge1xuICAgICAgXy5zd2lwZUxlZnQgPSBjdXJMZWZ0ICsgc3dpcGVMZW5ndGggKiBwb3NpdGlvbk9mZnNldDtcbiAgICB9IGVsc2Uge1xuICAgICAgXy5zd2lwZUxlZnQgPVxuICAgICAgICBjdXJMZWZ0ICtcbiAgICAgICAgc3dpcGVMZW5ndGggKiAoXy4kbGlzdC5oZWlnaHQoKSAvIF8ubGlzdFdpZHRoKSAqIHBvc2l0aW9uT2Zmc2V0O1xuICAgIH1cbiAgICBpZiAoXy5vcHRpb25zLnZlcnRpY2FsU3dpcGluZyA9PT0gdHJ1ZSkge1xuICAgICAgXy5zd2lwZUxlZnQgPSBjdXJMZWZ0ICsgc3dpcGVMZW5ndGggKiBwb3NpdGlvbk9mZnNldDtcbiAgICB9XG5cbiAgICBpZiAoXy5vcHRpb25zLmZhZGUgPT09IHRydWUgfHwgXy5vcHRpb25zLnRvdWNoTW92ZSA9PT0gZmFsc2UpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICBpZiAoXy5hbmltYXRpbmcgPT09IHRydWUpIHtcbiAgICAgIF8uc3dpcGVMZWZ0ID0gbnVsbDtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICBfLnNldENTUyhfLnN3aXBlTGVmdCk7XG4gIH07XG5cbiAgU2xpY2sucHJvdG90eXBlLnN3aXBlU3RhcnQgPSBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICB2YXIgXyA9IHRoaXMsXG4gICAgICB0b3VjaGVzO1xuXG4gICAgXy5pbnRlcnJ1cHRlZCA9IHRydWU7XG5cbiAgICBpZiAoXG4gICAgICBfLnRvdWNoT2JqZWN0LmZpbmdlckNvdW50ICE9PSAxIHx8XG4gICAgICBfLnNsaWRlQ291bnQgPD0gXy5vcHRpb25zLnNsaWRlc1RvU2hvd1xuICAgICkge1xuICAgICAgXy50b3VjaE9iamVjdCA9IHt9O1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIGlmIChcbiAgICAgIGV2ZW50Lm9yaWdpbmFsRXZlbnQgIT09IHVuZGVmaW5lZCAmJlxuICAgICAgZXZlbnQub3JpZ2luYWxFdmVudC50b3VjaGVzICE9PSB1bmRlZmluZWRcbiAgICApIHtcbiAgICAgIHRvdWNoZXMgPSBldmVudC5vcmlnaW5hbEV2ZW50LnRvdWNoZXNbMF07XG4gICAgfVxuXG4gICAgXy50b3VjaE9iamVjdC5zdGFydFggPSBfLnRvdWNoT2JqZWN0LmN1clggPVxuICAgICAgdG91Y2hlcyAhPT0gdW5kZWZpbmVkID8gdG91Y2hlcy5wYWdlWCA6IGV2ZW50LmNsaWVudFg7XG4gICAgXy50b3VjaE9iamVjdC5zdGFydFkgPSBfLnRvdWNoT2JqZWN0LmN1clkgPVxuICAgICAgdG91Y2hlcyAhPT0gdW5kZWZpbmVkID8gdG91Y2hlcy5wYWdlWSA6IGV2ZW50LmNsaWVudFk7XG5cbiAgICBfLmRyYWdnaW5nID0gdHJ1ZTtcbiAgfTtcblxuICBTbGljay5wcm90b3R5cGUudW5maWx0ZXJTbGlkZXMgPSBTbGljay5wcm90b3R5cGUuc2xpY2tVbmZpbHRlciA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgXyA9IHRoaXM7XG5cbiAgICBpZiAoXy4kc2xpZGVzQ2FjaGUgIT09IG51bGwpIHtcbiAgICAgIF8udW5sb2FkKCk7XG5cbiAgICAgIF8uJHNsaWRlVHJhY2suY2hpbGRyZW4odGhpcy5vcHRpb25zLnNsaWRlKS5kZXRhY2goKTtcblxuICAgICAgXy4kc2xpZGVzQ2FjaGUuYXBwZW5kVG8oXy4kc2xpZGVUcmFjayk7XG5cbiAgICAgIF8ucmVpbml0KCk7XG4gICAgfVxuICB9O1xuXG4gIFNsaWNrLnByb3RvdHlwZS51bmxvYWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIF8gPSB0aGlzO1xuXG4gICAgJChcIi5zbGljay1jbG9uZWRcIiwgXy4kc2xpZGVyKS5yZW1vdmUoKTtcblxuICAgIGlmIChfLiRkb3RzKSB7XG4gICAgICBfLiRkb3RzLnJlbW92ZSgpO1xuICAgIH1cblxuICAgIGlmIChfLiRwcmV2QXJyb3cgJiYgXy5odG1sRXhwci50ZXN0KF8ub3B0aW9ucy5wcmV2QXJyb3cpKSB7XG4gICAgICBfLiRwcmV2QXJyb3cucmVtb3ZlKCk7XG4gICAgfVxuXG4gICAgaWYgKF8uJG5leHRBcnJvdyAmJiBfLmh0bWxFeHByLnRlc3QoXy5vcHRpb25zLm5leHRBcnJvdykpIHtcbiAgICAgIF8uJG5leHRBcnJvdy5yZW1vdmUoKTtcbiAgICB9XG5cbiAgICBfLiRzbGlkZXNcbiAgICAgIC5yZW1vdmVDbGFzcyhcInNsaWNrLXNsaWRlIHNsaWNrLWFjdGl2ZSBzbGljay12aXNpYmxlIHNsaWNrLWN1cnJlbnRcIilcbiAgICAgIC5hdHRyKFwiYXJpYS1oaWRkZW5cIiwgXCJ0cnVlXCIpXG4gICAgICAuY3NzKFwid2lkdGhcIiwgXCJcIik7XG4gIH07XG5cbiAgU2xpY2sucHJvdG90eXBlLnVuc2xpY2sgPSBmdW5jdGlvbiAoZnJvbUJyZWFrcG9pbnQpIHtcbiAgICB2YXIgXyA9IHRoaXM7XG4gICAgXy4kc2xpZGVyLnRyaWdnZXIoXCJ1bnNsaWNrXCIsIFtfLCBmcm9tQnJlYWtwb2ludF0pO1xuICAgIF8uZGVzdHJveSgpO1xuICB9O1xuXG4gIFNsaWNrLnByb3RvdHlwZS51cGRhdGVBcnJvd3MgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIF8gPSB0aGlzLFxuICAgICAgY2VudGVyT2Zmc2V0O1xuXG4gICAgY2VudGVyT2Zmc2V0ID0gTWF0aC5mbG9vcihfLm9wdGlvbnMuc2xpZGVzVG9TaG93IC8gMik7XG5cbiAgICBpZiAoXG4gICAgICBfLm9wdGlvbnMuYXJyb3dzID09PSB0cnVlICYmXG4gICAgICBfLnNsaWRlQ291bnQgPiBfLm9wdGlvbnMuc2xpZGVzVG9TaG93ICYmXG4gICAgICAhXy5vcHRpb25zLmluZmluaXRlXG4gICAgKSB7XG4gICAgICBfLiRwcmV2QXJyb3cucmVtb3ZlQ2xhc3MoXCJzbGljay1kaXNhYmxlZFwiKS5hdHRyKFwiYXJpYS1kaXNhYmxlZFwiLCBcImZhbHNlXCIpO1xuICAgICAgXy4kbmV4dEFycm93LnJlbW92ZUNsYXNzKFwic2xpY2stZGlzYWJsZWRcIikuYXR0cihcImFyaWEtZGlzYWJsZWRcIiwgXCJmYWxzZVwiKTtcblxuICAgICAgaWYgKF8uY3VycmVudFNsaWRlID09PSAwKSB7XG4gICAgICAgIF8uJHByZXZBcnJvdy5hZGRDbGFzcyhcInNsaWNrLWRpc2FibGVkXCIpLmF0dHIoXCJhcmlhLWRpc2FibGVkXCIsIFwidHJ1ZVwiKTtcbiAgICAgICAgXy4kbmV4dEFycm93XG4gICAgICAgICAgLnJlbW92ZUNsYXNzKFwic2xpY2stZGlzYWJsZWRcIilcbiAgICAgICAgICAuYXR0cihcImFyaWEtZGlzYWJsZWRcIiwgXCJmYWxzZVwiKTtcbiAgICAgIH0gZWxzZSBpZiAoXG4gICAgICAgIF8uY3VycmVudFNsaWRlID49IF8uc2xpZGVDb3VudCAtIF8ub3B0aW9ucy5zbGlkZXNUb1Nob3cgJiZcbiAgICAgICAgXy5vcHRpb25zLmNlbnRlck1vZGUgPT09IGZhbHNlXG4gICAgICApIHtcbiAgICAgICAgXy4kbmV4dEFycm93LmFkZENsYXNzKFwic2xpY2stZGlzYWJsZWRcIikuYXR0cihcImFyaWEtZGlzYWJsZWRcIiwgXCJ0cnVlXCIpO1xuICAgICAgICBfLiRwcmV2QXJyb3dcbiAgICAgICAgICAucmVtb3ZlQ2xhc3MoXCJzbGljay1kaXNhYmxlZFwiKVxuICAgICAgICAgIC5hdHRyKFwiYXJpYS1kaXNhYmxlZFwiLCBcImZhbHNlXCIpO1xuICAgICAgfSBlbHNlIGlmIChcbiAgICAgICAgXy5jdXJyZW50U2xpZGUgPj0gXy5zbGlkZUNvdW50IC0gMSAmJlxuICAgICAgICBfLm9wdGlvbnMuY2VudGVyTW9kZSA9PT0gdHJ1ZVxuICAgICAgKSB7XG4gICAgICAgIF8uJG5leHRBcnJvdy5hZGRDbGFzcyhcInNsaWNrLWRpc2FibGVkXCIpLmF0dHIoXCJhcmlhLWRpc2FibGVkXCIsIFwidHJ1ZVwiKTtcbiAgICAgICAgXy4kcHJldkFycm93XG4gICAgICAgICAgLnJlbW92ZUNsYXNzKFwic2xpY2stZGlzYWJsZWRcIilcbiAgICAgICAgICAuYXR0cihcImFyaWEtZGlzYWJsZWRcIiwgXCJmYWxzZVwiKTtcbiAgICAgIH1cbiAgICB9XG4gIH07XG5cbiAgU2xpY2sucHJvdG90eXBlLnVwZGF0ZURvdHMgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIF8gPSB0aGlzO1xuXG4gICAgaWYgKF8uJGRvdHMgIT09IG51bGwpIHtcbiAgICAgIF8uJGRvdHMuZmluZChcImxpXCIpLnJlbW92ZUNsYXNzKFwic2xpY2stYWN0aXZlXCIpLmVuZCgpO1xuXG4gICAgICBfLiRkb3RzXG4gICAgICAgIC5maW5kKFwibGlcIilcbiAgICAgICAgLmVxKE1hdGguZmxvb3IoXy5jdXJyZW50U2xpZGUgLyBfLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGwpKVxuICAgICAgICAuYWRkQ2xhc3MoXCJzbGljay1hY3RpdmVcIik7XG4gICAgfVxuICB9O1xuXG4gIFNsaWNrLnByb3RvdHlwZS52aXNpYmlsaXR5ID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBfID0gdGhpcztcblxuICAgIGlmIChfLm9wdGlvbnMuYXV0b3BsYXkpIHtcbiAgICAgIGlmIChkb2N1bWVudFtfLmhpZGRlbl0pIHtcbiAgICAgICAgXy5pbnRlcnJ1cHRlZCA9IHRydWU7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBfLmludGVycnVwdGVkID0gZmFsc2U7XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG4gICQuZm4uc2xpY2sgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIF8gPSB0aGlzLFxuICAgICAgb3B0ID0gYXJndW1lbnRzWzBdLFxuICAgICAgYXJncyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywgMSksXG4gICAgICBsID0gXy5sZW5ndGgsXG4gICAgICBpLFxuICAgICAgcmV0O1xuICAgIGZvciAoaSA9IDA7IGkgPCBsOyBpKyspIHtcbiAgICAgIGlmICh0eXBlb2Ygb3B0ID09IFwib2JqZWN0XCIgfHwgdHlwZW9mIG9wdCA9PSBcInVuZGVmaW5lZFwiKVxuICAgICAgICBfW2ldLnNsaWNrID0gbmV3IFNsaWNrKF9baV0sIG9wdCk7XG4gICAgICBlbHNlIHJldCA9IF9baV0uc2xpY2tbb3B0XS5hcHBseShfW2ldLnNsaWNrLCBhcmdzKTtcbiAgICAgIGlmICh0eXBlb2YgcmV0ICE9IFwidW5kZWZpbmVkXCIpIHJldHVybiByZXQ7XG4gICAgfVxuICAgIHJldHVybiBfO1xuICB9O1xufSk7XG4kKGZ1bmN0aW9uICgpIHtcbiAgJChcIi5yZXZpZXdzLXNsaWRlclwiKS5zbGljayh7XG4gICAgc2xpZGVzVG9TaG93OiA0LFxuICAgIHNsaWRlc1RvU2Nyb2xsOiAxLFxuICAgIHByZXZBcnJvdzogJChcIi5yZXZpZXdzLXNsaWRlci1uYXYgLmljb24tYXJyb3ctdGhpbi1sZWZ0XCIpLFxuICAgIG5leHRBcnJvdzogJChcIi5yZXZpZXdzLXNsaWRlci1uYXYgLmljb24tYXJyb3ctdGhpbi1yaWdodFwiKSxcbiAgICBkb3RzOiB0cnVlLFxuICAgIHJlc3BvbnNpdmU6IFtcbiAgICAgIHtcbiAgICAgICAgYnJlYWtwb2ludDogMTQwMCxcbiAgICAgICAgc2V0dGluZ3M6IHtcbiAgICAgICAgICBzbGlkZXNUb1Nob3c6IDMsXG4gICAgICAgICAgc2xpZGVzVG9TY3JvbGw6IDEsXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBicmVha3BvaW50OiAxMDI0LFxuICAgICAgICBzZXR0aW5nczoge1xuICAgICAgICAgIHNsaWRlc1RvU2hvdzogMixcbiAgICAgICAgICBzbGlkZXNUb1Njcm9sbDogMixcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGJyZWFrcG9pbnQ6IDYwMCxcbiAgICAgICAgc2V0dGluZ3M6IHtcbiAgICAgICAgICBzbGlkZXNUb1Nob3c6IDEsXG4gICAgICAgICAgc2xpZGVzVG9TY3JvbGw6IDEsXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgIF0sXG4gIH0pO1xuXG4gICQoXCIucGFydG5lcnMtc2xpZGVyXCIpLnNsaWNrKHtcbiAgICBzbGlkZXNUb1Nob3c6IDQsXG4gICAgc2xpZGVzVG9TY3JvbGw6IDEsXG4gICAgcmVzcG9uc2l2ZTogW1xuICAgICAge1xuICAgICAgICBicmVha3BvaW50OiAxMDI0LFxuICAgICAgICBzZXR0aW5nczoge1xuICAgICAgICAgIHNsaWRlc1RvU2hvdzogMyxcbiAgICAgICAgICBzbGlkZXNUb1Njcm9sbDogMSxcbiAgICAgICAgICBkb3RzOiB0cnVlLFxuICAgICAgICAgIGF1dG9wbGF5OiB0cnVlLFxuICAgICAgICAgIGFycm93OiBmYWxzZSxcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGJyZWFrcG9pbnQ6IDQ4MCxcbiAgICAgICAgc2V0dGluZ3M6IHtcbiAgICAgICAgICBzbGlkZXNUb1Nob3c6IDIsXG4gICAgICAgICAgc2xpZGVzVG9TY3JvbGw6IDIsXG4gICAgICAgICAgZG90czogdHJ1ZSxcbiAgICAgICAgICBhdXRvcGxheTogdHJ1ZSxcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgXSxcbiAgfSk7XG5cbiAgJChcIi5wcm8tc2xpZGVyXCIpLnNsaWNrKHtcbiAgICBzbGlkZXNUb1Nob3c6IDEsXG4gICAgc2xpZGVzVG9TY3JvbGw6IDEsXG4gICAgZG90czogdHJ1ZSxcbiAgfSk7XG5cbiAgJChcIi5kaXJlY3Rvci1zbGlkZXJcIikuc2xpY2soe1xuICAgIGluZmluaXRlOiB0cnVlLFxuICAgIGNlbnRlck1vZGU6IHRydWUsXG4gICAgc2xpZGVzVG9TaG93OiAzLFxuICAgIHNsaWRlc1RvU2Nyb2xsOiAxLFxuICAgIGNlbnRlclBhZGRpbmc6IFwiMFwiLFxuICAgIGFycm93OiB0cnVlLFxuICAgIHJlc3BvbnNpdmU6IFtcbiAgICAgIHtcbiAgICAgICAgYnJlYWtwb2ludDogNzY4LFxuICAgICAgICBzZXR0aW5nczoge1xuICAgICAgICAgIC8vIGFycm93czogZmFsc2UsXG4gICAgICAgICAgY2VudGVyTW9kZTogdHJ1ZSxcbiAgICAgICAgICAvLyBjZW50ZXJQYWRkaW5nOiBcIjQwcHhcIixcbiAgICAgICAgICBkb3RzOiB0cnVlLFxuICAgICAgICAgIHNsaWRlc1RvU2hvdzogMSxcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgXSxcbiAgfSk7XG59KTtcbi8vIHBhZ2UgaW5pdFxualF1ZXJ5KGZ1bmN0aW9uICgpIHtcbiAgaW5pdExpZ2h0Ym94KCk7XG59KTtcblxuLy8gZmFuY3lib3ggbW9kYWwgcG9wdXAgaW5pdFxuZnVuY3Rpb24gaW5pdExpZ2h0Ym94KCkge1xuICBqUXVlcnkoJ2EubGlnaHRib3gsIGFbcmVsKj1cImxpZ2h0Ym94XCJdJykuZmFuY3lib3goe1xuICAgIGxvb3A6IGZhbHNlLFxuICAgIGhlbHBlcnM6IHtcbiAgICAgIG92ZXJsYXk6IHtcbiAgICAgICAgY3NzOiB7XG4gICAgICAgICAgYmFja2dyb3VuZDogXCJyZ2JhKDAsIDAsIDAsIDAuNjUpXCIsXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgIH0sXG4gICAgYWZ0ZXJMb2FkOiBmdW5jdGlvbiAoY3VycmVudCwgcHJldmlvdXMpIHtcbiAgICAgIC8vIGhhbmRsZSBjdXN0b20gY2xvc2UgYnV0dG9uIGluIGlubGluZSBtb2RhbFxuICAgICAgaWYgKGN1cnJlbnQuaHJlZi5pbmRleE9mKFwiI1wiKSA9PT0gMCkge1xuICAgICAgICBqUXVlcnkoY3VycmVudC5ocmVmKVxuICAgICAgICAgIC5maW5kKFwiYS5jbG9zZVwiKVxuICAgICAgICAgIC5vZmYoXCJjbGljay5mYlwiKVxuICAgICAgICAgIC5vbihcImNsaWNrLmZiXCIsIGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICBqUXVlcnkuZmFuY3lib3guY2xvc2UoKTtcbiAgICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9LFxuICB9KTtcbn1cblxuLyohIGZhbmN5Qm94IHYyLjEuNSBmYW5jeWFwcHMuY29tIHwgZmFuY3lhcHBzLmNvbS9mYW5jeWJveC8jbGljZW5zZSAqL1xuKGZ1bmN0aW9uIChyLCBHLCBmLCB2KSB7XG4gIHZhciBKID0gZihcImh0bWxcIiksXG4gICAgbiA9IGYociksXG4gICAgcCA9IGYoRyksXG4gICAgYiA9IChmLmZhbmN5Ym94ID0gZnVuY3Rpb24gKCkge1xuICAgICAgYi5vcGVuLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgfSksXG4gICAgSSA9IG5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goL21zaWUvaSksXG4gICAgQiA9IG51bGwsXG4gICAgcyA9IEcuY3JlYXRlVG91Y2ggIT09IHYsXG4gICAgdCA9IGZ1bmN0aW9uIChhKSB7XG4gICAgICByZXR1cm4gYSAmJiBhLmhhc093blByb3BlcnR5ICYmIGEgaW5zdGFuY2VvZiBmO1xuICAgIH0sXG4gICAgcSA9IGZ1bmN0aW9uIChhKSB7XG4gICAgICByZXR1cm4gYSAmJiBcInN0cmluZ1wiID09PSBmLnR5cGUoYSk7XG4gICAgfSxcbiAgICBFID0gZnVuY3Rpb24gKGEpIHtcbiAgICAgIHJldHVybiBxKGEpICYmIDAgPCBhLmluZGV4T2YoXCIlXCIpO1xuICAgIH0sXG4gICAgbCA9IGZ1bmN0aW9uIChhLCBkKSB7XG4gICAgICB2YXIgZSA9IHBhcnNlSW50KGEsIDEwKSB8fCAwO1xuICAgICAgZCAmJiBFKGEpICYmIChlICo9IGIuZ2V0Vmlld3BvcnQoKVtkXSAvIDEwMCk7XG4gICAgICByZXR1cm4gTWF0aC5jZWlsKGUpO1xuICAgIH0sXG4gICAgdyA9IGZ1bmN0aW9uIChhLCBiKSB7XG4gICAgICByZXR1cm4gbChhLCBiKSArIFwicHhcIjtcbiAgICB9O1xuICBmLmV4dGVuZChiLCB7XG4gICAgdmVyc2lvbjogXCIyLjEuNVwiLFxuICAgIGRlZmF1bHRzOiB7XG4gICAgICBwYWRkaW5nOiAxNSxcbiAgICAgIG1hcmdpbjogMjAsXG4gICAgICB3aWR0aDogODAwLFxuICAgICAgaGVpZ2h0OiA2MDAsXG4gICAgICBtaW5XaWR0aDogMTAwLFxuICAgICAgbWluSGVpZ2h0OiAxMDAsXG4gICAgICBtYXhXaWR0aDogOTk5OSxcbiAgICAgIG1heEhlaWdodDogOTk5OSxcbiAgICAgIHBpeGVsUmF0aW86IDEsXG4gICAgICBhdXRvU2l6ZTogITAsXG4gICAgICBhdXRvSGVpZ2h0OiAhMSxcbiAgICAgIGF1dG9XaWR0aDogITEsXG4gICAgICBhdXRvUmVzaXplOiAhMCxcbiAgICAgIGF1dG9DZW50ZXI6ICFzLFxuICAgICAgZml0VG9WaWV3OiAhMCxcbiAgICAgIGFzcGVjdFJhdGlvOiAhMSxcbiAgICAgIHRvcFJhdGlvOiAwLjUsXG4gICAgICBsZWZ0UmF0aW86IDAuNSxcbiAgICAgIHNjcm9sbGluZzogXCJhdXRvXCIsXG4gICAgICB3cmFwQ1NTOiBcIlwiLFxuICAgICAgYXJyb3dzOiAhMCxcbiAgICAgIGNsb3NlQnRuOiAhMCxcbiAgICAgIGNsb3NlQ2xpY2s6ICExLFxuICAgICAgbmV4dENsaWNrOiAhMSxcbiAgICAgIG1vdXNlV2hlZWw6ICEwLFxuICAgICAgYXV0b1BsYXk6ICExLFxuICAgICAgcGxheVNwZWVkOiAzZTMsXG4gICAgICBwcmVsb2FkOiAzLFxuICAgICAgbW9kYWw6ICExLFxuICAgICAgbG9vcDogITAsXG4gICAgICBhamF4OiB7IGRhdGFUeXBlOiBcImh0bWxcIiwgaGVhZGVyczogeyBcIlgtZmFuY3lCb3hcIjogITAgfSB9LFxuICAgICAgaWZyYW1lOiB7IHNjcm9sbGluZzogXCJhdXRvXCIsIHByZWxvYWQ6ICEwIH0sXG4gICAgICBzd2Y6IHtcbiAgICAgICAgd21vZGU6IFwidHJhbnNwYXJlbnRcIixcbiAgICAgICAgYWxsb3dmdWxsc2NyZWVuOiBcInRydWVcIixcbiAgICAgICAgYWxsb3dzY3JpcHRhY2Nlc3M6IFwiYWx3YXlzXCIsXG4gICAgICB9LFxuICAgICAga2V5czoge1xuICAgICAgICBuZXh0OiB7IDEzOiBcImxlZnRcIiwgMzQ6IFwidXBcIiwgMzk6IFwibGVmdFwiLCA0MDogXCJ1cFwiIH0sXG4gICAgICAgIHByZXY6IHsgODogXCJyaWdodFwiLCAzMzogXCJkb3duXCIsIDM3OiBcInJpZ2h0XCIsIDM4OiBcImRvd25cIiB9LFxuICAgICAgICBjbG9zZTogWzI3XSxcbiAgICAgICAgcGxheTogWzMyXSxcbiAgICAgICAgdG9nZ2xlOiBbNzBdLFxuICAgICAgfSxcbiAgICAgIGRpcmVjdGlvbjogeyBuZXh0OiBcImxlZnRcIiwgcHJldjogXCJyaWdodFwiIH0sXG4gICAgICBzY3JvbGxPdXRzaWRlOiAhMCxcbiAgICAgIGluZGV4OiAwLFxuICAgICAgdHlwZTogbnVsbCxcbiAgICAgIGhyZWY6IG51bGwsXG4gICAgICBjb250ZW50OiBudWxsLFxuICAgICAgdGl0bGU6IG51bGwsXG4gICAgICB0cGw6IHtcbiAgICAgICAgd3JhcDogJzxkaXYgY2xhc3M9XCJmYW5jeWJveC13cmFwXCIgdGFiSW5kZXg9XCItMVwiPjxkaXYgY2xhc3M9XCJmYW5jeWJveC1za2luXCI+PGRpdiBjbGFzcz1cImZhbmN5Ym94LW91dGVyXCI+PGRpdiBjbGFzcz1cImZhbmN5Ym94LWlubmVyXCI+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+JyxcbiAgICAgICAgaW1hZ2U6ICc8aW1nIGNsYXNzPVwiZmFuY3lib3gtaW1hZ2VcIiBzcmM9XCJ7aHJlZn1cIiBhbHQ9XCJcIiAvPicsXG4gICAgICAgIGlmcmFtZTpcbiAgICAgICAgICAnPGlmcmFtZSBpZD1cImZhbmN5Ym94LWZyYW1le3JuZH1cIiBuYW1lPVwiZmFuY3lib3gtZnJhbWV7cm5kfVwiIGNsYXNzPVwiZmFuY3lib3gtaWZyYW1lXCIgZnJhbWVib3JkZXI9XCIwXCIgdnNwYWNlPVwiMFwiIGhzcGFjZT1cIjBcIiB3ZWJraXRBbGxvd0Z1bGxTY3JlZW4gbW96YWxsb3dmdWxsc2NyZWVuIGFsbG93RnVsbFNjcmVlbicgK1xuICAgICAgICAgIChJID8gJyBhbGxvd3RyYW5zcGFyZW5jeT1cInRydWVcIicgOiBcIlwiKSArXG4gICAgICAgICAgXCI+PC9pZnJhbWU+XCIsXG4gICAgICAgIGVycm9yOlxuICAgICAgICAgICc8cCBjbGFzcz1cImZhbmN5Ym94LWVycm9yXCI+VGhlIHJlcXVlc3RlZCBjb250ZW50IGNhbm5vdCBiZSBsb2FkZWQuPGJyLz5QbGVhc2UgdHJ5IGFnYWluIGxhdGVyLjwvcD4nLFxuICAgICAgICBjbG9zZUJ0bjpcbiAgICAgICAgICAnPGEgdGl0bGU9XCJDbG9zZVwiIGNsYXNzPVwiZmFuY3lib3gtaXRlbSBmYW5jeWJveC1jbG9zZVwiIGhyZWY9XCJqYXZhc2NyaXB0OjtcIj48L2E+JyxcbiAgICAgICAgbmV4dDogJzxhIHRpdGxlPVwiTmV4dFwiIGNsYXNzPVwiZmFuY3lib3gtbmF2IGZhbmN5Ym94LW5leHRcIiBocmVmPVwiamF2YXNjcmlwdDo7XCI+PHNwYW4+PC9zcGFuPjwvYT4nLFxuICAgICAgICBwcmV2OiAnPGEgdGl0bGU9XCJQcmV2aW91c1wiIGNsYXNzPVwiZmFuY3lib3gtbmF2IGZhbmN5Ym94LXByZXZcIiBocmVmPVwiamF2YXNjcmlwdDo7XCI+PHNwYW4+PC9zcGFuPjwvYT4nLFxuICAgICAgfSxcbiAgICAgIG9wZW5FZmZlY3Q6IFwiZmFkZVwiLFxuICAgICAgb3BlblNwZWVkOiAyNTAsXG4gICAgICBvcGVuRWFzaW5nOiBcInN3aW5nXCIsXG4gICAgICBvcGVuT3BhY2l0eTogITAsXG4gICAgICBvcGVuTWV0aG9kOiBcInpvb21JblwiLFxuICAgICAgY2xvc2VFZmZlY3Q6IFwiZmFkZVwiLFxuICAgICAgY2xvc2VTcGVlZDogMjUwLFxuICAgICAgY2xvc2VFYXNpbmc6IFwic3dpbmdcIixcbiAgICAgIGNsb3NlT3BhY2l0eTogITAsXG4gICAgICBjbG9zZU1ldGhvZDogXCJ6b29tT3V0XCIsXG4gICAgICBuZXh0RWZmZWN0OiBcImVsYXN0aWNcIixcbiAgICAgIG5leHRTcGVlZDogMjUwLFxuICAgICAgbmV4dEVhc2luZzogXCJzd2luZ1wiLFxuICAgICAgbmV4dE1ldGhvZDogXCJjaGFuZ2VJblwiLFxuICAgICAgcHJldkVmZmVjdDogXCJlbGFzdGljXCIsXG4gICAgICBwcmV2U3BlZWQ6IDI1MCxcbiAgICAgIHByZXZFYXNpbmc6IFwic3dpbmdcIixcbiAgICAgIHByZXZNZXRob2Q6IFwiY2hhbmdlT3V0XCIsXG4gICAgICBoZWxwZXJzOiB7IG92ZXJsYXk6ICEwLCB0aXRsZTogITAgfSxcbiAgICAgIG9uQ2FuY2VsOiBmLm5vb3AsXG4gICAgICBiZWZvcmVMb2FkOiBmLm5vb3AsXG4gICAgICBhZnRlckxvYWQ6IGYubm9vcCxcbiAgICAgIGJlZm9yZVNob3c6IGYubm9vcCxcbiAgICAgIGFmdGVyU2hvdzogZi5ub29wLFxuICAgICAgYmVmb3JlQ2hhbmdlOiBmLm5vb3AsXG4gICAgICBiZWZvcmVDbG9zZTogZi5ub29wLFxuICAgICAgYWZ0ZXJDbG9zZTogZi5ub29wLFxuICAgIH0sXG4gICAgZ3JvdXA6IHt9LFxuICAgIG9wdHM6IHt9LFxuICAgIHByZXZpb3VzOiBudWxsLFxuICAgIGNvbWluZzogbnVsbCxcbiAgICBjdXJyZW50OiBudWxsLFxuICAgIGlzQWN0aXZlOiAhMSxcbiAgICBpc09wZW46ICExLFxuICAgIGlzT3BlbmVkOiAhMSxcbiAgICB3cmFwOiBudWxsLFxuICAgIHNraW46IG51bGwsXG4gICAgb3V0ZXI6IG51bGwsXG4gICAgaW5uZXI6IG51bGwsXG4gICAgcGxheWVyOiB7IHRpbWVyOiBudWxsLCBpc0FjdGl2ZTogITEgfSxcbiAgICBhamF4TG9hZDogbnVsbCxcbiAgICBpbWdQcmVsb2FkOiBudWxsLFxuICAgIHRyYW5zaXRpb25zOiB7fSxcbiAgICBoZWxwZXJzOiB7fSxcbiAgICBvcGVuOiBmdW5jdGlvbiAoYSwgZCkge1xuICAgICAgaWYgKGEgJiYgKGYuaXNQbGFpbk9iamVjdChkKSB8fCAoZCA9IHt9KSwgITEgIT09IGIuY2xvc2UoITApKSlcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICBmLmlzQXJyYXkoYSkgfHwgKGEgPSB0KGEpID8gZihhKS5nZXQoKSA6IFthXSksXG4gICAgICAgICAgZi5lYWNoKGEsIGZ1bmN0aW9uIChlLCBjKSB7XG4gICAgICAgICAgICB2YXIgayA9IHt9LFxuICAgICAgICAgICAgICBnLFxuICAgICAgICAgICAgICBoLFxuICAgICAgICAgICAgICBqLFxuICAgICAgICAgICAgICBtLFxuICAgICAgICAgICAgICBsO1xuICAgICAgICAgICAgXCJvYmplY3RcIiA9PT0gZi50eXBlKGMpICYmXG4gICAgICAgICAgICAgIChjLm5vZGVUeXBlICYmIChjID0gZihjKSksXG4gICAgICAgICAgICAgIHQoYylcbiAgICAgICAgICAgICAgICA/ICgoayA9IHtcbiAgICAgICAgICAgICAgICAgICAgaHJlZjogYy5kYXRhKFwiZmFuY3lib3gtaHJlZlwiKSB8fCBjLmF0dHIoXCJocmVmXCIpLFxuICAgICAgICAgICAgICAgICAgICB0aXRsZTogYy5kYXRhKFwiZmFuY3lib3gtdGl0bGVcIikgfHwgYy5hdHRyKFwidGl0bGVcIiksXG4gICAgICAgICAgICAgICAgICAgIGlzRG9tOiAhMCxcbiAgICAgICAgICAgICAgICAgICAgZWxlbWVudDogYyxcbiAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgZi5tZXRhZGF0YSAmJiBmLmV4dGVuZCghMCwgaywgYy5tZXRhZGF0YSgpKSlcbiAgICAgICAgICAgICAgICA6IChrID0gYykpO1xuICAgICAgICAgICAgZyA9IGQuaHJlZiB8fCBrLmhyZWYgfHwgKHEoYykgPyBjIDogbnVsbCk7XG4gICAgICAgICAgICBoID0gZC50aXRsZSAhPT0gdiA/IGQudGl0bGUgOiBrLnRpdGxlIHx8IFwiXCI7XG4gICAgICAgICAgICBtID0gKGogPSBkLmNvbnRlbnQgfHwgay5jb250ZW50KSA/IFwiaHRtbFwiIDogZC50eXBlIHx8IGsudHlwZTtcbiAgICAgICAgICAgICFtICYmXG4gICAgICAgICAgICAgIGsuaXNEb20gJiZcbiAgICAgICAgICAgICAgKChtID0gYy5kYXRhKFwiZmFuY3lib3gtdHlwZVwiKSksXG4gICAgICAgICAgICAgIG0gfHxcbiAgICAgICAgICAgICAgICAobSA9IChtID0gYy5wcm9wKFwiY2xhc3NcIikubWF0Y2goL2ZhbmN5Ym94XFwuKFxcdyspLykpXG4gICAgICAgICAgICAgICAgICA/IG1bMV1cbiAgICAgICAgICAgICAgICAgIDogbnVsbCkpO1xuICAgICAgICAgICAgcShnKSAmJlxuICAgICAgICAgICAgICAobSB8fFxuICAgICAgICAgICAgICAgIChiLmlzSW1hZ2UoZylcbiAgICAgICAgICAgICAgICAgID8gKG0gPSBcImltYWdlXCIpXG4gICAgICAgICAgICAgICAgICA6IGIuaXNTV0YoZylcbiAgICAgICAgICAgICAgICAgID8gKG0gPSBcInN3ZlwiKVxuICAgICAgICAgICAgICAgICAgOiBcIiNcIiA9PT0gZy5jaGFyQXQoMClcbiAgICAgICAgICAgICAgICAgID8gKG0gPSBcImlubGluZVwiKVxuICAgICAgICAgICAgICAgICAgOiBxKGMpICYmICgobSA9IFwiaHRtbFwiKSwgKGogPSBjKSkpLFxuICAgICAgICAgICAgICBcImFqYXhcIiA9PT0gbSAmJlxuICAgICAgICAgICAgICAgICgobCA9IGcuc3BsaXQoL1xccysvLCAyKSksIChnID0gbC5zaGlmdCgpKSwgKGwgPSBsLnNoaWZ0KCkpKSk7XG4gICAgICAgICAgICBqIHx8XG4gICAgICAgICAgICAgIChcImlubGluZVwiID09PSBtXG4gICAgICAgICAgICAgICAgPyBnXG4gICAgICAgICAgICAgICAgICA/IChqID0gZihxKGcpID8gZy5yZXBsYWNlKC8uKig/PSNbXlxcc10rJCkvLCBcIlwiKSA6IGcpKVxuICAgICAgICAgICAgICAgICAgOiBrLmlzRG9tICYmIChqID0gYylcbiAgICAgICAgICAgICAgICA6IFwiaHRtbFwiID09PSBtXG4gICAgICAgICAgICAgICAgPyAoaiA9IGcpXG4gICAgICAgICAgICAgICAgOiAhbSAmJiAhZyAmJiBrLmlzRG9tICYmICgobSA9IFwiaW5saW5lXCIpLCAoaiA9IGMpKSk7XG4gICAgICAgICAgICBmLmV4dGVuZChrLCB7XG4gICAgICAgICAgICAgIGhyZWY6IGcsXG4gICAgICAgICAgICAgIHR5cGU6IG0sXG4gICAgICAgICAgICAgIGNvbnRlbnQ6IGosXG4gICAgICAgICAgICAgIHRpdGxlOiBoLFxuICAgICAgICAgICAgICBzZWxlY3RvcjogbCxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgYVtlXSA9IGs7XG4gICAgICAgICAgfSksXG4gICAgICAgICAgKGIub3B0cyA9IGYuZXh0ZW5kKCEwLCB7fSwgYi5kZWZhdWx0cywgZCkpLFxuICAgICAgICAgIGQua2V5cyAhPT0gdiAmJlxuICAgICAgICAgICAgKGIub3B0cy5rZXlzID0gZC5rZXlzID8gZi5leHRlbmQoe30sIGIuZGVmYXVsdHMua2V5cywgZC5rZXlzKSA6ICExKSxcbiAgICAgICAgICAoYi5ncm91cCA9IGEpLFxuICAgICAgICAgIGIuX3N0YXJ0KGIub3B0cy5pbmRleClcbiAgICAgICAgKTtcbiAgICB9LFxuICAgIGNhbmNlbDogZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIGEgPSBiLmNvbWluZztcbiAgICAgIGEgJiZcbiAgICAgICAgITEgIT09IGIudHJpZ2dlcihcIm9uQ2FuY2VsXCIpICYmXG4gICAgICAgIChiLmhpZGVMb2FkaW5nKCksXG4gICAgICAgIGIuYWpheExvYWQgJiYgYi5hamF4TG9hZC5hYm9ydCgpLFxuICAgICAgICAoYi5hamF4TG9hZCA9IG51bGwpLFxuICAgICAgICBiLmltZ1ByZWxvYWQgJiYgKGIuaW1nUHJlbG9hZC5vbmxvYWQgPSBiLmltZ1ByZWxvYWQub25lcnJvciA9IG51bGwpLFxuICAgICAgICBhLndyYXAgJiYgYS53cmFwLnN0b3AoITAsICEwKS50cmlnZ2VyKFwib25SZXNldFwiKS5yZW1vdmUoKSxcbiAgICAgICAgKGIuY29taW5nID0gbnVsbCksXG4gICAgICAgIGIuY3VycmVudCB8fCBiLl9hZnRlclpvb21PdXQoYSkpO1xuICAgIH0sXG4gICAgY2xvc2U6IGZ1bmN0aW9uIChhKSB7XG4gICAgICBiLmNhbmNlbCgpO1xuICAgICAgITEgIT09IGIudHJpZ2dlcihcImJlZm9yZUNsb3NlXCIpICYmXG4gICAgICAgIChiLnVuYmluZEV2ZW50cygpLFxuICAgICAgICBiLmlzQWN0aXZlICYmXG4gICAgICAgICAgKCFiLmlzT3BlbiB8fCAhMCA9PT0gYVxuICAgICAgICAgICAgPyAoZihcIi5mYW5jeWJveC13cmFwXCIpLnN0b3AoITApLnRyaWdnZXIoXCJvblJlc2V0XCIpLnJlbW92ZSgpLFxuICAgICAgICAgICAgICBiLl9hZnRlclpvb21PdXQoKSlcbiAgICAgICAgICAgIDogKChiLmlzT3BlbiA9IGIuaXNPcGVuZWQgPSAhMSksXG4gICAgICAgICAgICAgIChiLmlzQ2xvc2luZyA9ICEwKSxcbiAgICAgICAgICAgICAgZihcIi5mYW5jeWJveC1pdGVtLCAuZmFuY3lib3gtbmF2XCIpLnJlbW92ZSgpLFxuICAgICAgICAgICAgICBiLndyYXAuc3RvcCghMCwgITApLnJlbW92ZUNsYXNzKFwiZmFuY3lib3gtb3BlbmVkXCIpLFxuICAgICAgICAgICAgICBiLnRyYW5zaXRpb25zW2IuY3VycmVudC5jbG9zZU1ldGhvZF0oKSkpKTtcbiAgICB9LFxuICAgIHBsYXk6IGZ1bmN0aW9uIChhKSB7XG4gICAgICB2YXIgZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICBjbGVhclRpbWVvdXQoYi5wbGF5ZXIudGltZXIpO1xuICAgICAgICB9LFxuICAgICAgICBlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgIGQoKTtcbiAgICAgICAgICBiLmN1cnJlbnQgJiZcbiAgICAgICAgICAgIGIucGxheWVyLmlzQWN0aXZlICYmXG4gICAgICAgICAgICAoYi5wbGF5ZXIudGltZXIgPSBzZXRUaW1lb3V0KGIubmV4dCwgYi5jdXJyZW50LnBsYXlTcGVlZCkpO1xuICAgICAgICB9LFxuICAgICAgICBjID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgIGQoKTtcbiAgICAgICAgICBwLnVuYmluZChcIi5wbGF5ZXJcIik7XG4gICAgICAgICAgYi5wbGF5ZXIuaXNBY3RpdmUgPSAhMTtcbiAgICAgICAgICBiLnRyaWdnZXIoXCJvblBsYXlFbmRcIik7XG4gICAgICAgIH07XG4gICAgICBpZiAoITAgPT09IGEgfHwgKCFiLnBsYXllci5pc0FjdGl2ZSAmJiAhMSAhPT0gYSkpIHtcbiAgICAgICAgaWYgKFxuICAgICAgICAgIGIuY3VycmVudCAmJlxuICAgICAgICAgIChiLmN1cnJlbnQubG9vcCB8fCBiLmN1cnJlbnQuaW5kZXggPCBiLmdyb3VwLmxlbmd0aCAtIDEpXG4gICAgICAgIClcbiAgICAgICAgICAoYi5wbGF5ZXIuaXNBY3RpdmUgPSAhMCksXG4gICAgICAgICAgICBwLmJpbmQoe1xuICAgICAgICAgICAgICBcIm9uQ2FuY2VsLnBsYXllciBiZWZvcmVDbG9zZS5wbGF5ZXJcIjogYyxcbiAgICAgICAgICAgICAgXCJvblVwZGF0ZS5wbGF5ZXJcIjogZSxcbiAgICAgICAgICAgICAgXCJiZWZvcmVMb2FkLnBsYXllclwiOiBkLFxuICAgICAgICAgICAgfSksXG4gICAgICAgICAgICBlKCksXG4gICAgICAgICAgICBiLnRyaWdnZXIoXCJvblBsYXlTdGFydFwiKTtcbiAgICAgIH0gZWxzZSBjKCk7XG4gICAgfSxcbiAgICBuZXh0OiBmdW5jdGlvbiAoYSkge1xuICAgICAgdmFyIGQgPSBiLmN1cnJlbnQ7XG4gICAgICBkICYmIChxKGEpIHx8IChhID0gZC5kaXJlY3Rpb24ubmV4dCksIGIuanVtcHRvKGQuaW5kZXggKyAxLCBhLCBcIm5leHRcIikpO1xuICAgIH0sXG4gICAgcHJldjogZnVuY3Rpb24gKGEpIHtcbiAgICAgIHZhciBkID0gYi5jdXJyZW50O1xuICAgICAgZCAmJiAocShhKSB8fCAoYSA9IGQuZGlyZWN0aW9uLnByZXYpLCBiLmp1bXB0byhkLmluZGV4IC0gMSwgYSwgXCJwcmV2XCIpKTtcbiAgICB9LFxuICAgIGp1bXB0bzogZnVuY3Rpb24gKGEsIGQsIGUpIHtcbiAgICAgIHZhciBjID0gYi5jdXJyZW50O1xuICAgICAgYyAmJlxuICAgICAgICAoKGEgPSBsKGEpKSxcbiAgICAgICAgKGIuZGlyZWN0aW9uID0gZCB8fCBjLmRpcmVjdGlvblthID49IGMuaW5kZXggPyBcIm5leHRcIiA6IFwicHJldlwiXSksXG4gICAgICAgIChiLnJvdXRlciA9IGUgfHwgXCJqdW1wdG9cIiksXG4gICAgICAgIGMubG9vcCAmJlxuICAgICAgICAgICgwID4gYSAmJiAoYSA9IGMuZ3JvdXAubGVuZ3RoICsgKGEgJSBjLmdyb3VwLmxlbmd0aCkpLFxuICAgICAgICAgIChhICU9IGMuZ3JvdXAubGVuZ3RoKSksXG4gICAgICAgIGMuZ3JvdXBbYV0gIT09IHYgJiYgKGIuY2FuY2VsKCksIGIuX3N0YXJ0KGEpKSk7XG4gICAgfSxcbiAgICByZXBvc2l0aW9uOiBmdW5jdGlvbiAoYSwgZCkge1xuICAgICAgdmFyIGUgPSBiLmN1cnJlbnQsXG4gICAgICAgIGMgPSBlID8gZS53cmFwIDogbnVsbCxcbiAgICAgICAgaztcbiAgICAgIGMgJiZcbiAgICAgICAgKChrID0gYi5fZ2V0UG9zaXRpb24oZCkpLFxuICAgICAgICBhICYmIFwic2Nyb2xsXCIgPT09IGEudHlwZVxuICAgICAgICAgID8gKGRlbGV0ZSBrLnBvc2l0aW9uLCBjLnN0b3AoITAsICEwKS5hbmltYXRlKGssIDIwMCkpXG4gICAgICAgICAgOiAoYy5jc3MoayksIChlLnBvcyA9IGYuZXh0ZW5kKHt9LCBlLmRpbSwgaykpKSk7XG4gICAgfSxcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIChhKSB7XG4gICAgICB2YXIgZCA9IGEgJiYgYS50eXBlLFxuICAgICAgICBlID0gIWQgfHwgXCJvcmllbnRhdGlvbmNoYW5nZVwiID09PSBkO1xuICAgICAgZSAmJiAoY2xlYXJUaW1lb3V0KEIpLCAoQiA9IG51bGwpKTtcbiAgICAgIGIuaXNPcGVuICYmXG4gICAgICAgICFCICYmXG4gICAgICAgIChCID0gc2V0VGltZW91dChcbiAgICAgICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgYyA9IGIuY3VycmVudDtcbiAgICAgICAgICAgIGMgJiZcbiAgICAgICAgICAgICAgIWIuaXNDbG9zaW5nICYmXG4gICAgICAgICAgICAgIChiLndyYXAucmVtb3ZlQ2xhc3MoXCJmYW5jeWJveC10bXBcIiksXG4gICAgICAgICAgICAgIChlIHx8IFwibG9hZFwiID09PSBkIHx8IChcInJlc2l6ZVwiID09PSBkICYmIGMuYXV0b1Jlc2l6ZSkpICYmXG4gICAgICAgICAgICAgICAgYi5fc2V0RGltZW5zaW9uKCksXG4gICAgICAgICAgICAgIChcInNjcm9sbFwiID09PSBkICYmIGMuY2FuU2hyaW5rKSB8fCBiLnJlcG9zaXRpb24oYSksXG4gICAgICAgICAgICAgIGIudHJpZ2dlcihcIm9uVXBkYXRlXCIpLFxuICAgICAgICAgICAgICAoQiA9IG51bGwpKTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIGUgJiYgIXMgPyAwIDogMzAwXG4gICAgICAgICkpO1xuICAgIH0sXG4gICAgdG9nZ2xlOiBmdW5jdGlvbiAoYSkge1xuICAgICAgYi5pc09wZW4gJiZcbiAgICAgICAgKChiLmN1cnJlbnQuZml0VG9WaWV3ID1cbiAgICAgICAgICBcImJvb2xlYW5cIiA9PT0gZi50eXBlKGEpID8gYSA6ICFiLmN1cnJlbnQuZml0VG9WaWV3KSxcbiAgICAgICAgcyAmJlxuICAgICAgICAgIChiLndyYXAucmVtb3ZlQXR0cihcInN0eWxlXCIpLmFkZENsYXNzKFwiZmFuY3lib3gtdG1wXCIpLFxuICAgICAgICAgIGIudHJpZ2dlcihcIm9uVXBkYXRlXCIpKSxcbiAgICAgICAgYi51cGRhdGUoKSk7XG4gICAgfSxcbiAgICBoaWRlTG9hZGluZzogZnVuY3Rpb24gKCkge1xuICAgICAgcC51bmJpbmQoXCIubG9hZGluZ1wiKTtcbiAgICAgIGYoXCIjZmFuY3lib3gtbG9hZGluZ1wiKS5yZW1vdmUoKTtcbiAgICB9LFxuICAgIHNob3dMb2FkaW5nOiBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgYSwgZDtcbiAgICAgIGIuaGlkZUxvYWRpbmcoKTtcbiAgICAgIGEgPSBmKCc8ZGl2IGlkPVwiZmFuY3lib3gtbG9hZGluZ1wiPjxkaXY+PC9kaXY+PC9kaXY+JylcbiAgICAgICAgLmNsaWNrKGIuY2FuY2VsKVxuICAgICAgICAuYXBwZW5kVG8oXCJib2R5XCIpO1xuICAgICAgcC5iaW5kKFwia2V5ZG93bi5sb2FkaW5nXCIsIGZ1bmN0aW9uIChhKSB7XG4gICAgICAgIGlmICgyNyA9PT0gKGEud2hpY2ggfHwgYS5rZXlDb2RlKSkgYS5wcmV2ZW50RGVmYXVsdCgpLCBiLmNhbmNlbCgpO1xuICAgICAgfSk7XG4gICAgICBiLmRlZmF1bHRzLmZpeGVkIHx8XG4gICAgICAgICgoZCA9IGIuZ2V0Vmlld3BvcnQoKSksXG4gICAgICAgIGEuY3NzKHtcbiAgICAgICAgICBwb3NpdGlvbjogXCJhYnNvbHV0ZVwiLFxuICAgICAgICAgIHRvcDogMC41ICogZC5oICsgZC55LFxuICAgICAgICAgIGxlZnQ6IDAuNSAqIGQudyArIGQueCxcbiAgICAgICAgfSkpO1xuICAgIH0sXG4gICAgZ2V0Vmlld3BvcnQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBhID0gKGIuY3VycmVudCAmJiBiLmN1cnJlbnQubG9ja2VkKSB8fCAhMSxcbiAgICAgICAgZCA9IHsgeDogbi5zY3JvbGxMZWZ0KCksIHk6IG4uc2Nyb2xsVG9wKCkgfTtcbiAgICAgIGFcbiAgICAgICAgPyAoKGQudyA9IGFbMF0uY2xpZW50V2lkdGgpLCAoZC5oID0gYVswXS5jbGllbnRIZWlnaHQpKVxuICAgICAgICA6ICgoZC53ID0gcyAmJiByLmlubmVyV2lkdGggPyByLmlubmVyV2lkdGggOiBuLndpZHRoKCkpLFxuICAgICAgICAgIChkLmggPSBzICYmIHIuaW5uZXJIZWlnaHQgPyByLmlubmVySGVpZ2h0IDogbi5oZWlnaHQoKSkpO1xuICAgICAgcmV0dXJuIGQ7XG4gICAgfSxcbiAgICB1bmJpbmRFdmVudHM6IGZ1bmN0aW9uICgpIHtcbiAgICAgIGIud3JhcCAmJiB0KGIud3JhcCkgJiYgYi53cmFwLnVuYmluZChcIi5mYlwiKTtcbiAgICAgIHAudW5iaW5kKFwiLmZiXCIpO1xuICAgICAgbi51bmJpbmQoXCIuZmJcIik7XG4gICAgfSxcbiAgICBiaW5kRXZlbnRzOiBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgYSA9IGIuY3VycmVudCxcbiAgICAgICAgZDtcbiAgICAgIGEgJiZcbiAgICAgICAgKG4uYmluZChcbiAgICAgICAgICBcIm9yaWVudGF0aW9uY2hhbmdlLmZiXCIgK1xuICAgICAgICAgICAgKHMgPyBcIlwiIDogXCIgcmVzaXplLmZiXCIpICtcbiAgICAgICAgICAgIChhLmF1dG9DZW50ZXIgJiYgIWEubG9ja2VkID8gXCIgc2Nyb2xsLmZiXCIgOiBcIlwiKSxcbiAgICAgICAgICBiLnVwZGF0ZVxuICAgICAgICApLFxuICAgICAgICAoZCA9IGEua2V5cykgJiZcbiAgICAgICAgICBwLmJpbmQoXCJrZXlkb3duLmZiXCIsIGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICB2YXIgYyA9IGUud2hpY2ggfHwgZS5rZXlDb2RlLFxuICAgICAgICAgICAgICBrID0gZS50YXJnZXQgfHwgZS5zcmNFbGVtZW50O1xuICAgICAgICAgICAgaWYgKDI3ID09PSBjICYmIGIuY29taW5nKSByZXR1cm4gITE7XG4gICAgICAgICAgICAhZS5jdHJsS2V5ICYmXG4gICAgICAgICAgICAgICFlLmFsdEtleSAmJlxuICAgICAgICAgICAgICAhZS5zaGlmdEtleSAmJlxuICAgICAgICAgICAgICAhZS5tZXRhS2V5ICYmXG4gICAgICAgICAgICAgICghayB8fCAoIWsudHlwZSAmJiAhZihrKS5pcyhcIltjb250ZW50ZWRpdGFibGVdXCIpKSkgJiZcbiAgICAgICAgICAgICAgZi5lYWNoKGQsIGZ1bmN0aW9uIChkLCBrKSB7XG4gICAgICAgICAgICAgICAgaWYgKDEgPCBhLmdyb3VwLmxlbmd0aCAmJiBrW2NdICE9PSB2KVxuICAgICAgICAgICAgICAgICAgcmV0dXJuIGJbZF0oa1tjXSksIGUucHJldmVudERlZmF1bHQoKSwgITE7XG4gICAgICAgICAgICAgICAgaWYgKC0xIDwgZi5pbkFycmF5KGMsIGspKSByZXR1cm4gYltkXSgpLCBlLnByZXZlbnREZWZhdWx0KCksICExO1xuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICB9KSxcbiAgICAgICAgZi5mbi5tb3VzZXdoZWVsICYmXG4gICAgICAgICAgYS5tb3VzZVdoZWVsICYmXG4gICAgICAgICAgYi53cmFwLmJpbmQoXCJtb3VzZXdoZWVsLmZiXCIsIGZ1bmN0aW9uIChkLCBjLCBrLCBnKSB7XG4gICAgICAgICAgICBmb3IgKFxuICAgICAgICAgICAgICB2YXIgaCA9IGYoZC50YXJnZXQgfHwgbnVsbCksIGogPSAhMTtcbiAgICAgICAgICAgICAgaC5sZW5ndGggJiZcbiAgICAgICAgICAgICAgIWogJiZcbiAgICAgICAgICAgICAgIWguaXMoXCIuZmFuY3lib3gtc2tpblwiKSAmJlxuICAgICAgICAgICAgICAhaC5pcyhcIi5mYW5jeWJveC13cmFwXCIpO1xuXG4gICAgICAgICAgICApXG4gICAgICAgICAgICAgIChqID1cbiAgICAgICAgICAgICAgICBoWzBdICYmXG4gICAgICAgICAgICAgICAgIShoWzBdLnN0eWxlLm92ZXJmbG93ICYmIFwiaGlkZGVuXCIgPT09IGhbMF0uc3R5bGUub3ZlcmZsb3cpICYmXG4gICAgICAgICAgICAgICAgKChoWzBdLmNsaWVudFdpZHRoICYmIGhbMF0uc2Nyb2xsV2lkdGggPiBoWzBdLmNsaWVudFdpZHRoKSB8fFxuICAgICAgICAgICAgICAgICAgKGhbMF0uY2xpZW50SGVpZ2h0ICYmXG4gICAgICAgICAgICAgICAgICAgIGhbMF0uc2Nyb2xsSGVpZ2h0ID4gaFswXS5jbGllbnRIZWlnaHQpKSksXG4gICAgICAgICAgICAgICAgKGggPSBmKGgpLnBhcmVudCgpKTtcbiAgICAgICAgICAgIGlmICgwICE9PSBjICYmICFqICYmIDEgPCBiLmdyb3VwLmxlbmd0aCAmJiAhYS5jYW5TaHJpbmspIHtcbiAgICAgICAgICAgICAgaWYgKDAgPCBnIHx8IDAgPCBrKSBiLnByZXYoMCA8IGcgPyBcImRvd25cIiA6IFwibGVmdFwiKTtcbiAgICAgICAgICAgICAgZWxzZSBpZiAoMCA+IGcgfHwgMCA+IGspIGIubmV4dCgwID4gZyA/IFwidXBcIiA6IFwicmlnaHRcIik7XG4gICAgICAgICAgICAgIGQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KSk7XG4gICAgfSxcbiAgICB0cmlnZ2VyOiBmdW5jdGlvbiAoYSwgZCkge1xuICAgICAgdmFyIGUsXG4gICAgICAgIGMgPSBkIHx8IGIuY29taW5nIHx8IGIuY3VycmVudDtcbiAgICAgIGlmIChjKSB7XG4gICAgICAgIGYuaXNGdW5jdGlvbihjW2FdKSAmJlxuICAgICAgICAgIChlID0gY1thXS5hcHBseShjLCBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsIDEpKSk7XG4gICAgICAgIGlmICghMSA9PT0gZSkgcmV0dXJuICExO1xuICAgICAgICBjLmhlbHBlcnMgJiZcbiAgICAgICAgICBmLmVhY2goYy5oZWxwZXJzLCBmdW5jdGlvbiAoZCwgZSkge1xuICAgICAgICAgICAgaWYgKGUgJiYgYi5oZWxwZXJzW2RdICYmIGYuaXNGdW5jdGlvbihiLmhlbHBlcnNbZF1bYV0pKVxuICAgICAgICAgICAgICBiLmhlbHBlcnNbZF1bYV0oZi5leHRlbmQoITAsIHt9LCBiLmhlbHBlcnNbZF0uZGVmYXVsdHMsIGUpLCBjKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgcC50cmlnZ2VyKGEpO1xuICAgICAgfVxuICAgIH0sXG4gICAgaXNJbWFnZTogZnVuY3Rpb24gKGEpIHtcbiAgICAgIHJldHVybiAoXG4gICAgICAgIHEoYSkgJiZcbiAgICAgICAgYS5tYXRjaChcbiAgICAgICAgICAvKF5kYXRhOmltYWdlXFwvLiosKXwoXFwuKGpwKGV8Z3xlZyl8Z2lmfHBuZ3xibXB8d2VicHxzdmcpKChcXD98IykuKik/JCkvaVxuICAgICAgICApXG4gICAgICApO1xuICAgIH0sXG4gICAgaXNTV0Y6IGZ1bmN0aW9uIChhKSB7XG4gICAgICByZXR1cm4gcShhKSAmJiBhLm1hdGNoKC9cXC4oc3dmKSgoXFw/fCMpLiopPyQvaSk7XG4gICAgfSxcbiAgICBfc3RhcnQ6IGZ1bmN0aW9uIChhKSB7XG4gICAgICB2YXIgZCA9IHt9LFxuICAgICAgICBlLFxuICAgICAgICBjO1xuICAgICAgYSA9IGwoYSk7XG4gICAgICBlID0gYi5ncm91cFthXSB8fCBudWxsO1xuICAgICAgaWYgKCFlKSByZXR1cm4gITE7XG4gICAgICBkID0gZi5leHRlbmQoITAsIHt9LCBiLm9wdHMsIGUpO1xuICAgICAgZSA9IGQubWFyZ2luO1xuICAgICAgYyA9IGQucGFkZGluZztcbiAgICAgIFwibnVtYmVyXCIgPT09IGYudHlwZShlKSAmJiAoZC5tYXJnaW4gPSBbZSwgZSwgZSwgZV0pO1xuICAgICAgXCJudW1iZXJcIiA9PT0gZi50eXBlKGMpICYmIChkLnBhZGRpbmcgPSBbYywgYywgYywgY10pO1xuICAgICAgZC5tb2RhbCAmJlxuICAgICAgICBmLmV4dGVuZCghMCwgZCwge1xuICAgICAgICAgIGNsb3NlQnRuOiAhMSxcbiAgICAgICAgICBjbG9zZUNsaWNrOiAhMSxcbiAgICAgICAgICBuZXh0Q2xpY2s6ICExLFxuICAgICAgICAgIGFycm93czogITEsXG4gICAgICAgICAgbW91c2VXaGVlbDogITEsXG4gICAgICAgICAga2V5czogbnVsbCxcbiAgICAgICAgICBoZWxwZXJzOiB7IG92ZXJsYXk6IHsgY2xvc2VDbGljazogITEgfSB9LFxuICAgICAgICB9KTtcbiAgICAgIGQuYXV0b1NpemUgJiYgKGQuYXV0b1dpZHRoID0gZC5hdXRvSGVpZ2h0ID0gITApO1xuICAgICAgXCJhdXRvXCIgPT09IGQud2lkdGggJiYgKGQuYXV0b1dpZHRoID0gITApO1xuICAgICAgXCJhdXRvXCIgPT09IGQuaGVpZ2h0ICYmIChkLmF1dG9IZWlnaHQgPSAhMCk7XG4gICAgICBkLmdyb3VwID0gYi5ncm91cDtcbiAgICAgIGQuaW5kZXggPSBhO1xuICAgICAgYi5jb21pbmcgPSBkO1xuICAgICAgaWYgKCExID09PSBiLnRyaWdnZXIoXCJiZWZvcmVMb2FkXCIpKSBiLmNvbWluZyA9IG51bGw7XG4gICAgICBlbHNlIHtcbiAgICAgICAgYyA9IGQudHlwZTtcbiAgICAgICAgZSA9IGQuaHJlZjtcbiAgICAgICAgaWYgKCFjKVxuICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAoYi5jb21pbmcgPSBudWxsKSxcbiAgICAgICAgICAgIGIuY3VycmVudCAmJiBiLnJvdXRlciAmJiBcImp1bXB0b1wiICE9PSBiLnJvdXRlclxuICAgICAgICAgICAgICA/ICgoYi5jdXJyZW50LmluZGV4ID0gYSksIGJbYi5yb3V0ZXJdKGIuZGlyZWN0aW9uKSlcbiAgICAgICAgICAgICAgOiAhMVxuICAgICAgICAgICk7XG4gICAgICAgIGIuaXNBY3RpdmUgPSAhMDtcbiAgICAgICAgaWYgKFwiaW1hZ2VcIiA9PT0gYyB8fCBcInN3ZlwiID09PSBjKVxuICAgICAgICAgIChkLmF1dG9IZWlnaHQgPSBkLmF1dG9XaWR0aCA9ICExKSwgKGQuc2Nyb2xsaW5nID0gXCJ2aXNpYmxlXCIpO1xuICAgICAgICBcImltYWdlXCIgPT09IGMgJiYgKGQuYXNwZWN0UmF0aW8gPSAhMCk7XG4gICAgICAgIFwiaWZyYW1lXCIgPT09IGMgJiYgcyAmJiAoZC5zY3JvbGxpbmcgPSBcInNjcm9sbFwiKTtcbiAgICAgICAgZC53cmFwID0gZihkLnRwbC53cmFwKVxuICAgICAgICAgIC5hZGRDbGFzcyhcbiAgICAgICAgICAgIFwiZmFuY3lib3gtXCIgK1xuICAgICAgICAgICAgICAocyA/IFwibW9iaWxlXCIgOiBcImRlc2t0b3BcIikgK1xuICAgICAgICAgICAgICBcIiBmYW5jeWJveC10eXBlLVwiICtcbiAgICAgICAgICAgICAgYyArXG4gICAgICAgICAgICAgIFwiIGZhbmN5Ym94LXRtcCBcIiArXG4gICAgICAgICAgICAgIGQud3JhcENTU1xuICAgICAgICAgIClcbiAgICAgICAgICAuYXBwZW5kVG8oZC5wYXJlbnQgfHwgXCJib2R5XCIpO1xuICAgICAgICBmLmV4dGVuZChkLCB7XG4gICAgICAgICAgc2tpbjogZihcIi5mYW5jeWJveC1za2luXCIsIGQud3JhcCksXG4gICAgICAgICAgb3V0ZXI6IGYoXCIuZmFuY3lib3gtb3V0ZXJcIiwgZC53cmFwKSxcbiAgICAgICAgICBpbm5lcjogZihcIi5mYW5jeWJveC1pbm5lclwiLCBkLndyYXApLFxuICAgICAgICB9KTtcbiAgICAgICAgZi5lYWNoKFtcIlRvcFwiLCBcIlJpZ2h0XCIsIFwiQm90dG9tXCIsIFwiTGVmdFwiXSwgZnVuY3Rpb24gKGEsIGIpIHtcbiAgICAgICAgICBkLnNraW4uY3NzKFwicGFkZGluZ1wiICsgYiwgdyhkLnBhZGRpbmdbYV0pKTtcbiAgICAgICAgfSk7XG4gICAgICAgIGIudHJpZ2dlcihcIm9uUmVhZHlcIik7XG4gICAgICAgIGlmIChcImlubGluZVwiID09PSBjIHx8IFwiaHRtbFwiID09PSBjKSB7XG4gICAgICAgICAgaWYgKCFkLmNvbnRlbnQgfHwgIWQuY29udGVudC5sZW5ndGgpIHJldHVybiBiLl9lcnJvcihcImNvbnRlbnRcIik7XG4gICAgICAgIH0gZWxzZSBpZiAoIWUpIHJldHVybiBiLl9lcnJvcihcImhyZWZcIik7XG4gICAgICAgIFwiaW1hZ2VcIiA9PT0gY1xuICAgICAgICAgID8gYi5fbG9hZEltYWdlKClcbiAgICAgICAgICA6IFwiYWpheFwiID09PSBjXG4gICAgICAgICAgPyBiLl9sb2FkQWpheCgpXG4gICAgICAgICAgOiBcImlmcmFtZVwiID09PSBjXG4gICAgICAgICAgPyBiLl9sb2FkSWZyYW1lKClcbiAgICAgICAgICA6IGIuX2FmdGVyTG9hZCgpO1xuICAgICAgfVxuICAgIH0sXG4gICAgX2Vycm9yOiBmdW5jdGlvbiAoYSkge1xuICAgICAgZi5leHRlbmQoYi5jb21pbmcsIHtcbiAgICAgICAgdHlwZTogXCJodG1sXCIsXG4gICAgICAgIGF1dG9XaWR0aDogITAsXG4gICAgICAgIGF1dG9IZWlnaHQ6ICEwLFxuICAgICAgICBtaW5XaWR0aDogMCxcbiAgICAgICAgbWluSGVpZ2h0OiAwLFxuICAgICAgICBzY3JvbGxpbmc6IFwibm9cIixcbiAgICAgICAgaGFzRXJyb3I6IGEsXG4gICAgICAgIGNvbnRlbnQ6IGIuY29taW5nLnRwbC5lcnJvcixcbiAgICAgIH0pO1xuICAgICAgYi5fYWZ0ZXJMb2FkKCk7XG4gICAgfSxcbiAgICBfbG9hZEltYWdlOiBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgYSA9IChiLmltZ1ByZWxvYWQgPSBuZXcgSW1hZ2UoKSk7XG4gICAgICBhLm9ubG9hZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5vbmxvYWQgPSB0aGlzLm9uZXJyb3IgPSBudWxsO1xuICAgICAgICBiLmNvbWluZy53aWR0aCA9IHRoaXMud2lkdGggLyBiLm9wdHMucGl4ZWxSYXRpbztcbiAgICAgICAgYi5jb21pbmcuaGVpZ2h0ID0gdGhpcy5oZWlnaHQgLyBiLm9wdHMucGl4ZWxSYXRpbztcbiAgICAgICAgYi5fYWZ0ZXJMb2FkKCk7XG4gICAgICB9O1xuICAgICAgYS5vbmVycm9yID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLm9ubG9hZCA9IHRoaXMub25lcnJvciA9IG51bGw7XG4gICAgICAgIGIuX2Vycm9yKFwiaW1hZ2VcIik7XG4gICAgICB9O1xuICAgICAgYS5zcmMgPSBiLmNvbWluZy5ocmVmO1xuICAgICAgITAgIT09IGEuY29tcGxldGUgJiYgYi5zaG93TG9hZGluZygpO1xuICAgIH0sXG4gICAgX2xvYWRBamF4OiBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgYSA9IGIuY29taW5nO1xuICAgICAgYi5zaG93TG9hZGluZygpO1xuICAgICAgYi5hamF4TG9hZCA9IGYuYWpheChcbiAgICAgICAgZi5leHRlbmQoe30sIGEuYWpheCwge1xuICAgICAgICAgIHVybDogYS5ocmVmLFxuICAgICAgICAgIGVycm9yOiBmdW5jdGlvbiAoYSwgZSkge1xuICAgICAgICAgICAgYi5jb21pbmcgJiYgXCJhYm9ydFwiICE9PSBlID8gYi5fZXJyb3IoXCJhamF4XCIsIGEpIDogYi5oaWRlTG9hZGluZygpO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGQsIGUpIHtcbiAgICAgICAgICAgIFwic3VjY2Vzc1wiID09PSBlICYmICgoYS5jb250ZW50ID0gZCksIGIuX2FmdGVyTG9hZCgpKTtcbiAgICAgICAgICB9LFxuICAgICAgICB9KVxuICAgICAgKTtcbiAgICB9LFxuICAgIF9sb2FkSWZyYW1lOiBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgYSA9IGIuY29taW5nLFxuICAgICAgICBkID0gZihhLnRwbC5pZnJhbWUucmVwbGFjZSgvXFx7cm5kXFx9L2csIG5ldyBEYXRlKCkuZ2V0VGltZSgpKSlcbiAgICAgICAgICAuYXR0cihcInNjcm9sbGluZ1wiLCBzID8gXCJhdXRvXCIgOiBhLmlmcmFtZS5zY3JvbGxpbmcpXG4gICAgICAgICAgLmF0dHIoXCJzcmNcIiwgYS5ocmVmKTtcbiAgICAgIGYoYS53cmFwKS5iaW5kKFwib25SZXNldFwiLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgZih0aGlzKVxuICAgICAgICAgICAgLmZpbmQoXCJpZnJhbWVcIilcbiAgICAgICAgICAgIC5oaWRlKClcbiAgICAgICAgICAgIC5hdHRyKFwic3JjXCIsIFwiLy9hYm91dDpibGFua1wiKVxuICAgICAgICAgICAgLmVuZCgpXG4gICAgICAgICAgICAuZW1wdHkoKTtcbiAgICAgICAgfSBjYXRjaCAoYSkge31cbiAgICAgIH0pO1xuICAgICAgYS5pZnJhbWUucHJlbG9hZCAmJlxuICAgICAgICAoYi5zaG93TG9hZGluZygpLFxuICAgICAgICBkLm9uZShcImxvYWRcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgIGYodGhpcykuZGF0YShcInJlYWR5XCIsIDEpO1xuICAgICAgICAgIHMgfHwgZih0aGlzKS5iaW5kKFwibG9hZC5mYlwiLCBiLnVwZGF0ZSk7XG4gICAgICAgICAgZih0aGlzKVxuICAgICAgICAgICAgLnBhcmVudHMoXCIuZmFuY3lib3gtd3JhcFwiKVxuICAgICAgICAgICAgLndpZHRoKFwiMTAwJVwiKVxuICAgICAgICAgICAgLnJlbW92ZUNsYXNzKFwiZmFuY3lib3gtdG1wXCIpXG4gICAgICAgICAgICAuc2hvdygpO1xuICAgICAgICAgIGIuX2FmdGVyTG9hZCgpO1xuICAgICAgICB9KSk7XG4gICAgICBhLmNvbnRlbnQgPSBkLmFwcGVuZFRvKGEuaW5uZXIpO1xuICAgICAgYS5pZnJhbWUucHJlbG9hZCB8fCBiLl9hZnRlckxvYWQoKTtcbiAgICB9LFxuICAgIF9wcmVsb2FkSW1hZ2VzOiBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgYSA9IGIuZ3JvdXAsXG4gICAgICAgIGQgPSBiLmN1cnJlbnQsXG4gICAgICAgIGUgPSBhLmxlbmd0aCxcbiAgICAgICAgYyA9IGQucHJlbG9hZCA/IE1hdGgubWluKGQucHJlbG9hZCwgZSAtIDEpIDogMCxcbiAgICAgICAgZixcbiAgICAgICAgZztcbiAgICAgIGZvciAoZyA9IDE7IGcgPD0gYzsgZyArPSAxKVxuICAgICAgICAoZiA9IGFbKGQuaW5kZXggKyBnKSAlIGVdKSxcbiAgICAgICAgICBcImltYWdlXCIgPT09IGYudHlwZSAmJiBmLmhyZWYgJiYgKG5ldyBJbWFnZSgpLnNyYyA9IGYuaHJlZik7XG4gICAgfSxcbiAgICBfYWZ0ZXJMb2FkOiBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgYSA9IGIuY29taW5nLFxuICAgICAgICBkID0gYi5jdXJyZW50LFxuICAgICAgICBlLFxuICAgICAgICBjLFxuICAgICAgICBrLFxuICAgICAgICBnLFxuICAgICAgICBoO1xuICAgICAgYi5oaWRlTG9hZGluZygpO1xuICAgICAgaWYgKGEgJiYgITEgIT09IGIuaXNBY3RpdmUpXG4gICAgICAgIGlmICghMSA9PT0gYi50cmlnZ2VyKFwiYWZ0ZXJMb2FkXCIsIGEsIGQpKVxuICAgICAgICAgIGEud3JhcC5zdG9wKCEwKS50cmlnZ2VyKFwib25SZXNldFwiKS5yZW1vdmUoKSwgKGIuY29taW5nID0gbnVsbCk7XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgIGQgJiZcbiAgICAgICAgICAgIChiLnRyaWdnZXIoXCJiZWZvcmVDaGFuZ2VcIiwgZCksXG4gICAgICAgICAgICBkLndyYXBcbiAgICAgICAgICAgICAgLnN0b3AoITApXG4gICAgICAgICAgICAgIC5yZW1vdmVDbGFzcyhcImZhbmN5Ym94LW9wZW5lZFwiKVxuICAgICAgICAgICAgICAuZmluZChcIi5mYW5jeWJveC1pdGVtLCAuZmFuY3lib3gtbmF2XCIpXG4gICAgICAgICAgICAgIC5yZW1vdmUoKSk7XG4gICAgICAgICAgYi51bmJpbmRFdmVudHMoKTtcbiAgICAgICAgICBlID0gYS5jb250ZW50O1xuICAgICAgICAgIGMgPSBhLnR5cGU7XG4gICAgICAgICAgayA9IGEuc2Nyb2xsaW5nO1xuICAgICAgICAgIGYuZXh0ZW5kKGIsIHtcbiAgICAgICAgICAgIHdyYXA6IGEud3JhcCxcbiAgICAgICAgICAgIHNraW46IGEuc2tpbixcbiAgICAgICAgICAgIG91dGVyOiBhLm91dGVyLFxuICAgICAgICAgICAgaW5uZXI6IGEuaW5uZXIsXG4gICAgICAgICAgICBjdXJyZW50OiBhLFxuICAgICAgICAgICAgcHJldmlvdXM6IGQsXG4gICAgICAgICAgfSk7XG4gICAgICAgICAgZyA9IGEuaHJlZjtcbiAgICAgICAgICBzd2l0Y2ggKGMpIHtcbiAgICAgICAgICAgIGNhc2UgXCJpbmxpbmVcIjpcbiAgICAgICAgICAgIGNhc2UgXCJhamF4XCI6XG4gICAgICAgICAgICBjYXNlIFwiaHRtbFwiOlxuICAgICAgICAgICAgICBhLnNlbGVjdG9yXG4gICAgICAgICAgICAgICAgPyAoZSA9IGYoXCI8ZGl2PlwiKS5odG1sKGUpLmZpbmQoYS5zZWxlY3RvcikpXG4gICAgICAgICAgICAgICAgOiB0KGUpICYmXG4gICAgICAgICAgICAgICAgICAoZS5kYXRhKFwiZmFuY3lib3gtcGxhY2Vob2xkZXJcIikgfHxcbiAgICAgICAgICAgICAgICAgICAgZS5kYXRhKFxuICAgICAgICAgICAgICAgICAgICAgIFwiZmFuY3lib3gtcGxhY2Vob2xkZXJcIixcbiAgICAgICAgICAgICAgICAgICAgICBmKCc8ZGl2IGNsYXNzPVwiZmFuY3lib3gtcGxhY2Vob2xkZXJcIj48L2Rpdj4nKVxuICAgICAgICAgICAgICAgICAgICAgICAgLmluc2VydEFmdGVyKGUpXG4gICAgICAgICAgICAgICAgICAgICAgICAuaGlkZSgpXG4gICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAoZSA9IGUuc2hvdygpLmRldGFjaCgpKSxcbiAgICAgICAgICAgICAgICAgIGEud3JhcC5iaW5kKFwib25SZXNldFwiLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIGYodGhpcykuZmluZChlKS5sZW5ndGggJiZcbiAgICAgICAgICAgICAgICAgICAgICBlXG4gICAgICAgICAgICAgICAgICAgICAgICAuaGlkZSgpXG4gICAgICAgICAgICAgICAgICAgICAgICAucmVwbGFjZUFsbChlLmRhdGEoXCJmYW5jeWJveC1wbGFjZWhvbGRlclwiKSlcbiAgICAgICAgICAgICAgICAgICAgICAgIC5kYXRhKFwiZmFuY3lib3gtcGxhY2Vob2xkZXJcIiwgITEpO1xuICAgICAgICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgXCJpbWFnZVwiOlxuICAgICAgICAgICAgICBlID0gYS50cGwuaW1hZ2UucmVwbGFjZShcIntocmVmfVwiLCBnKTtcbiAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwic3dmXCI6XG4gICAgICAgICAgICAgIChlID1cbiAgICAgICAgICAgICAgICAnPG9iamVjdCBpZD1cImZhbmN5Ym94LXN3ZlwiIGNsYXNzaWQ9XCJjbHNpZDpEMjdDREI2RS1BRTZELTExY2YtOTZCOC00NDQ1NTM1NDAwMDBcIiB3aWR0aD1cIjEwMCVcIiBoZWlnaHQ9XCIxMDAlXCI+PHBhcmFtIG5hbWU9XCJtb3ZpZVwiIHZhbHVlPVwiJyArXG4gICAgICAgICAgICAgICAgZyArXG4gICAgICAgICAgICAgICAgJ1wiPjwvcGFyYW0+JyksXG4gICAgICAgICAgICAgICAgKGggPSBcIlwiKSxcbiAgICAgICAgICAgICAgICBmLmVhY2goYS5zd2YsIGZ1bmN0aW9uIChhLCBiKSB7XG4gICAgICAgICAgICAgICAgICBlICs9ICc8cGFyYW0gbmFtZT1cIicgKyBhICsgJ1wiIHZhbHVlPVwiJyArIGIgKyAnXCI+PC9wYXJhbT4nO1xuICAgICAgICAgICAgICAgICAgaCArPSBcIiBcIiArIGEgKyAnPVwiJyArIGIgKyAnXCInO1xuICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgIChlICs9XG4gICAgICAgICAgICAgICAgICAnPGVtYmVkIHNyYz1cIicgK1xuICAgICAgICAgICAgICAgICAgZyArXG4gICAgICAgICAgICAgICAgICAnXCIgdHlwZT1cImFwcGxpY2F0aW9uL3gtc2hvY2t3YXZlLWZsYXNoXCIgd2lkdGg9XCIxMDAlXCIgaGVpZ2h0PVwiMTAwJVwiJyArXG4gICAgICAgICAgICAgICAgICBoICtcbiAgICAgICAgICAgICAgICAgIFwiPjwvZW1iZWQ+PC9vYmplY3Q+XCIpO1xuICAgICAgICAgIH1cbiAgICAgICAgICAoIXQoZSkgfHwgIWUucGFyZW50KCkuaXMoYS5pbm5lcikpICYmIGEuaW5uZXIuYXBwZW5kKGUpO1xuICAgICAgICAgIGIudHJpZ2dlcihcImJlZm9yZVNob3dcIik7XG4gICAgICAgICAgYS5pbm5lci5jc3MoXG4gICAgICAgICAgICBcIm92ZXJmbG93XCIsXG4gICAgICAgICAgICBcInllc1wiID09PSBrID8gXCJzY3JvbGxcIiA6IFwibm9cIiA9PT0gayA/IFwiaGlkZGVuXCIgOiBrXG4gICAgICAgICAgKTtcbiAgICAgICAgICBiLl9zZXREaW1lbnNpb24oKTtcbiAgICAgICAgICBiLnJlcG9zaXRpb24oKTtcbiAgICAgICAgICBiLmlzT3BlbiA9ICExO1xuICAgICAgICAgIGIuY29taW5nID0gbnVsbDtcbiAgICAgICAgICBiLmJpbmRFdmVudHMoKTtcbiAgICAgICAgICBpZiAoYi5pc09wZW5lZCkge1xuICAgICAgICAgICAgaWYgKGQucHJldk1ldGhvZCkgYi50cmFuc2l0aW9uc1tkLnByZXZNZXRob2RdKCk7XG4gICAgICAgICAgfSBlbHNlXG4gICAgICAgICAgICBmKFwiLmZhbmN5Ym94LXdyYXBcIilcbiAgICAgICAgICAgICAgLm5vdChhLndyYXApXG4gICAgICAgICAgICAgIC5zdG9wKCEwKVxuICAgICAgICAgICAgICAudHJpZ2dlcihcIm9uUmVzZXRcIilcbiAgICAgICAgICAgICAgLnJlbW92ZSgpO1xuICAgICAgICAgIGIudHJhbnNpdGlvbnNbYi5pc09wZW5lZCA/IGEubmV4dE1ldGhvZCA6IGEub3Blbk1ldGhvZF0oKTtcbiAgICAgICAgICBiLl9wcmVsb2FkSW1hZ2VzKCk7XG4gICAgICAgIH1cbiAgICB9LFxuICAgIF9zZXREaW1lbnNpb246IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBhID0gYi5nZXRWaWV3cG9ydCgpLFxuICAgICAgICBkID0gMCxcbiAgICAgICAgZSA9ICExLFxuICAgICAgICBjID0gITEsXG4gICAgICAgIGUgPSBiLndyYXAsXG4gICAgICAgIGsgPSBiLnNraW4sXG4gICAgICAgIGcgPSBiLmlubmVyLFxuICAgICAgICBoID0gYi5jdXJyZW50LFxuICAgICAgICBjID0gaC53aWR0aCxcbiAgICAgICAgaiA9IGguaGVpZ2h0LFxuICAgICAgICBtID0gaC5taW5XaWR0aCxcbiAgICAgICAgdSA9IGgubWluSGVpZ2h0LFxuICAgICAgICBuID0gaC5tYXhXaWR0aCxcbiAgICAgICAgcCA9IGgubWF4SGVpZ2h0LFxuICAgICAgICBzID0gaC5zY3JvbGxpbmcsXG4gICAgICAgIHEgPSBoLnNjcm9sbE91dHNpZGUgPyBoLnNjcm9sbGJhcldpZHRoIDogMCxcbiAgICAgICAgeCA9IGgubWFyZ2luLFxuICAgICAgICB5ID0gbCh4WzFdICsgeFszXSksXG4gICAgICAgIHIgPSBsKHhbMF0gKyB4WzJdKSxcbiAgICAgICAgdixcbiAgICAgICAgeixcbiAgICAgICAgdCxcbiAgICAgICAgQyxcbiAgICAgICAgQSxcbiAgICAgICAgRixcbiAgICAgICAgQixcbiAgICAgICAgRCxcbiAgICAgICAgSDtcbiAgICAgIGUuYWRkKGspLmFkZChnKS53aWR0aChcImF1dG9cIikuaGVpZ2h0KFwiYXV0b1wiKS5yZW1vdmVDbGFzcyhcImZhbmN5Ym94LXRtcFwiKTtcbiAgICAgIHggPSBsKGsub3V0ZXJXaWR0aCghMCkgLSBrLndpZHRoKCkpO1xuICAgICAgdiA9IGwoay5vdXRlckhlaWdodCghMCkgLSBrLmhlaWdodCgpKTtcbiAgICAgIHogPSB5ICsgeDtcbiAgICAgIHQgPSByICsgdjtcbiAgICAgIEMgPSBFKGMpID8gKChhLncgLSB6KSAqIGwoYykpIC8gMTAwIDogYztcbiAgICAgIEEgPSBFKGopID8gKChhLmggLSB0KSAqIGwoaikpIC8gMTAwIDogajtcbiAgICAgIGlmIChcImlmcmFtZVwiID09PSBoLnR5cGUpIHtcbiAgICAgICAgaWYgKCgoSCA9IGguY29udGVudCksIGguYXV0b0hlaWdodCAmJiAxID09PSBILmRhdGEoXCJyZWFkeVwiKSkpXG4gICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIEhbMF0uY29udGVudFdpbmRvdy5kb2N1bWVudC5sb2NhdGlvbiAmJlxuICAgICAgICAgICAgICAoZy53aWR0aChDKS5oZWlnaHQoOTk5OSksXG4gICAgICAgICAgICAgIChGID0gSC5jb250ZW50cygpLmZpbmQoXCJib2R5XCIpKSxcbiAgICAgICAgICAgICAgcSAmJiBGLmNzcyhcIm92ZXJmbG93LXhcIiwgXCJoaWRkZW5cIiksXG4gICAgICAgICAgICAgIChBID0gRi5vdXRlckhlaWdodCghMCkpKTtcbiAgICAgICAgICB9IGNhdGNoIChHKSB7fVxuICAgICAgfSBlbHNlIGlmIChoLmF1dG9XaWR0aCB8fCBoLmF1dG9IZWlnaHQpXG4gICAgICAgIGcuYWRkQ2xhc3MoXCJmYW5jeWJveC10bXBcIiksXG4gICAgICAgICAgaC5hdXRvV2lkdGggfHwgZy53aWR0aChDKSxcbiAgICAgICAgICBoLmF1dG9IZWlnaHQgfHwgZy5oZWlnaHQoQSksXG4gICAgICAgICAgaC5hdXRvV2lkdGggJiYgKEMgPSBnLndpZHRoKCkpLFxuICAgICAgICAgIGguYXV0b0hlaWdodCAmJiAoQSA9IGcuaGVpZ2h0KCkpLFxuICAgICAgICAgIGcucmVtb3ZlQ2xhc3MoXCJmYW5jeWJveC10bXBcIik7XG4gICAgICBjID0gbChDKTtcbiAgICAgIGogPSBsKEEpO1xuICAgICAgRCA9IEMgLyBBO1xuICAgICAgbSA9IGwoRShtKSA/IGwobSwgXCJ3XCIpIC0geiA6IG0pO1xuICAgICAgbiA9IGwoRShuKSA/IGwobiwgXCJ3XCIpIC0geiA6IG4pO1xuICAgICAgdSA9IGwoRSh1KSA/IGwodSwgXCJoXCIpIC0gdCA6IHUpO1xuICAgICAgcCA9IGwoRShwKSA/IGwocCwgXCJoXCIpIC0gdCA6IHApO1xuICAgICAgRiA9IG47XG4gICAgICBCID0gcDtcbiAgICAgIGguZml0VG9WaWV3ICYmICgobiA9IE1hdGgubWluKGEudyAtIHosIG4pKSwgKHAgPSBNYXRoLm1pbihhLmggLSB0LCBwKSkpO1xuICAgICAgeiA9IGEudyAtIHk7XG4gICAgICByID0gYS5oIC0gcjtcbiAgICAgIGguYXNwZWN0UmF0aW9cbiAgICAgICAgPyAoYyA+IG4gJiYgKChjID0gbiksIChqID0gbChjIC8gRCkpKSxcbiAgICAgICAgICBqID4gcCAmJiAoKGogPSBwKSwgKGMgPSBsKGogKiBEKSkpLFxuICAgICAgICAgIGMgPCBtICYmICgoYyA9IG0pLCAoaiA9IGwoYyAvIEQpKSksXG4gICAgICAgICAgaiA8IHUgJiYgKChqID0gdSksIChjID0gbChqICogRCkpKSlcbiAgICAgICAgOiAoKGMgPSBNYXRoLm1heChtLCBNYXRoLm1pbihjLCBuKSkpLFxuICAgICAgICAgIGguYXV0b0hlaWdodCAmJiBcImlmcmFtZVwiICE9PSBoLnR5cGUgJiYgKGcud2lkdGgoYyksIChqID0gZy5oZWlnaHQoKSkpLFxuICAgICAgICAgIChqID0gTWF0aC5tYXgodSwgTWF0aC5taW4oaiwgcCkpKSk7XG4gICAgICBpZiAoaC5maXRUb1ZpZXcpXG4gICAgICAgIGlmIChcbiAgICAgICAgICAoZy53aWR0aChjKS5oZWlnaHQoaiksXG4gICAgICAgICAgZS53aWR0aChjICsgeCksXG4gICAgICAgICAgKGEgPSBlLndpZHRoKCkpLFxuICAgICAgICAgICh5ID0gZS5oZWlnaHQoKSksXG4gICAgICAgICAgaC5hc3BlY3RSYXRpbylcbiAgICAgICAgKVxuICAgICAgICAgIGZvciAoOyAoYSA+IHogfHwgeSA+IHIpICYmIGMgPiBtICYmIGogPiB1ICYmICEoMTkgPCBkKyspOyApXG4gICAgICAgICAgICAoaiA9IE1hdGgubWF4KHUsIE1hdGgubWluKHAsIGogLSAxMCkpKSxcbiAgICAgICAgICAgICAgKGMgPSBsKGogKiBEKSksXG4gICAgICAgICAgICAgIGMgPCBtICYmICgoYyA9IG0pLCAoaiA9IGwoYyAvIEQpKSksXG4gICAgICAgICAgICAgIGMgPiBuICYmICgoYyA9IG4pLCAoaiA9IGwoYyAvIEQpKSksXG4gICAgICAgICAgICAgIGcud2lkdGgoYykuaGVpZ2h0KGopLFxuICAgICAgICAgICAgICBlLndpZHRoKGMgKyB4KSxcbiAgICAgICAgICAgICAgKGEgPSBlLndpZHRoKCkpLFxuICAgICAgICAgICAgICAoeSA9IGUuaGVpZ2h0KCkpO1xuICAgICAgICBlbHNlXG4gICAgICAgICAgKGMgPSBNYXRoLm1heChtLCBNYXRoLm1pbihjLCBjIC0gKGEgLSB6KSkpKSxcbiAgICAgICAgICAgIChqID0gTWF0aC5tYXgodSwgTWF0aC5taW4oaiwgaiAtICh5IC0gcikpKSk7XG4gICAgICBxICYmIFwiYXV0b1wiID09PSBzICYmIGogPCBBICYmIGMgKyB4ICsgcSA8IHogJiYgKGMgKz0gcSk7XG4gICAgICBnLndpZHRoKGMpLmhlaWdodChqKTtcbiAgICAgIGUud2lkdGgoYyArIHgpO1xuICAgICAgYSA9IGUud2lkdGgoKTtcbiAgICAgIHkgPSBlLmhlaWdodCgpO1xuICAgICAgZSA9IChhID4geiB8fCB5ID4gcikgJiYgYyA+IG0gJiYgaiA+IHU7XG4gICAgICBjID0gaC5hc3BlY3RSYXRpb1xuICAgICAgICA/IGMgPCBGICYmIGogPCBCICYmIGMgPCBDICYmIGogPCBBXG4gICAgICAgIDogKGMgPCBGIHx8IGogPCBCKSAmJiAoYyA8IEMgfHwgaiA8IEEpO1xuICAgICAgZi5leHRlbmQoaCwge1xuICAgICAgICBkaW06IHsgd2lkdGg6IHcoYSksIGhlaWdodDogdyh5KSB9LFxuICAgICAgICBvcmlnV2lkdGg6IEMsXG4gICAgICAgIG9yaWdIZWlnaHQ6IEEsXG4gICAgICAgIGNhblNocmluazogZSxcbiAgICAgICAgY2FuRXhwYW5kOiBjLFxuICAgICAgICB3UGFkZGluZzogeCxcbiAgICAgICAgaFBhZGRpbmc6IHYsXG4gICAgICAgIHdyYXBTcGFjZTogeSAtIGsub3V0ZXJIZWlnaHQoITApLFxuICAgICAgICBza2luU3BhY2U6IGsuaGVpZ2h0KCkgLSBqLFxuICAgICAgfSk7XG4gICAgICAhSCAmJiBoLmF1dG9IZWlnaHQgJiYgaiA+IHUgJiYgaiA8IHAgJiYgIWMgJiYgZy5oZWlnaHQoXCJhdXRvXCIpO1xuICAgIH0sXG4gICAgX2dldFBvc2l0aW9uOiBmdW5jdGlvbiAoYSkge1xuICAgICAgdmFyIGQgPSBiLmN1cnJlbnQsXG4gICAgICAgIGUgPSBiLmdldFZpZXdwb3J0KCksXG4gICAgICAgIGMgPSBkLm1hcmdpbixcbiAgICAgICAgZiA9IGIud3JhcC53aWR0aCgpICsgY1sxXSArIGNbM10sXG4gICAgICAgIGcgPSBiLndyYXAuaGVpZ2h0KCkgKyBjWzBdICsgY1syXSxcbiAgICAgICAgYyA9IHsgcG9zaXRpb246IFwiYWJzb2x1dGVcIiwgdG9wOiBjWzBdLCBsZWZ0OiBjWzNdIH07XG4gICAgICBkLmF1dG9DZW50ZXIgJiYgZC5maXhlZCAmJiAhYSAmJiBnIDw9IGUuaCAmJiBmIDw9IGUud1xuICAgICAgICA/IChjLnBvc2l0aW9uID0gXCJmaXhlZFwiKVxuICAgICAgICA6IGQubG9ja2VkIHx8ICgoYy50b3AgKz0gZS55KSwgKGMubGVmdCArPSBlLngpKTtcbiAgICAgIGMudG9wID0gdyhNYXRoLm1heChjLnRvcCwgYy50b3AgKyAoZS5oIC0gZykgKiBkLnRvcFJhdGlvKSk7XG4gICAgICBjLmxlZnQgPSB3KE1hdGgubWF4KGMubGVmdCwgYy5sZWZ0ICsgKGUudyAtIGYpICogZC5sZWZ0UmF0aW8pKTtcbiAgICAgIHJldHVybiBjO1xuICAgIH0sXG4gICAgX2FmdGVyWm9vbUluOiBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgYSA9IGIuY3VycmVudDtcbiAgICAgIGEgJiZcbiAgICAgICAgKChiLmlzT3BlbiA9IGIuaXNPcGVuZWQgPSAhMCksXG4gICAgICAgIGIud3JhcC5jc3MoXCJvdmVyZmxvd1wiLCBcInZpc2libGVcIikuYWRkQ2xhc3MoXCJmYW5jeWJveC1vcGVuZWRcIiksXG4gICAgICAgIGIudXBkYXRlKCksXG4gICAgICAgIChhLmNsb3NlQ2xpY2sgfHwgKGEubmV4dENsaWNrICYmIDEgPCBiLmdyb3VwLmxlbmd0aCkpICYmXG4gICAgICAgICAgYi5pbm5lci5jc3MoXCJjdXJzb3JcIiwgXCJwb2ludGVyXCIpLmJpbmQoXCJjbGljay5mYlwiLCBmdW5jdGlvbiAoZCkge1xuICAgICAgICAgICAgIWYoZC50YXJnZXQpLmlzKFwiYVwiKSAmJlxuICAgICAgICAgICAgICAhZihkLnRhcmdldCkucGFyZW50KCkuaXMoXCJhXCIpICYmXG4gICAgICAgICAgICAgIChkLnByZXZlbnREZWZhdWx0KCksIGJbYS5jbG9zZUNsaWNrID8gXCJjbG9zZVwiIDogXCJuZXh0XCJdKCkpO1xuICAgICAgICAgIH0pLFxuICAgICAgICBhLmNsb3NlQnRuICYmXG4gICAgICAgICAgZihhLnRwbC5jbG9zZUJ0bilcbiAgICAgICAgICAgIC5hcHBlbmRUbyhiLnNraW4pXG4gICAgICAgICAgICAuYmluZChcImNsaWNrLmZiXCIsIGZ1bmN0aW9uIChhKSB7XG4gICAgICAgICAgICAgIGEucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgYi5jbG9zZSgpO1xuICAgICAgICAgICAgfSksXG4gICAgICAgIGEuYXJyb3dzICYmXG4gICAgICAgICAgMSA8IGIuZ3JvdXAubGVuZ3RoICYmXG4gICAgICAgICAgKChhLmxvb3AgfHwgMCA8IGEuaW5kZXgpICYmXG4gICAgICAgICAgICBmKGEudHBsLnByZXYpLmFwcGVuZFRvKGIub3V0ZXIpLmJpbmQoXCJjbGljay5mYlwiLCBiLnByZXYpLFxuICAgICAgICAgIChhLmxvb3AgfHwgYS5pbmRleCA8IGIuZ3JvdXAubGVuZ3RoIC0gMSkgJiZcbiAgICAgICAgICAgIGYoYS50cGwubmV4dCkuYXBwZW5kVG8oYi5vdXRlcikuYmluZChcImNsaWNrLmZiXCIsIGIubmV4dCkpLFxuICAgICAgICBiLnRyaWdnZXIoXCJhZnRlclNob3dcIiksXG4gICAgICAgICFhLmxvb3AgJiYgYS5pbmRleCA9PT0gYS5ncm91cC5sZW5ndGggLSAxXG4gICAgICAgICAgPyBiLnBsYXkoITEpXG4gICAgICAgICAgOiBiLm9wdHMuYXV0b1BsYXkgJiZcbiAgICAgICAgICAgICFiLnBsYXllci5pc0FjdGl2ZSAmJlxuICAgICAgICAgICAgKChiLm9wdHMuYXV0b1BsYXkgPSAhMSksIGIucGxheSgpKSk7XG4gICAgfSxcbiAgICBfYWZ0ZXJab29tT3V0OiBmdW5jdGlvbiAoYSkge1xuICAgICAgYSA9IGEgfHwgYi5jdXJyZW50O1xuICAgICAgZihcIi5mYW5jeWJveC13cmFwXCIpLnRyaWdnZXIoXCJvblJlc2V0XCIpLnJlbW92ZSgpO1xuICAgICAgZi5leHRlbmQoYiwge1xuICAgICAgICBncm91cDoge30sXG4gICAgICAgIG9wdHM6IHt9LFxuICAgICAgICByb3V0ZXI6ICExLFxuICAgICAgICBjdXJyZW50OiBudWxsLFxuICAgICAgICBpc0FjdGl2ZTogITEsXG4gICAgICAgIGlzT3BlbmVkOiAhMSxcbiAgICAgICAgaXNPcGVuOiAhMSxcbiAgICAgICAgaXNDbG9zaW5nOiAhMSxcbiAgICAgICAgd3JhcDogbnVsbCxcbiAgICAgICAgc2tpbjogbnVsbCxcbiAgICAgICAgb3V0ZXI6IG51bGwsXG4gICAgICAgIGlubmVyOiBudWxsLFxuICAgICAgfSk7XG4gICAgICBiLnRyaWdnZXIoXCJhZnRlckNsb3NlXCIsIGEpO1xuICAgIH0sXG4gIH0pO1xuICBiLnRyYW5zaXRpb25zID0ge1xuICAgIGdldE9yaWdQb3NpdGlvbjogZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIGEgPSBiLmN1cnJlbnQsXG4gICAgICAgIGQgPSBhLmVsZW1lbnQsXG4gICAgICAgIGUgPSBhLm9yaWcsXG4gICAgICAgIGMgPSB7fSxcbiAgICAgICAgZiA9IDUwLFxuICAgICAgICBnID0gNTAsXG4gICAgICAgIGggPSBhLmhQYWRkaW5nLFxuICAgICAgICBqID0gYS53UGFkZGluZyxcbiAgICAgICAgbSA9IGIuZ2V0Vmlld3BvcnQoKTtcbiAgICAgICFlICYmXG4gICAgICAgIGEuaXNEb20gJiZcbiAgICAgICAgZC5pcyhcIjp2aXNpYmxlXCIpICYmXG4gICAgICAgICgoZSA9IGQuZmluZChcImltZzpmaXJzdFwiKSksIGUubGVuZ3RoIHx8IChlID0gZCkpO1xuICAgICAgdChlKVxuICAgICAgICA/ICgoYyA9IGUub2Zmc2V0KCkpLFxuICAgICAgICAgIGUuaXMoXCJpbWdcIikgJiYgKChmID0gZS5vdXRlcldpZHRoKCkpLCAoZyA9IGUub3V0ZXJIZWlnaHQoKSkpKVxuICAgICAgICA6ICgoYy50b3AgPSBtLnkgKyAobS5oIC0gZykgKiBhLnRvcFJhdGlvKSxcbiAgICAgICAgICAoYy5sZWZ0ID0gbS54ICsgKG0udyAtIGYpICogYS5sZWZ0UmF0aW8pKTtcbiAgICAgIGlmIChcImZpeGVkXCIgPT09IGIud3JhcC5jc3MoXCJwb3NpdGlvblwiKSB8fCBhLmxvY2tlZClcbiAgICAgICAgKGMudG9wIC09IG0ueSksIChjLmxlZnQgLT0gbS54KTtcbiAgICAgIHJldHVybiAoYyA9IHtcbiAgICAgICAgdG9wOiB3KGMudG9wIC0gaCAqIGEudG9wUmF0aW8pLFxuICAgICAgICBsZWZ0OiB3KGMubGVmdCAtIGogKiBhLmxlZnRSYXRpbyksXG4gICAgICAgIHdpZHRoOiB3KGYgKyBqKSxcbiAgICAgICAgaGVpZ2h0OiB3KGcgKyBoKSxcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgc3RlcDogZnVuY3Rpb24gKGEsIGQpIHtcbiAgICAgIHZhciBlLFxuICAgICAgICBjLFxuICAgICAgICBmID0gZC5wcm9wO1xuICAgICAgYyA9IGIuY3VycmVudDtcbiAgICAgIHZhciBnID0gYy53cmFwU3BhY2UsXG4gICAgICAgIGggPSBjLnNraW5TcGFjZTtcbiAgICAgIGlmIChcIndpZHRoXCIgPT09IGYgfHwgXCJoZWlnaHRcIiA9PT0gZilcbiAgICAgICAgKGUgPSBkLmVuZCA9PT0gZC5zdGFydCA/IDEgOiAoYSAtIGQuc3RhcnQpIC8gKGQuZW5kIC0gZC5zdGFydCkpLFxuICAgICAgICAgIGIuaXNDbG9zaW5nICYmIChlID0gMSAtIGUpLFxuICAgICAgICAgIChjID0gXCJ3aWR0aFwiID09PSBmID8gYy53UGFkZGluZyA6IGMuaFBhZGRpbmcpLFxuICAgICAgICAgIChjID0gYSAtIGMpLFxuICAgICAgICAgIGIuc2tpbltmXShsKFwid2lkdGhcIiA9PT0gZiA/IGMgOiBjIC0gZyAqIGUpKSxcbiAgICAgICAgICBiLmlubmVyW2ZdKGwoXCJ3aWR0aFwiID09PSBmID8gYyA6IGMgLSBnICogZSAtIGggKiBlKSk7XG4gICAgfSxcbiAgICB6b29tSW46IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBhID0gYi5jdXJyZW50LFxuICAgICAgICBkID0gYS5wb3MsXG4gICAgICAgIGUgPSBhLm9wZW5FZmZlY3QsXG4gICAgICAgIGMgPSBcImVsYXN0aWNcIiA9PT0gZSxcbiAgICAgICAgayA9IGYuZXh0ZW5kKHsgb3BhY2l0eTogMSB9LCBkKTtcbiAgICAgIGRlbGV0ZSBrLnBvc2l0aW9uO1xuICAgICAgY1xuICAgICAgICA/ICgoZCA9IHRoaXMuZ2V0T3JpZ1Bvc2l0aW9uKCkpLCBhLm9wZW5PcGFjaXR5ICYmIChkLm9wYWNpdHkgPSAwLjEpKVxuICAgICAgICA6IFwiZmFkZVwiID09PSBlICYmIChkLm9wYWNpdHkgPSAwLjEpO1xuICAgICAgYi53cmFwXG4gICAgICAgIC5jc3MoZClcbiAgICAgICAgLmFuaW1hdGUoaywge1xuICAgICAgICAgIGR1cmF0aW9uOiBcIm5vbmVcIiA9PT0gZSA/IDAgOiBhLm9wZW5TcGVlZCxcbiAgICAgICAgICBlYXNpbmc6IGEub3BlbkVhc2luZyxcbiAgICAgICAgICBzdGVwOiBjID8gdGhpcy5zdGVwIDogbnVsbCxcbiAgICAgICAgICBjb21wbGV0ZTogYi5fYWZ0ZXJab29tSW4sXG4gICAgICAgIH0pO1xuICAgIH0sXG4gICAgem9vbU91dDogZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIGEgPSBiLmN1cnJlbnQsXG4gICAgICAgIGQgPSBhLmNsb3NlRWZmZWN0LFxuICAgICAgICBlID0gXCJlbGFzdGljXCIgPT09IGQsXG4gICAgICAgIGMgPSB7IG9wYWNpdHk6IDAuMSB9O1xuICAgICAgZSAmJiAoKGMgPSB0aGlzLmdldE9yaWdQb3NpdGlvbigpKSwgYS5jbG9zZU9wYWNpdHkgJiYgKGMub3BhY2l0eSA9IDAuMSkpO1xuICAgICAgYi53cmFwLmFuaW1hdGUoYywge1xuICAgICAgICBkdXJhdGlvbjogXCJub25lXCIgPT09IGQgPyAwIDogYS5jbG9zZVNwZWVkLFxuICAgICAgICBlYXNpbmc6IGEuY2xvc2VFYXNpbmcsXG4gICAgICAgIHN0ZXA6IGUgPyB0aGlzLnN0ZXAgOiBudWxsLFxuICAgICAgICBjb21wbGV0ZTogYi5fYWZ0ZXJab29tT3V0LFxuICAgICAgfSk7XG4gICAgfSxcbiAgICBjaGFuZ2VJbjogZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIGEgPSBiLmN1cnJlbnQsXG4gICAgICAgIGQgPSBhLm5leHRFZmZlY3QsXG4gICAgICAgIGUgPSBhLnBvcyxcbiAgICAgICAgYyA9IHsgb3BhY2l0eTogMSB9LFxuICAgICAgICBmID0gYi5kaXJlY3Rpb24sXG4gICAgICAgIGc7XG4gICAgICBlLm9wYWNpdHkgPSAwLjE7XG4gICAgICBcImVsYXN0aWNcIiA9PT0gZCAmJlxuICAgICAgICAoKGcgPSBcImRvd25cIiA9PT0gZiB8fCBcInVwXCIgPT09IGYgPyBcInRvcFwiIDogXCJsZWZ0XCIpLFxuICAgICAgICBcImRvd25cIiA9PT0gZiB8fCBcInJpZ2h0XCIgPT09IGZcbiAgICAgICAgICA/ICgoZVtnXSA9IHcobChlW2ddKSAtIDIwMCkpLCAoY1tnXSA9IFwiKz0yMDBweFwiKSlcbiAgICAgICAgICA6ICgoZVtnXSA9IHcobChlW2ddKSArIDIwMCkpLCAoY1tnXSA9IFwiLT0yMDBweFwiKSkpO1xuICAgICAgXCJub25lXCIgPT09IGRcbiAgICAgICAgPyBiLl9hZnRlclpvb21JbigpXG4gICAgICAgIDogYi53cmFwXG4gICAgICAgICAgICAuY3NzKGUpXG4gICAgICAgICAgICAuYW5pbWF0ZShjLCB7XG4gICAgICAgICAgICAgIGR1cmF0aW9uOiBhLm5leHRTcGVlZCxcbiAgICAgICAgICAgICAgZWFzaW5nOiBhLm5leHRFYXNpbmcsXG4gICAgICAgICAgICAgIGNvbXBsZXRlOiBiLl9hZnRlclpvb21JbixcbiAgICAgICAgICAgIH0pO1xuICAgIH0sXG4gICAgY2hhbmdlT3V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgYSA9IGIucHJldmlvdXMsXG4gICAgICAgIGQgPSBhLnByZXZFZmZlY3QsXG4gICAgICAgIGUgPSB7IG9wYWNpdHk6IDAuMSB9LFxuICAgICAgICBjID0gYi5kaXJlY3Rpb247XG4gICAgICBcImVsYXN0aWNcIiA9PT0gZCAmJlxuICAgICAgICAoZVtcImRvd25cIiA9PT0gYyB8fCBcInVwXCIgPT09IGMgPyBcInRvcFwiIDogXCJsZWZ0XCJdID1cbiAgICAgICAgICAoXCJ1cFwiID09PSBjIHx8IFwibGVmdFwiID09PSBjID8gXCItXCIgOiBcIitcIikgKyBcIj0yMDBweFwiKTtcbiAgICAgIGEud3JhcC5hbmltYXRlKGUsIHtcbiAgICAgICAgZHVyYXRpb246IFwibm9uZVwiID09PSBkID8gMCA6IGEucHJldlNwZWVkLFxuICAgICAgICBlYXNpbmc6IGEucHJldkVhc2luZyxcbiAgICAgICAgY29tcGxldGU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICBmKHRoaXMpLnRyaWdnZXIoXCJvblJlc2V0XCIpLnJlbW92ZSgpO1xuICAgICAgICB9LFxuICAgICAgfSk7XG4gICAgfSxcbiAgfTtcbiAgYi5oZWxwZXJzLm92ZXJsYXkgPSB7XG4gICAgZGVmYXVsdHM6IHtcbiAgICAgIGNsb3NlQ2xpY2s6ICEwLFxuICAgICAgc3BlZWRPdXQ6IDIwMCxcbiAgICAgIHNob3dFYXJseTogITAsXG4gICAgICBjc3M6IHt9LFxuICAgICAgbG9ja2VkOiAhcyxcbiAgICAgIGZpeGVkOiAhMCxcbiAgICB9LFxuICAgIG92ZXJsYXk6IG51bGwsXG4gICAgZml4ZWQ6ICExLFxuICAgIGVsOiBmKFwiaHRtbFwiKSxcbiAgICBjcmVhdGU6IGZ1bmN0aW9uIChhKSB7XG4gICAgICBhID0gZi5leHRlbmQoe30sIHRoaXMuZGVmYXVsdHMsIGEpO1xuICAgICAgdGhpcy5vdmVybGF5ICYmIHRoaXMuY2xvc2UoKTtcbiAgICAgIHRoaXMub3ZlcmxheSA9IGYoJzxkaXYgY2xhc3M9XCJmYW5jeWJveC1vdmVybGF5XCI+PC9kaXY+JykuYXBwZW5kVG8oXG4gICAgICAgIGIuY29taW5nID8gYi5jb21pbmcucGFyZW50IDogYS5wYXJlbnRcbiAgICAgICk7XG4gICAgICB0aGlzLmZpeGVkID0gITE7XG4gICAgICBhLmZpeGVkICYmXG4gICAgICAgIGIuZGVmYXVsdHMuZml4ZWQgJiZcbiAgICAgICAgKHRoaXMub3ZlcmxheS5hZGRDbGFzcyhcImZhbmN5Ym94LW92ZXJsYXktZml4ZWRcIiksICh0aGlzLmZpeGVkID0gITApKTtcbiAgICB9LFxuICAgIG9wZW46IGZ1bmN0aW9uIChhKSB7XG4gICAgICB2YXIgZCA9IHRoaXM7XG4gICAgICBhID0gZi5leHRlbmQoe30sIHRoaXMuZGVmYXVsdHMsIGEpO1xuICAgICAgdGhpcy5vdmVybGF5XG4gICAgICAgID8gdGhpcy5vdmVybGF5LnVuYmluZChcIi5vdmVybGF5XCIpLndpZHRoKFwiYXV0b1wiKS5oZWlnaHQoXCJhdXRvXCIpXG4gICAgICAgIDogdGhpcy5jcmVhdGUoYSk7XG4gICAgICB0aGlzLmZpeGVkIHx8XG4gICAgICAgIChuLmJpbmQoXCJyZXNpemUub3ZlcmxheVwiLCBmLnByb3h5KHRoaXMudXBkYXRlLCB0aGlzKSksIHRoaXMudXBkYXRlKCkpO1xuICAgICAgYS5jbG9zZUNsaWNrICYmXG4gICAgICAgIHRoaXMub3ZlcmxheS5iaW5kKFwiY2xpY2sub3ZlcmxheVwiLCBmdW5jdGlvbiAoYSkge1xuICAgICAgICAgIGlmIChmKGEudGFyZ2V0KS5oYXNDbGFzcyhcImZhbmN5Ym94LW92ZXJsYXlcIikpXG4gICAgICAgICAgICByZXR1cm4gYi5pc0FjdGl2ZSA/IGIuY2xvc2UoKSA6IGQuY2xvc2UoKSwgITE7XG4gICAgICAgIH0pO1xuICAgICAgdGhpcy5vdmVybGF5LmNzcyhhLmNzcykuc2hvdygpO1xuICAgIH0sXG4gICAgY2xvc2U6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBhLCBiO1xuICAgICAgbi51bmJpbmQoXCJyZXNpemUub3ZlcmxheVwiKTtcbiAgICAgIHRoaXMuZWwuaGFzQ2xhc3MoXCJmYW5jeWJveC1sb2NrXCIpICYmXG4gICAgICAgIChmKFwiLmZhbmN5Ym94LW1hcmdpblwiKS5yZW1vdmVDbGFzcyhcImZhbmN5Ym94LW1hcmdpblwiKSxcbiAgICAgICAgKGEgPSBuLnNjcm9sbFRvcCgpKSxcbiAgICAgICAgKGIgPSBuLnNjcm9sbExlZnQoKSksXG4gICAgICAgIHRoaXMuZWwucmVtb3ZlQ2xhc3MoXCJmYW5jeWJveC1sb2NrXCIpLFxuICAgICAgICBuLnNjcm9sbFRvcChhKS5zY3JvbGxMZWZ0KGIpKTtcbiAgICAgIGYoXCIuZmFuY3lib3gtb3ZlcmxheVwiKS5yZW1vdmUoKS5oaWRlKCk7XG4gICAgICBmLmV4dGVuZCh0aGlzLCB7IG92ZXJsYXk6IG51bGwsIGZpeGVkOiAhMSB9KTtcbiAgICB9LFxuICAgIHVwZGF0ZTogZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIGEgPSBcIjEwMCVcIixcbiAgICAgICAgYjtcbiAgICAgIHRoaXMub3ZlcmxheS53aWR0aChhKS5oZWlnaHQoXCIxMDAlXCIpO1xuICAgICAgSVxuICAgICAgICA/ICgoYiA9IE1hdGgubWF4KEcuZG9jdW1lbnRFbGVtZW50Lm9mZnNldFdpZHRoLCBHLmJvZHkub2Zmc2V0V2lkdGgpKSxcbiAgICAgICAgICBwLndpZHRoKCkgPiBiICYmIChhID0gcC53aWR0aCgpKSlcbiAgICAgICAgOiBwLndpZHRoKCkgPiBuLndpZHRoKCkgJiYgKGEgPSBwLndpZHRoKCkpO1xuICAgICAgdGhpcy5vdmVybGF5LndpZHRoKGEpLmhlaWdodChwLmhlaWdodCgpKTtcbiAgICB9LFxuICAgIG9uUmVhZHk6IGZ1bmN0aW9uIChhLCBiKSB7XG4gICAgICB2YXIgZSA9IHRoaXMub3ZlcmxheTtcbiAgICAgIGYoXCIuZmFuY3lib3gtb3ZlcmxheVwiKS5zdG9wKCEwLCAhMCk7XG4gICAgICBlIHx8IHRoaXMuY3JlYXRlKGEpO1xuICAgICAgYS5sb2NrZWQgJiZcbiAgICAgICAgdGhpcy5maXhlZCAmJlxuICAgICAgICBiLmZpeGVkICYmXG4gICAgICAgIChlIHx8XG4gICAgICAgICAgKHRoaXMubWFyZ2luID1cbiAgICAgICAgICAgIHAuaGVpZ2h0KCkgPiBuLmhlaWdodCgpXG4gICAgICAgICAgICAgID8gZihcImh0bWxcIikuY3NzKFwibWFyZ2luLXJpZ2h0XCIpLnJlcGxhY2UoXCJweFwiLCBcIlwiKVxuICAgICAgICAgICAgICA6ICExKSxcbiAgICAgICAgKGIubG9ja2VkID0gdGhpcy5vdmVybGF5LmFwcGVuZChiLndyYXApKSxcbiAgICAgICAgKGIuZml4ZWQgPSAhMSkpO1xuICAgICAgITAgPT09IGEuc2hvd0Vhcmx5ICYmIHRoaXMuYmVmb3JlU2hvdy5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIH0sXG4gICAgYmVmb3JlU2hvdzogZnVuY3Rpb24gKGEsIGIpIHtcbiAgICAgIHZhciBlLCBjO1xuICAgICAgYi5sb2NrZWQgJiZcbiAgICAgICAgKCExICE9PSB0aGlzLm1hcmdpbiAmJlxuICAgICAgICAgIChmKFwiKlwiKVxuICAgICAgICAgICAgLmZpbHRlcihmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgXCJmaXhlZFwiID09PSBmKHRoaXMpLmNzcyhcInBvc2l0aW9uXCIpICYmXG4gICAgICAgICAgICAgICAgIWYodGhpcykuaGFzQ2xhc3MoXCJmYW5jeWJveC1vdmVybGF5XCIpICYmXG4gICAgICAgICAgICAgICAgIWYodGhpcykuaGFzQ2xhc3MoXCJmYW5jeWJveC13cmFwXCIpXG4gICAgICAgICAgICAgICk7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLmFkZENsYXNzKFwiZmFuY3lib3gtbWFyZ2luXCIpLFxuICAgICAgICAgIHRoaXMuZWwuYWRkQ2xhc3MoXCJmYW5jeWJveC1tYXJnaW5cIikpLFxuICAgICAgICAoZSA9IG4uc2Nyb2xsVG9wKCkpLFxuICAgICAgICAoYyA9IG4uc2Nyb2xsTGVmdCgpKSxcbiAgICAgICAgdGhpcy5lbC5hZGRDbGFzcyhcImZhbmN5Ym94LWxvY2tcIiksXG4gICAgICAgIG4uc2Nyb2xsVG9wKGUpLnNjcm9sbExlZnQoYykpO1xuICAgICAgdGhpcy5vcGVuKGEpO1xuICAgIH0sXG4gICAgb25VcGRhdGU6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHRoaXMuZml4ZWQgfHwgdGhpcy51cGRhdGUoKTtcbiAgICB9LFxuICAgIGFmdGVyQ2xvc2U6IGZ1bmN0aW9uIChhKSB7XG4gICAgICB0aGlzLm92ZXJsYXkgJiZcbiAgICAgICAgIWIuY29taW5nICYmXG4gICAgICAgIHRoaXMub3ZlcmxheS5mYWRlT3V0KGEuc3BlZWRPdXQsIGYucHJveHkodGhpcy5jbG9zZSwgdGhpcykpO1xuICAgIH0sXG4gIH07XG4gIGIuaGVscGVycy50aXRsZSA9IHtcbiAgICBkZWZhdWx0czogeyB0eXBlOiBcImZsb2F0XCIsIHBvc2l0aW9uOiBcImJvdHRvbVwiIH0sXG4gICAgYmVmb3JlU2hvdzogZnVuY3Rpb24gKGEpIHtcbiAgICAgIHZhciBkID0gYi5jdXJyZW50LFxuICAgICAgICBlID0gZC50aXRsZSxcbiAgICAgICAgYyA9IGEudHlwZTtcbiAgICAgIGYuaXNGdW5jdGlvbihlKSAmJiAoZSA9IGUuY2FsbChkLmVsZW1lbnQsIGQpKTtcbiAgICAgIGlmIChxKGUpICYmIFwiXCIgIT09IGYudHJpbShlKSkge1xuICAgICAgICBkID0gZihcbiAgICAgICAgICAnPGRpdiBjbGFzcz1cImZhbmN5Ym94LXRpdGxlIGZhbmN5Ym94LXRpdGxlLScgK1xuICAgICAgICAgICAgYyArXG4gICAgICAgICAgICAnLXdyYXBcIj4nICtcbiAgICAgICAgICAgIGUgK1xuICAgICAgICAgICAgXCI8L2Rpdj5cIlxuICAgICAgICApO1xuICAgICAgICBzd2l0Y2ggKGMpIHtcbiAgICAgICAgICBjYXNlIFwiaW5zaWRlXCI6XG4gICAgICAgICAgICBjID0gYi5za2luO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSBcIm91dHNpZGVcIjpcbiAgICAgICAgICAgIGMgPSBiLndyYXA7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIFwib3ZlclwiOlxuICAgICAgICAgICAgYyA9IGIuaW5uZXI7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgKGMgPSBiLnNraW4pLFxuICAgICAgICAgICAgICBkLmFwcGVuZFRvKFwiYm9keVwiKSxcbiAgICAgICAgICAgICAgSSAmJiBkLndpZHRoKGQud2lkdGgoKSksXG4gICAgICAgICAgICAgIGQud3JhcElubmVyKCc8c3BhbiBjbGFzcz1cImNoaWxkXCI+PC9zcGFuPicpLFxuICAgICAgICAgICAgICAoYi5jdXJyZW50Lm1hcmdpblsyXSArPSBNYXRoLmFicyhsKGQuY3NzKFwibWFyZ2luLWJvdHRvbVwiKSkpKTtcbiAgICAgICAgfVxuICAgICAgICBkW1widG9wXCIgPT09IGEucG9zaXRpb24gPyBcInByZXBlbmRUb1wiIDogXCJhcHBlbmRUb1wiXShjKTtcbiAgICAgIH1cbiAgICB9LFxuICB9O1xuICBmLmZuLmZhbmN5Ym94ID0gZnVuY3Rpb24gKGEpIHtcbiAgICB2YXIgZCxcbiAgICAgIGUgPSBmKHRoaXMpLFxuICAgICAgYyA9IHRoaXMuc2VsZWN0b3IgfHwgXCJcIixcbiAgICAgIGsgPSBmdW5jdGlvbiAoZykge1xuICAgICAgICB2YXIgaCA9IGYodGhpcykuYmx1cigpLFxuICAgICAgICAgIGogPSBkLFxuICAgICAgICAgIGssXG4gICAgICAgICAgbDtcbiAgICAgICAgIWcuY3RybEtleSAmJlxuICAgICAgICAgICFnLmFsdEtleSAmJlxuICAgICAgICAgICFnLnNoaWZ0S2V5ICYmXG4gICAgICAgICAgIWcubWV0YUtleSAmJlxuICAgICAgICAgICFoLmlzKFwiLmZhbmN5Ym94LXdyYXBcIikgJiZcbiAgICAgICAgICAoKGsgPSBhLmdyb3VwQXR0ciB8fCBcImRhdGEtZmFuY3lib3gtZ3JvdXBcIiksXG4gICAgICAgICAgKGwgPSBoLmF0dHIoaykpLFxuICAgICAgICAgIGwgfHwgKChrID0gXCJyZWxcIiksIChsID0gaC5nZXQoMClba10pKSxcbiAgICAgICAgICBsICYmXG4gICAgICAgICAgICBcIlwiICE9PSBsICYmXG4gICAgICAgICAgICBcIm5vZm9sbG93XCIgIT09IGwgJiZcbiAgICAgICAgICAgICgoaCA9IGMubGVuZ3RoID8gZihjKSA6IGUpLFxuICAgICAgICAgICAgKGggPSBoLmZpbHRlcihcIltcIiArIGsgKyAnPVwiJyArIGwgKyAnXCJdJykpLFxuICAgICAgICAgICAgKGogPSBoLmluZGV4KHRoaXMpKSksXG4gICAgICAgICAgKGEuaW5kZXggPSBqKSxcbiAgICAgICAgICAhMSAhPT0gYi5vcGVuKGgsIGEpICYmIGcucHJldmVudERlZmF1bHQoKSk7XG4gICAgICB9O1xuICAgIGEgPSBhIHx8IHt9O1xuICAgIGQgPSBhLmluZGV4IHx8IDA7XG4gICAgIWMgfHwgITEgPT09IGEubGl2ZVxuICAgICAgPyBlLnVuYmluZChcImNsaWNrLmZiLXN0YXJ0XCIpLmJpbmQoXCJjbGljay5mYi1zdGFydFwiLCBrKVxuICAgICAgOiBwXG4gICAgICAgICAgLnVuZGVsZWdhdGUoYywgXCJjbGljay5mYi1zdGFydFwiKVxuICAgICAgICAgIC5kZWxlZ2F0ZShcbiAgICAgICAgICAgIGMgKyBcIjpub3QoJy5mYW5jeWJveC1pdGVtLCAuZmFuY3lib3gtbmF2JylcIixcbiAgICAgICAgICAgIFwiY2xpY2suZmItc3RhcnRcIixcbiAgICAgICAgICAgIGtcbiAgICAgICAgICApO1xuICAgIHRoaXMuZmlsdGVyKFwiW2RhdGEtZmFuY3lib3gtc3RhcnQ9MV1cIikudHJpZ2dlcihcImNsaWNrXCIpO1xuICAgIHJldHVybiB0aGlzO1xuICB9O1xuICBwLnJlYWR5KGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgYSwgZDtcbiAgICBmLnNjcm9sbGJhcldpZHRoID09PSB2ICYmXG4gICAgICAoZi5zY3JvbGxiYXJXaWR0aCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGEgPSBmKFxuICAgICAgICAgICAgJzxkaXYgc3R5bGU9XCJ3aWR0aDo1MHB4O2hlaWdodDo1MHB4O292ZXJmbG93OmF1dG9cIj48ZGl2Lz48L2Rpdj4nXG4gICAgICAgICAgKS5hcHBlbmRUbyhcImJvZHlcIiksXG4gICAgICAgICAgYiA9IGEuY2hpbGRyZW4oKSxcbiAgICAgICAgICBiID0gYi5pbm5lcldpZHRoKCkgLSBiLmhlaWdodCg5OSkuaW5uZXJXaWR0aCgpO1xuICAgICAgICBhLnJlbW92ZSgpO1xuICAgICAgICByZXR1cm4gYjtcbiAgICAgIH0pO1xuICAgIGlmIChmLnN1cHBvcnQuZml4ZWRQb3NpdGlvbiA9PT0gdikge1xuICAgICAgYSA9IGYuc3VwcG9ydDtcbiAgICAgIGQgPSBmKCc8ZGl2IHN0eWxlPVwicG9zaXRpb246Zml4ZWQ7dG9wOjIwcHg7XCI+PC9kaXY+JykuYXBwZW5kVG8oXCJib2R5XCIpO1xuICAgICAgdmFyIGUgPSAyMCA9PT0gZFswXS5vZmZzZXRUb3AgfHwgMTUgPT09IGRbMF0ub2Zmc2V0VG9wO1xuICAgICAgZC5yZW1vdmUoKTtcbiAgICAgIGEuZml4ZWRQb3NpdGlvbiA9IGU7XG4gICAgfVxuICAgIGYuZXh0ZW5kKGIuZGVmYXVsdHMsIHtcbiAgICAgIHNjcm9sbGJhcldpZHRoOiBmLnNjcm9sbGJhcldpZHRoKCksXG4gICAgICBmaXhlZDogZi5zdXBwb3J0LmZpeGVkUG9zaXRpb24sXG4gICAgICBwYXJlbnQ6IGYoXCJib2R5XCIpLFxuICAgIH0pO1xuICAgIGEgPSBmKHIpLndpZHRoKCk7XG4gICAgSi5hZGRDbGFzcyhcImZhbmN5Ym94LWxvY2stdGVzdFwiKTtcbiAgICBkID0gZihyKS53aWR0aCgpO1xuICAgIEoucmVtb3ZlQ2xhc3MoXCJmYW5jeWJveC1sb2NrLXRlc3RcIik7XG4gICAgZihcbiAgICAgIFwiPHN0eWxlIHR5cGU9J3RleHQvY3NzJz4uZmFuY3lib3gtbWFyZ2lue21hcmdpbi1yaWdodDpcIiArXG4gICAgICAgIChkIC0gYSkgK1xuICAgICAgICBcInB4O308L3N0eWxlPlwiXG4gICAgKS5hcHBlbmRUbyhcImhlYWRcIik7XG4gIH0pO1xufSkod2luZG93LCBkb2N1bWVudCwgalF1ZXJ5KTtcbmpRdWVyeShmdW5jdGlvbigpIHtcblx0aW5pdEFuY2hvcnMoKTtcbn0pO1xuXG5cbi8vIGluaXRpYWxpemUgc21vb3RoIGFuY2hvciBsaW5rc1xuZnVuY3Rpb24gaW5pdEFuY2hvcnMoKSB7XG5cdG5ldyBTbW9vdGhTY3JvbGwoe1xuXHRcdC8vIGFuY2hvckxpbmtzOiAnYVtocmVmXj1cIiNcIl06bm90KFtocmVmPVwiI1wiXSknLFxuXHRcdGFuY2hvckxpbmtzOiAnLmJ0bi1iYWNrJyAsXG5cdFx0ZXh0cmFPZmZzZXQ6IDAsXG5cdFx0d2hlZWxCZWhhdmlvcjogJ25vbmUnXG5cdH0pO1xufVxuXG5cbi8qIVxuICogU21vb3RoU2Nyb2xsIG1vZHVsZVxuICovXG47KGZ1bmN0aW9uKCQsIGV4cG9ydHMpIHtcblx0Ly8gcHJpdmF0ZSB2YXJpYWJsZXNcblx0dmFyIHBhZ2UsXG5cdFx0d2luID0gJCh3aW5kb3cpLFxuXHRcdGFjdGl2ZUJsb2NrLCBhY3RpdmVXaGVlbEhhbmRsZXIsXG5cdFx0d2hlZWxFdmVudHMgPSAoJ29ud2hlZWwnIGluIGRvY3VtZW50IHx8IGRvY3VtZW50LmRvY3VtZW50TW9kZSA+PSA5ID8gJ3doZWVsJyA6ICdtb3VzZXdoZWVsIERPTU1vdXNlU2Nyb2xsJyk7XG5cblx0Ly8gYW5pbWF0aW9uIGhhbmRsZXJzXG5cdGZ1bmN0aW9uIHNjcm9sbFRvKG9mZnNldCwgb3B0aW9ucywgY2FsbGJhY2spIHtcblx0XHQvLyBpbml0aWFsaXplIHZhcmlhYmxlc1xuXHRcdHZhciBzY3JvbGxCbG9jaztcblx0XHRpZiAoZG9jdW1lbnQuYm9keSkge1xuXHRcdFx0aWYgKHR5cGVvZiBvcHRpb25zID09PSAnbnVtYmVyJykge1xuXHRcdFx0XHRvcHRpb25zID0ge1xuXHRcdFx0XHRcdGR1cmF0aW9uOiBvcHRpb25zXG5cdFx0XHRcdH07XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcblx0XHRcdH1cblx0XHRcdHBhZ2UgPSBwYWdlIHx8ICQoJ2h0bWwsIGJvZHknKTtcblx0XHRcdHNjcm9sbEJsb2NrID0gb3B0aW9ucy5jb250YWluZXIgfHwgcGFnZTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdC8vIHRyZWF0IHNpbmdsZSBudW1iZXIgYXMgc2Nyb2xsVG9wXG5cdFx0aWYgKHR5cGVvZiBvZmZzZXQgPT09ICdudW1iZXInKSB7XG5cdFx0XHRvZmZzZXQgPSB7XG5cdFx0XHRcdHRvcDogb2Zmc2V0XG5cdFx0XHR9O1xuXHRcdH1cblxuXHRcdC8vIGhhbmRsZSBtb3VzZXdoZWVsL3RyYWNrcGFkIHdoaWxlIGFuaW1hdGlvbiBpcyBhY3RpdmVcblx0XHRpZiAoYWN0aXZlQmxvY2sgJiYgYWN0aXZlV2hlZWxIYW5kbGVyKSB7XG5cdFx0XHRhY3RpdmVCbG9jay5vZmYod2hlZWxFdmVudHMsIGFjdGl2ZVdoZWVsSGFuZGxlcik7XG5cdFx0fVxuXHRcdGlmIChvcHRpb25zLndoZWVsQmVoYXZpb3IgJiYgb3B0aW9ucy53aGVlbEJlaGF2aW9yICE9PSAnbm9uZScpIHtcblx0XHRcdGFjdGl2ZVdoZWVsSGFuZGxlciA9IGZ1bmN0aW9uKGUpIHtcblx0XHRcdFx0aWYgKG9wdGlvbnMud2hlZWxCZWhhdmlvciA9PT0gJ3N0b3AnKSB7XG5cdFx0XHRcdFx0c2Nyb2xsQmxvY2sub2ZmKHdoZWVsRXZlbnRzLCBhY3RpdmVXaGVlbEhhbmRsZXIpO1xuXHRcdFx0XHRcdHNjcm9sbEJsb2NrLnN0b3AoKTtcblx0XHRcdFx0fSBlbHNlIGlmIChvcHRpb25zLndoZWVsQmVoYXZpb3IgPT09ICdpZ25vcmUnKSB7XG5cdFx0XHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdFx0XHR9XG5cdFx0XHR9O1xuXHRcdFx0YWN0aXZlQmxvY2sgPSBzY3JvbGxCbG9jay5vbih3aGVlbEV2ZW50cywgYWN0aXZlV2hlZWxIYW5kbGVyKTtcblx0XHR9XG5cblx0XHQvLyBzdGFydCBzY3JvbGxpbmcgYW5pbWF0aW9uXG5cdFx0c2Nyb2xsQmxvY2suc3RvcCgpLmFuaW1hdGUoe1xuXHRcdFx0c2Nyb2xsTGVmdDogb2Zmc2V0LmxlZnQsXG5cdFx0XHRzY3JvbGxUb3A6IG9mZnNldC50b3Bcblx0XHR9LCBvcHRpb25zLmR1cmF0aW9uLCBmdW5jdGlvbigpIHtcblx0XHRcdGlmIChhY3RpdmVXaGVlbEhhbmRsZXIpIHtcblx0XHRcdFx0c2Nyb2xsQmxvY2sub2ZmKHdoZWVsRXZlbnRzLCBhY3RpdmVXaGVlbEhhbmRsZXIpO1xuXHRcdFx0fVxuXHRcdFx0aWYgKCQuaXNGdW5jdGlvbihjYWxsYmFjaykpIHtcblx0XHRcdFx0Y2FsbGJhY2soKTtcblx0XHRcdH1cblx0XHR9KTtcblx0fVxuXG5cdC8vIHNtb290aCBzY3JvbGwgY29udHN0cnVjdG9yXG5cdGZ1bmN0aW9uIFNtb290aFNjcm9sbChvcHRpb25zKSB7XG5cdFx0dGhpcy5vcHRpb25zID0gJC5leHRlbmQoe1xuXHRcdFx0YW5jaG9yTGlua3M6ICdhW2hyZWZePVwiI1wiXScsIC8vIHNlbGVjdG9yIG9yIGpRdWVyeSBvYmplY3Rcblx0XHRcdGNvbnRhaW5lcjogbnVsbCwgLy8gc3BlY2lmeSBjb250YWluZXIgZm9yIHNjcm9sbGluZyAoZGVmYXVsdCAtIHdob2xlIHBhZ2UpXG5cdFx0XHRleHRyYU9mZnNldDogbnVsbCwgLy8gZnVuY3Rpb24gb3IgZml4ZWQgbnVtYmVyXG5cdFx0XHRhY3RpdmVDbGFzc2VzOiBudWxsLCAvLyBudWxsLCBcImxpbmtcIiwgXCJwYXJlbnRcIlxuXHRcdFx0ZWFzaW5nOiAnc3dpbmcnLCAvLyBlYXNpbmcgb2Ygc2Nyb2xsaW5nXG5cdFx0XHRhbmltTW9kZTogJ2R1cmF0aW9uJywgLy8gb3IgXCJzcGVlZFwiIG1vZGVcblx0XHRcdGFuaW1EdXJhdGlvbjogODAwLCAvLyB0b3RhbCBkdXJhdGlvbiBmb3Igc2Nyb2xsIChhbnkgZGlzdGFuY2UpXG5cdFx0XHRhbmltU3BlZWQ6IDE1MDAsIC8vIHBpeGVscyBwZXIgc2Vjb25kXG5cdFx0XHRhbmNob3JBY3RpdmVDbGFzczogJ2FuY2hvci1hY3RpdmUnLFxuXHRcdFx0c2VjdGlvbkFjdGl2ZUNsYXNzOiAnc2VjdGlvbi1hY3RpdmUnLFxuXHRcdFx0d2hlZWxCZWhhdmlvcjogJ3N0b3AnLCAvLyBcInN0b3BcIiwgXCJpZ25vcmVcIiBvciBcIm5vbmVcIlxuXHRcdFx0dXNlTmF0aXZlQW5jaG9yU2Nyb2xsaW5nOiBmYWxzZSAvLyBkbyBub3QgaGFuZGxlIGNsaWNrIGluIGRldmljZXMgd2l0aCBuYXRpdmUgc21vb3RoIHNjcm9sbGluZ1xuXHRcdH0sIG9wdGlvbnMpO1xuXHRcdHRoaXMuaW5pdCgpO1xuXHR9XG5cdFNtb290aFNjcm9sbC5wcm90b3R5cGUgPSB7XG5cdFx0aW5pdDogZnVuY3Rpb24oKSB7XG5cdFx0XHR0aGlzLmluaXRTdHJ1Y3R1cmUoKTtcblx0XHRcdHRoaXMuYXR0YWNoRXZlbnRzKCk7XG5cdFx0XHR0aGlzLmlzSW5pdCA9IHRydWU7XG5cdFx0fSxcblx0XHRpbml0U3RydWN0dXJlOiBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBzZWxmID0gdGhpcztcblxuXHRcdFx0dGhpcy5jb250YWluZXIgPSB0aGlzLm9wdGlvbnMuY29udGFpbmVyID8gJCh0aGlzLm9wdGlvbnMuY29udGFpbmVyKSA6ICQoJ2h0bWwsYm9keScpO1xuXHRcdFx0dGhpcy5zY3JvbGxDb250YWluZXIgPSB0aGlzLm9wdGlvbnMuY29udGFpbmVyID8gdGhpcy5jb250YWluZXIgOiB3aW47XG5cdFx0XHR0aGlzLmFuY2hvckxpbmtzID0galF1ZXJ5KHRoaXMub3B0aW9ucy5hbmNob3JMaW5rcykuZmlsdGVyKGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRyZXR1cm4galF1ZXJ5KHNlbGYuZ2V0QW5jaG9yVGFyZ2V0KGpRdWVyeSh0aGlzKSkpLmxlbmd0aDtcblx0XHRcdH0pO1xuXHRcdH0sXG5cdFx0Z2V0SWQ6IGZ1bmN0aW9uKHN0cikge1xuXHRcdFx0dHJ5IHtcblx0XHRcdFx0cmV0dXJuICcjJyArIHN0ci5yZXBsYWNlKC9eLio/KCN8JCkvLCAnJyk7XG5cdFx0XHR9IGNhdGNoIChlcnIpIHtcblx0XHRcdFx0cmV0dXJuIG51bGw7XG5cdFx0XHR9XG5cdFx0fSxcblx0XHRnZXRBbmNob3JUYXJnZXQ6IGZ1bmN0aW9uKGxpbmspIHtcblx0XHRcdC8vIGdldCB0YXJnZXQgYmxvY2sgZnJvbSBsaW5rIGhyZWZcblx0XHRcdHZhciB0YXJnZXRJZCA9IHRoaXMuZ2V0SWQoJChsaW5rKS5hdHRyKCdocmVmJykpO1xuXHRcdFx0cmV0dXJuICQodGFyZ2V0SWQubGVuZ3RoID4gMSA/IHRhcmdldElkIDogJ2h0bWwnKTtcblx0XHR9LFxuXHRcdGdldFRhcmdldE9mZnNldDogZnVuY3Rpb24oYmxvY2spIHtcblx0XHRcdC8vIGdldCB0YXJnZXQgb2Zmc2V0XG5cdFx0XHR2YXIgYmxvY2tPZmZzZXQgPSBibG9jay5vZmZzZXQoKS50b3A7XG5cdFx0XHRpZiAodGhpcy5vcHRpb25zLmNvbnRhaW5lcikge1xuXHRcdFx0XHRibG9ja09mZnNldCAtPSB0aGlzLmNvbnRhaW5lci5vZmZzZXQoKS50b3AgLSB0aGlzLmNvbnRhaW5lci5wcm9wKCdzY3JvbGxUb3AnKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gaGFuZGxlIGV4dHJhIG9mZnNldFxuXHRcdFx0aWYgKHR5cGVvZiB0aGlzLm9wdGlvbnMuZXh0cmFPZmZzZXQgPT09ICdudW1iZXInKSB7XG5cdFx0XHRcdGJsb2NrT2Zmc2V0IC09IHRoaXMub3B0aW9ucy5leHRyYU9mZnNldDtcblx0XHRcdH0gZWxzZSBpZiAodHlwZW9mIHRoaXMub3B0aW9ucy5leHRyYU9mZnNldCA9PT0gJ2Z1bmN0aW9uJykge1xuXHRcdFx0XHRibG9ja09mZnNldCAtPSB0aGlzLm9wdGlvbnMuZXh0cmFPZmZzZXQoYmxvY2spO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHtcblx0XHRcdFx0dG9wOiBibG9ja09mZnNldFxuXHRcdFx0fTtcblx0XHR9LFxuXHRcdGF0dGFjaEV2ZW50czogZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgc2VsZiA9IHRoaXM7XG5cblx0XHRcdC8vIGhhbmRsZSBhY3RpdmUgY2xhc3Nlc1xuXHRcdFx0aWYgKHRoaXMub3B0aW9ucy5hY3RpdmVDbGFzc2VzICYmIHRoaXMuYW5jaG9yTGlua3MubGVuZ3RoKSB7XG5cdFx0XHRcdC8vIGNhY2hlIHN0cnVjdHVyZVxuXHRcdFx0XHR0aGlzLmFuY2hvckRhdGEgPSBbXTtcblxuXHRcdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuYW5jaG9yTGlua3MubGVuZ3RoOyBpKyspIHtcblx0XHRcdFx0XHR2YXIgbGluayA9IGpRdWVyeSh0aGlzLmFuY2hvckxpbmtzW2ldKSxcblx0XHRcdFx0XHRcdHRhcmdldEJsb2NrID0gc2VsZi5nZXRBbmNob3JUYXJnZXQobGluayksXG5cdFx0XHRcdFx0XHRhbmNob3JEYXRhSXRlbSA9IG51bGw7XG5cblx0XHRcdFx0XHQkLmVhY2goc2VsZi5hbmNob3JEYXRhLCBmdW5jdGlvbihpbmRleCwgaXRlbSkge1xuXHRcdFx0XHRcdFx0aWYgKGl0ZW0uYmxvY2tbMF0gPT09IHRhcmdldEJsb2NrWzBdKSB7XG5cdFx0XHRcdFx0XHRcdGFuY2hvckRhdGFJdGVtID0gaXRlbTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9KTtcblxuXHRcdFx0XHRcdGlmIChhbmNob3JEYXRhSXRlbSkge1xuXHRcdFx0XHRcdFx0YW5jaG9yRGF0YUl0ZW0ubGluayA9IGFuY2hvckRhdGFJdGVtLmxpbmsuYWRkKGxpbmspO1xuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRzZWxmLmFuY2hvckRhdGEucHVzaCh7XG5cdFx0XHRcdFx0XHRcdGxpbms6IGxpbmssXG5cdFx0XHRcdFx0XHRcdGJsb2NrOiB0YXJnZXRCbG9ja1xuXHRcdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9O1xuXG5cdFx0XHRcdC8vIGFkZCBhZGRpdGlvbmFsIGV2ZW50IGhhbmRsZXJzXG5cdFx0XHRcdHRoaXMucmVzaXplSGFuZGxlciA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdGlmICghc2VsZi5pc0luaXQpIHJldHVybjtcblx0XHRcdFx0XHRzZWxmLnJlY2FsY3VsYXRlT2Zmc2V0cygpO1xuXHRcdFx0XHR9O1xuXHRcdFx0XHR0aGlzLnNjcm9sbEhhbmRsZXIgPSBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRzZWxmLnJlZnJlc2hBY3RpdmVDbGFzcygpO1xuXHRcdFx0XHR9O1xuXG5cdFx0XHRcdHRoaXMucmVjYWxjdWxhdGVPZmZzZXRzKCk7XG5cdFx0XHRcdHRoaXMuc2Nyb2xsQ29udGFpbmVyLm9uKCdzY3JvbGwnLCB0aGlzLnNjcm9sbEhhbmRsZXIpO1xuXHRcdFx0XHR3aW4ub24oJ3Jlc2l6ZSBsb2FkIG9yaWVudGF0aW9uY2hhbmdlIHJlZnJlc2hBbmNob3InLCB0aGlzLnJlc2l6ZUhhbmRsZXIpO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBoYW5kbGUgY2xpY2sgZXZlbnRcblx0XHRcdHRoaXMuY2xpY2tIYW5kbGVyID0gZnVuY3Rpb24oZSkge1xuXHRcdFx0XHRzZWxmLm9uQ2xpY2soZSk7XG5cdFx0XHR9O1xuXHRcdFx0aWYgKCF0aGlzLm9wdGlvbnMudXNlTmF0aXZlQW5jaG9yU2Nyb2xsaW5nKSB7XG5cdFx0XHRcdHRoaXMuYW5jaG9yTGlua3Mub24oJ2NsaWNrJywgdGhpcy5jbGlja0hhbmRsZXIpO1xuXHRcdFx0fVxuXHRcdH0sXG5cdFx0cmVjYWxjdWxhdGVPZmZzZXRzOiBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBzZWxmID0gdGhpcztcblx0XHRcdCQuZWFjaCh0aGlzLmFuY2hvckRhdGEsIGZ1bmN0aW9uKGluZGV4LCBkYXRhKSB7XG5cdFx0XHRcdGRhdGEub2Zmc2V0ID0gc2VsZi5nZXRUYXJnZXRPZmZzZXQoZGF0YS5ibG9jayk7XG5cdFx0XHRcdGRhdGEuaGVpZ2h0ID0gZGF0YS5ibG9jay5vdXRlckhlaWdodCgpO1xuXHRcdFx0fSk7XG5cdFx0XHR0aGlzLnJlZnJlc2hBY3RpdmVDbGFzcygpO1xuXHRcdH0sXG5cdFx0dG9nZ2xlQWN0aXZlQ2xhc3M6IGZ1bmN0aW9uKGFuY2hvciwgYmxvY2ssIHN0YXRlKSB7XG5cdFx0XHRhbmNob3IudG9nZ2xlQ2xhc3ModGhpcy5vcHRpb25zLmFuY2hvckFjdGl2ZUNsYXNzLCBzdGF0ZSk7XG5cdFx0XHRibG9jay50b2dnbGVDbGFzcyh0aGlzLm9wdGlvbnMuc2VjdGlvbkFjdGl2ZUNsYXNzLCBzdGF0ZSk7XG5cdFx0fSxcblx0XHRyZWZyZXNoQWN0aXZlQ2xhc3M6IGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIHNlbGYgPSB0aGlzLFxuXHRcdFx0XHRmb3VuZEZsYWcgPSBmYWxzZSxcblx0XHRcdFx0Y29udGFpbmVySGVpZ2h0ID0gdGhpcy5jb250YWluZXIucHJvcCgnc2Nyb2xsSGVpZ2h0JyksXG5cdFx0XHRcdHZpZXdQb3J0SGVpZ2h0ID0gdGhpcy5zY3JvbGxDb250YWluZXIuaGVpZ2h0KCksXG5cdFx0XHRcdHNjcm9sbFRvcCA9IHRoaXMub3B0aW9ucy5jb250YWluZXIgPyB0aGlzLmNvbnRhaW5lci5wcm9wKCdzY3JvbGxUb3AnKSA6IHdpbi5zY3JvbGxUb3AoKTtcblxuXHRcdFx0Ly8gdXNlciBmdW5jdGlvbiBpbnN0ZWFkIG9mIGRlZmF1bHQgaGFuZGxlclxuXHRcdFx0aWYgKHRoaXMub3B0aW9ucy5jdXN0b21TY3JvbGxIYW5kbGVyKSB7XG5cdFx0XHRcdHRoaXMub3B0aW9ucy5jdXN0b21TY3JvbGxIYW5kbGVyLmNhbGwodGhpcywgc2Nyb2xsVG9wLCB0aGlzLmFuY2hvckRhdGEpO1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdC8vIHNvcnQgYW5jaG9yIGRhdGEgYnkgb2Zmc2V0c1xuXHRcdFx0dGhpcy5hbmNob3JEYXRhLnNvcnQoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0XHRyZXR1cm4gYS5vZmZzZXQudG9wIC0gYi5vZmZzZXQudG9wO1xuXHRcdFx0fSk7XG5cblx0XHRcdC8vIGRlZmF1bHQgYWN0aXZlIGNsYXNzIGhhbmRsZXJcblx0XHRcdCQuZWFjaCh0aGlzLmFuY2hvckRhdGEsIGZ1bmN0aW9uKGluZGV4KSB7XG5cdFx0XHRcdHZhciByZXZlcnNlSW5kZXggPSBzZWxmLmFuY2hvckRhdGEubGVuZ3RoIC0gaW5kZXggLSAxLFxuXHRcdFx0XHRcdGRhdGEgPSBzZWxmLmFuY2hvckRhdGFbcmV2ZXJzZUluZGV4XSxcblx0XHRcdFx0XHRhbmNob3JFbGVtZW50ID0gKHNlbGYub3B0aW9ucy5hY3RpdmVDbGFzc2VzID09PSAncGFyZW50JyA/IGRhdGEubGluay5wYXJlbnQoKSA6IGRhdGEubGluayk7XG5cblx0XHRcdFx0aWYgKHNjcm9sbFRvcCA+PSBjb250YWluZXJIZWlnaHQgLSB2aWV3UG9ydEhlaWdodCkge1xuXHRcdFx0XHRcdC8vIGhhbmRsZSBsYXN0IHNlY3Rpb25cblx0XHRcdFx0XHRpZiAocmV2ZXJzZUluZGV4ID09PSBzZWxmLmFuY2hvckRhdGEubGVuZ3RoIC0gMSkge1xuXHRcdFx0XHRcdFx0c2VsZi50b2dnbGVBY3RpdmVDbGFzcyhhbmNob3JFbGVtZW50LCBkYXRhLmJsb2NrLCB0cnVlKTtcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0c2VsZi50b2dnbGVBY3RpdmVDbGFzcyhhbmNob3JFbGVtZW50LCBkYXRhLmJsb2NrLCBmYWxzZSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdC8vIGhhbmRsZSBvdGhlciBzZWN0aW9uc1xuXHRcdFx0XHRcdGlmICghZm91bmRGbGFnICYmIChzY3JvbGxUb3AgPj0gZGF0YS5vZmZzZXQudG9wIC0gMSB8fCByZXZlcnNlSW5kZXggPT09IDApKSB7XG5cdFx0XHRcdFx0XHRmb3VuZEZsYWcgPSB0cnVlO1xuXHRcdFx0XHRcdFx0c2VsZi50b2dnbGVBY3RpdmVDbGFzcyhhbmNob3JFbGVtZW50LCBkYXRhLmJsb2NrLCB0cnVlKTtcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0c2VsZi50b2dnbGVBY3RpdmVDbGFzcyhhbmNob3JFbGVtZW50LCBkYXRhLmJsb2NrLCBmYWxzZSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9KTtcblx0XHR9LFxuXHRcdGNhbGN1bGF0ZVNjcm9sbER1cmF0aW9uOiBmdW5jdGlvbihvZmZzZXQpIHtcblx0XHRcdHZhciBkaXN0YW5jZTtcblx0XHRcdGlmICh0aGlzLm9wdGlvbnMuYW5pbU1vZGUgPT09ICdzcGVlZCcpIHtcblx0XHRcdFx0ZGlzdGFuY2UgPSBNYXRoLmFicyh0aGlzLnNjcm9sbENvbnRhaW5lci5zY3JvbGxUb3AoKSAtIG9mZnNldC50b3ApO1xuXHRcdFx0XHRyZXR1cm4gKGRpc3RhbmNlIC8gdGhpcy5vcHRpb25zLmFuaW1TcGVlZCkgKiAxMDAwO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0cmV0dXJuIHRoaXMub3B0aW9ucy5hbmltRHVyYXRpb247XG5cdFx0XHR9XG5cdFx0fSxcblx0XHRvbkNsaWNrOiBmdW5jdGlvbihlKSB7XG5cdFx0XHR2YXIgdGFyZ2V0QmxvY2sgPSB0aGlzLmdldEFuY2hvclRhcmdldChlLmN1cnJlbnRUYXJnZXQpLFxuXHRcdFx0XHR0YXJnZXRPZmZzZXQgPSB0aGlzLmdldFRhcmdldE9mZnNldCh0YXJnZXRCbG9jayk7XG5cblx0XHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0XHRcdHNjcm9sbFRvKHRhcmdldE9mZnNldCwge1xuXHRcdFx0XHRjb250YWluZXI6IHRoaXMuY29udGFpbmVyLFxuXHRcdFx0XHR3aGVlbEJlaGF2aW9yOiB0aGlzLm9wdGlvbnMud2hlZWxCZWhhdmlvcixcblx0XHRcdFx0ZHVyYXRpb246IHRoaXMuY2FsY3VsYXRlU2Nyb2xsRHVyYXRpb24odGFyZ2V0T2Zmc2V0KVxuXHRcdFx0fSk7XG5cdFx0XHR0aGlzLm1ha2VDYWxsYmFjaygnb25CZWZvcmVTY3JvbGwnLCBlLmN1cnJlbnRUYXJnZXQpO1xuXHRcdH0sXG5cdFx0bWFrZUNhbGxiYWNrOiBmdW5jdGlvbihuYW1lKSB7XG5cdFx0XHRpZiAodHlwZW9mIHRoaXMub3B0aW9uc1tuYW1lXSA9PT0gJ2Z1bmN0aW9uJykge1xuXHRcdFx0XHR2YXIgYXJncyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cyk7XG5cdFx0XHRcdGFyZ3Muc2hpZnQoKTtcblx0XHRcdFx0dGhpcy5vcHRpb25zW25hbWVdLmFwcGx5KHRoaXMsIGFyZ3MpO1xuXHRcdFx0fVxuXHRcdH0sXG5cdFx0ZGVzdHJveTogZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgc2VsZiA9IHRoaXM7XG5cblx0XHRcdHRoaXMuaXNJbml0ID0gZmFsc2U7XG5cdFx0XHRpZiAodGhpcy5vcHRpb25zLmFjdGl2ZUNsYXNzZXMpIHtcblx0XHRcdFx0d2luLm9mZigncmVzaXplIGxvYWQgb3JpZW50YXRpb25jaGFuZ2UgcmVmcmVzaEFuY2hvcicsIHRoaXMucmVzaXplSGFuZGxlcik7XG5cdFx0XHRcdHRoaXMuc2Nyb2xsQ29udGFpbmVyLm9mZignc2Nyb2xsJywgdGhpcy5zY3JvbGxIYW5kbGVyKTtcblx0XHRcdFx0JC5lYWNoKHRoaXMuYW5jaG9yRGF0YSwgZnVuY3Rpb24oaW5kZXgpIHtcblx0XHRcdFx0XHR2YXIgcmV2ZXJzZUluZGV4ID0gc2VsZi5hbmNob3JEYXRhLmxlbmd0aCAtIGluZGV4IC0gMSxcblx0XHRcdFx0XHRcdGRhdGEgPSBzZWxmLmFuY2hvckRhdGFbcmV2ZXJzZUluZGV4XSxcblx0XHRcdFx0XHRcdGFuY2hvckVsZW1lbnQgPSAoc2VsZi5vcHRpb25zLmFjdGl2ZUNsYXNzZXMgPT09ICdwYXJlbnQnID8gZGF0YS5saW5rLnBhcmVudCgpIDogZGF0YS5saW5rKTtcblxuXHRcdFx0XHRcdHNlbGYudG9nZ2xlQWN0aXZlQ2xhc3MoYW5jaG9yRWxlbWVudCwgZGF0YS5ibG9jaywgZmFsc2UpO1xuXHRcdFx0XHR9KTtcblx0XHRcdH1cblx0XHRcdHRoaXMuYW5jaG9yTGlua3Mub2ZmKCdjbGljaycsIHRoaXMuY2xpY2tIYW5kbGVyKTtcblx0XHR9XG5cdH07XG5cblx0Ly8gcHVibGljIEFQSVxuXHQkLmV4dGVuZChTbW9vdGhTY3JvbGwsIHtcblx0XHRzY3JvbGxUbzogZnVuY3Rpb24oYmxvY2tPck9mZnNldCwgZHVyYXRpb25Pck9wdGlvbnMsIGNhbGxiYWNrKSB7XG5cdFx0XHRzY3JvbGxUbyhibG9ja09yT2Zmc2V0LCBkdXJhdGlvbk9yT3B0aW9ucywgY2FsbGJhY2spO1xuXHRcdH1cblx0fSk7XG5cblx0Ly8gZXhwb3J0IG1vZHVsZVxuXHRleHBvcnRzLlNtb290aFNjcm9sbCA9IFNtb290aFNjcm9sbDtcbn0oalF1ZXJ5LCB0aGlzKSk7XG4kKGZ1bmN0aW9uKCkge1xuICAgIC8vY2FjaGVzIGEgalF1ZXJ5IG9iamVjdCBjb250YWluaW5nIHRoZSBoZWFkZXIgZWxlbWVudFxuICAgIHZhciBoZWFkZXIgPSAkKFwiYm9keVwiKTtcbiAgICAkKHdpbmRvdykuc2Nyb2xsKGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgc2Nyb2xsID0gJCh3aW5kb3cpLnNjcm9sbFRvcCgpO1xuXG4gICAgICAgIGlmIChzY3JvbGwgPiAwKSB7XG4gICAgICAgICAgICBoZWFkZXIuYWRkQ2xhc3MoXCJzY3JvbGxcIik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBoZWFkZXIucmVtb3ZlQ2xhc3MoXCJzY3JvbGxcIik7XG4gICAgICAgIH1cbiAgICB9KTtcbn0pO1xuJChkb2N1bWVudCkub24oXCJjbGlja1wiLCBcImJ1dHRvbi5wbHVzLCBidXR0b24ubWludXNcIiwgZnVuY3Rpb24gKCkge1xuICB2YXIgcXR5ID0gJCh0aGlzKS5wYXJlbnQoXCIucXVhbnRpdHlcIikuZmluZChcIi5xdHlcIik7XG4gIHZhciB2YWwgPSBwYXJzZUZsb2F0KHF0eS52YWwoKSk7XG4gIHZhciBtYXggPSBwYXJzZUZsb2F0KHF0eS5hdHRyKFwibWF4XCIpKTtcbiAgdmFyIG1pbiA9IHBhcnNlRmxvYXQocXR5LmF0dHIoXCJtaW5cIikpO1xuICB2YXIgc3RlcCA9IHBhcnNlRmxvYXQocXR5LmF0dHIoXCJzdGVwXCIpKTtcblxuICBpZiAoJCh0aGlzKS5pcyhcIi5wbHVzXCIpKSB7XG4gICAgaWYgKG1heCAmJiBtYXggPD0gdmFsKSB7XG4gICAgICBxdHkudmFsKG1heCkuY2hhbmdlKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHF0eS52YWwodmFsICsgc3RlcCkuY2hhbmdlKCk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIGlmIChtaW4gJiYgbWluID49IHZhbCkge1xuICAgICAgcXR5LnZhbChtaW4pLmNoYW5nZSgpO1xuICAgIH0gZWxzZSBpZiAodmFsID4gMSkge1xuICAgICAgcXR5LnZhbCh2YWwgLSBzdGVwKS5jaGFuZ2UoKTtcbiAgICB9XG4gIH1cbn0pO1xuXG5uZXcgV09XKCkuaW5pdCgpO1xuXG4kKGZ1bmN0aW9uICgpIHtcbiAgLy9uYXYgZHJvcGRvd25cbiAgJChcIi5tZW51IC5tZW51LWl0ZW0taGFzLWNoaWxkcmVuIGFcIikub24oXCJjbGlja1wiLCBmdW5jdGlvbiAoKSB7XG4gICAgJCh0aGlzKS5wYXJlbnRzKFwiLm1lbnUtaXRlbS1oYXMtY2hpbGRyZW4gXCIpLnRvZ2dsZUNsYXNzKFwiYWN0aXZlXCIpO1xuICB9KTtcblxuICAvL2J1cmdlci1tZW51XG4gICQoXCIubmF2LW9wZW5lclwiKS5vbihcImNsaWNrXCIsIGZ1bmN0aW9uIChlKSB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICQoXCJib2R5XCIpLnRvZ2dsZUNsYXNzKFwibmF2LWFjdGl2ZVwiKTtcbiAgfSk7XG59KTsiXX0=
